<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name>com.sun.grizzly.http</name>
        <class confirmed="no">
            <name>com.sun.grizzly.http.SelectorThread</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.SelectorThread.SelectorThread()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.SelectorThread.listen()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.SelectorThread.setAdapter(com.sun.grizzly.tcp.Adapter)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.SelectorThread.setAlgorithmClassName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.SelectorThread.setPort(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.grizzly.http.servlet</name>
        <class confirmed="no">
            <name>com.sun.grizzly.http.servlet.ServletAdapter</name>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.servlet.ServletAdapter.ServletAdapter()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.servlet.ServletAdapter.addInitParameter(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.servlet.ServletAdapter.setContextPath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.http.servlet.ServletAdapter.setServletInstance(javax.servlet.Servlet)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.grizzly.standalone</name>
        <class confirmed="no">
            <name>com.sun.grizzly.standalone.StaticStreamAlgorithm</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.grizzly.tcp</name>
        <class confirmed="no">
            <name>com.sun.grizzly.tcp.Adapter</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.GrizzlyContainerProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.grizzly.tcp.Request</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.Request.unparsedURI()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.grizzly.tcp.http11</name>
        <class confirmed="no">
            <name>com.sun.grizzly.tcp.http11.GrizzlyAdapter</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer</inbound>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyAdapter.GrizzlyAdapter()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.GrizzlyContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.grizzly.tcp.http11.GrizzlyInputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.grizzly.tcp.http11.GrizzlyOutputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.grizzly.tcp.http11.GrizzlyRequest</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.afterService(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getHeaderNames()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getInputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getRequest()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getScheme()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getServerName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyRequest.getServerPort()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.grizzly.tcp.http11.GrizzlyResponse</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.GrizzlyContainer$Writer(com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.response</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.afterService(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyResponse.addHeader(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyResponse.getHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyResponse.getOutputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyResponse.setContentLength(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyResponse.setContentType(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.grizzly.tcp.http11.GrizzlyResponse.setStatus(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.grizzly.util.buf</name>
        <class confirmed="no">
            <name>com.sun.grizzly.util.buf.MessageBytes</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.grizzly.util.buf.MessageBytes.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.api</name>
        <class confirmed="no">
            <name>com.sun.jersey.api.InBoundHeaders</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.InBoundHeaders.InBoundHeaders()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.InBoundHeaders.add(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.InBoundHeaders.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.InBoundHeaders.getModCount()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.InBoundHeaders.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.MediaTypes</name>
            <feature confirmed="no">
                <name>com.sun.jersey.api.MediaTypes.WADL</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.NotFoundException</name>
            <feature confirmed="no">
                <name>com.sun.jersey.api.NotFoundException.NotFoundException()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.OutBoundHeaders</name>
            <feature confirmed="no">
                <name>com.sun.jersey.api.OutBoundHeaders.OutBoundHeaders()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.Responses</name>
            <feature confirmed="no">
                <name>com.sun.jersey.api.Responses.methodNotAllowed()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.Responses.noContent()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.Responses.notAcceptable()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.Responses.notModified()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.Responses.preconditionFailed()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.Responses.unsupportedMediaType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.container</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.ContainerCheckedException</name>
            <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerCheckedException.ContainerCheckedException(java.lang.Exception)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.checkType(java.lang.Exception)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerCheckedException.checkType(java.lang.Exception)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.ContainerCheckedException(java.lang.Exception)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.container.ContainerCheckedException.getCause()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.container.ContainerException</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.WebApplicationProviderImpl.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.GrizzlyContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.HttpHandlerContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationProvider.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.ContainerCheckedException(java.lang.Exception)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.container.ContainerException.getCause()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.ContainerFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerFactory.ContainerFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">java.io.File.pathSeparator</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperties()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerListener</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerNotifier</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerNotifier.addListener(com.sun.jersey.spi.container.ContainerListener)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ServiceFinder</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ServiceFinder.find(java.lang.Class, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ServiceFinder.iterator()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.addFirst(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.container.filter</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.GZIPContentEncodingFilter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntityInputStream()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setEntityInputStream(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.GZIPInputStream.GZIPInputStream(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.remove(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.GZIPContentEncodingFilter$Adapter(com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContainerResponseWriter()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getEntity()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setContainerResponseWriter(com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.GZIPContentEncodingFilter$Adapter(com.sun.jersey.spi.container.ContainerResponseWriter)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.crw</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.crw</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.GZIPContentEncodingFilter$Adapter(com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.finish()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.gos</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.zip.GZIPOutputStream</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.GZIPOutputStream.finish()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.gos</name>
                <outbound type="class" confirmed="no">java.util.zip.GZIPOutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.finish()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.crw</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.gos</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.util.zip.GZIPOutputStream</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.GZIPOutputStream.GZIPOutputStream(java.io.OutputStream)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.filter.LoggingFilter</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.LoggingFilter$Adapter(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter(java.io.PrintStream)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter(java.io.PrintStream)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.id</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.loggingStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.NOTIFICATION_PREFIX</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.REQUEST_PREFIX</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.RESPONSE_PREFIX</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.access$000(com.sun.jersey.api.container.filter.LoggingFilter)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.loggingStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.access$100(com.sun.jersey.api.container.filter.LoggingFilter)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.access$200(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.access$300(com.sun.jersey.api.container.filter.LoggingFilter, javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestEntity(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntityInputStream()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setEntityInputStream(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.LoggingFilter$Adapter(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContainerResponseWriter()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setContainerResponseWriter(com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.hc</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.id</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.loggingStream</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$000(com.sun.jersey.api.container.filter.LoggingFilter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestEntity(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.hc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.loggingStream</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$100(com.sun.jersey.api.container.filter.LoggingFilter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.printRequestEntity(byte[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.loggingStream</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.write(byte[])</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.entrySet()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toASCIIString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.entrySet()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$300(com.sun.jersey.api.container.filter.LoggingFilter, javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getStatus()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$200(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter.setId()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.hc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.id</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.toString(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.filter.LoggingFilter$Adapter</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$Adapter.LoggingFilter$Adapter(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponseWriter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.crw</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.this$0</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$Adapter.crw</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.LoggingFilter$Adapter(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$Adapter.finish()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.out</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.access$400(com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$Adapter.out</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.finish()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$Adapter.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.LoggingFilter$Adapter(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.crw</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.out</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.this$0</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$200(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$300(com.sun.jersey.api.container.filter.LoggingFilter, javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream</name>
            <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.out</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.out</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.this$0</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.OutputStream()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.access$400(com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.finish()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.close()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.out</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$000(com.sun.jersey.api.container.filter.LoggingFilter)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$100(com.sun.jersey.api.container.filter.LoggingFilter)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.access$400(com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.out</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.close()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.out</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$000(com.sun.jersey.api.container.filter.LoggingFilter)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.write(byte[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.out</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$000(com.sun.jersey.api.container.filter.LoggingFilter)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.write(byte[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.init()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.out</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$000(com.sun.jersey.api.container.filter.LoggingFilter)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(int)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.write(int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.filter.PostReplaceFilter</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.PostReplaceFilter.PostReplaceFilter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setMethod(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.container.grizzly</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.grizzly.GrizzlyServerFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.GrizzlyServerFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.Adapter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.Adapter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.SelectorThread.SelectorThread()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.SelectorThread.listen()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.SelectorThread.setAdapter(com.sun.grizzly.tcp.Adapter)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.SelectorThread.setAlgorithmClassName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.SelectorThread.setPort(int)</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.standalone.StaticStreamAlgorithm</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.Adapter</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException()</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.initCause(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPort()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getScheme()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.GrizzlyWebContainerFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.servlet.ServletAdapter.ServletAdapter()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.servlet.ServletAdapter.addInitParameter(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.servlet.ServletAdapter.setContextPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.http.servlet.ServletAdapter.setServletInstance(javax.servlet.Servlet)</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.Adapter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.pathSeparatorChar</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPath()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.Servlet</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.http.SelectorThread</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.servlet.Servlet</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.container.httpserver</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.container.httpserver.HttpServerFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.httpserver.HttpServerFactory.HttpServerFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpServer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpHandler</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpServer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpHandler</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpServer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</name>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpHandler</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpServer</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpServer.create(java.net.InetSocketAddress, int)</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpServer.createContext(java.lang.String, com.sun.net.httpserver.HttpHandler)</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpServer.setExecutor(java.util.concurrent.Executor)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpsServer</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpsServer.create(java.net.InetSocketAddress, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.InetSocketAddress</outbound>
                <outbound type="feature" confirmed="no">java.net.InetSocketAddress.InetSocketAddress(int)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPort()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getScheme()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Executor</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.Executors.newCachedThreadPool()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.core</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.core.ApplicationAdapter</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ApplicationAdapter.getClasses()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ApplicationAdapter.getSingletons()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.getClasses()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.getSingletons()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.ApplicationAdapter.getClasses()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.ApplicationAdapter.getSingletons()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.core.ClasspathResourceConfig</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.paths</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.String[].clone()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ClasspathResourceConfig.setPropertiesAndFeatures(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.PROPERTY_CLASSPATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.getClasses()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.reload()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.getElements(java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.getPaths()</name>
                <outbound type="feature" confirmed="no">java.io.File.pathSeparator</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ClasspathResourceConfig.getElements(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.LOGGER</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ClasspathResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getMatchingClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.io.File[])</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.INFO</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.isLoggable(java.util.logging.Level)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.Provider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.reload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.paths</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.reload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.reload()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ClasspathResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.paths</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.clear()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.setPropertiesAndFeatures(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ClasspathResourceConfig.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.core.DefaultResourceConfig</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.classes</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.features</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.languageExtentions</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.mediaExtentions</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.properties</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.singletons</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.ResourceConfig()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.classes</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.features</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeatures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getClasses()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.classes</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.features</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.booleanValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getFeatures()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.features</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getLanguageMappings()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.languageExtentions</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getMediaTypeMappings()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.mediaExtentions</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getProperties()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.properties</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getProperty(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.properties</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.getSingletons()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.singletons</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.languageExtentions</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getLanguageMappings()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.mediaExtentions</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getMediaTypeMappings()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.properties</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperty(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeatures()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperties()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.putAll(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.DefaultResourceConfig.singletons</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getSingletons()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.core.HttpContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.hc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.set(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getThreadLocalHttpContext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.getThreadLocalHttpContext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpContext.getProperties()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpContext.getRequest()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpContext.getResponse()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpContext.getUriInfo()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.core.HttpRequestContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getAbsolutePath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getAcceptableMediaType(java.util.List)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getAcceptableMediaTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getBaseUri()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getCookieNameValueMap()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getCookies()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getEntity(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getHeaderValue(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getMediaType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpRequestContext.getRequestHeaders()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.core.HttpResponseContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpResponseContext.getEntity()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpResponseContext.getHttpHeaders()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpResponseContext.getResponse()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpResponseContext.isResponseSet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpResponseContext.setAnnotations(java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.core.PackagesResourceConfig</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.PROPERTY_PACKAGES</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.packages</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.String[].clone()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.PackagesResourceConfig.setPropertiesAndFeatures(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.getClasses()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.reload()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.getElements(java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.PackagesResourceConfig.getElements(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.LOGGER</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.PackagesResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getMatchingClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.INFO</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.isLoggable(java.util.logging.Level)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.Provider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.reload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.packages</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.reload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.reload()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.PackagesResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.packages</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.clear()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.setPropertiesAndFeatures(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.PackagesResourceConfig.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.core.ResourceConfig</name>
            <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.resourceConfig</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.config</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initResourceConfigFeatures(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.resourceConfig</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.FEATURE_CANONICALIZE_URI_PATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.FEATURE_IMPLICIT_VIEWABLES</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.FEATURE_MATCH_MATRIX_PARAMS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.FEATURE_NORMALIZE_URI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.FEATURE_REDIRECT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_NOTIFIER</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.PROPERTY_DEFAULT_RESOURCE_PROVIDER_CLASS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.PROPERTY_WADL_GENERATOR_CONFIG</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.ResourceConfig()</name>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.Application()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.ResourceConfig.getClasses()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getFeatures()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getLanguageMappings()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getMediaTypeMappings()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getProperties()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getProperty(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getClasses()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableSet(java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getSingletons()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableSet(java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.isRootResourceClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableSet(java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getSingletons()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.isRootResourceClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableSet(java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.core.ResourceConfig.getSingletons()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.isRootResourceClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getInterfaces()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceConfig.validate()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.LOGGER</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getSingletons()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isAbstract(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isInterface(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.WARNING</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.core.ResourceContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceContext</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.core.ResourceContext.getResource(java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.model</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractField</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractField(com.sun.jersey.api.model.AbstractField)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractField(com.sun.jersey.api.model.AbstractField)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.field</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.parameters</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractField(com.sun.jersey.api.model.AbstractField)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.field</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getField()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.getField()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.field</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.getParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.parameters</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractField.toString()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getField()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractMethod</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractMethod.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.method</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractMethod.getMethod()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractMethod.method</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.getMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractMethod.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractModelComponent</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractField</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelComponent.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelComponent.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractModelVisitor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractField(com.sun.jersey.api.model.AbstractField)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractField</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResourceConstructor(com.sun.jersey.api.model.AbstractResourceConstructor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSetterMethod(com.sun.jersey.api.model.AbstractSetterMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractResource</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathAnnotated</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getDeclaringResource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.resource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.resource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.resource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.constructors</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.fields</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.resourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.resourceMethods</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.setterMethods</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.subResourceLocators</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.subResourceMethods</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.constructors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getConstructors()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.fields</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getFields()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getComponents()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getConstructors()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSetterMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getConstructors()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.constructors</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getFields()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.fields</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getResourceClass()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.resourceClass</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getResourceMethods()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.resourceMethods</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getSetterMethods()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.setterMethods</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.subResourceLocators</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.subResourceMethods</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.isRootResource()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.isSubResource()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.resourceClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.resourceMethods</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.setterMethods</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSetterMethods()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.subResourceLocators</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.subResourceMethods</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.toString()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getConstructors()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getFields()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSetterMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResource.uriPath</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isRootResource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isSubResource()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractResourceConstructor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResourceConstructor(com.sun.jersey.api.model.AbstractResourceConstructor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceConstructor(com.sun.jersey.api.model.AbstractResourceConstructor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.ctor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.parameters</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceConstructor.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResourceConstructor(com.sun.jersey.api.model.AbstractResourceConstructor)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceConstructor.ctor</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.getCtor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceConstructor.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceConstructor.getCtor()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.ctor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceConstructor.getParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.parameters</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceConstructor.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.getParameters()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractResourceMethod</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.EntityParamDispatchProvider$ObjectOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.EntityParamDispatchProvider$ResponseOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.EntityParamDispatchProvider$VoidOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.FormDispatchProvider$ObjectOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.FormDispatchProvider$ResponseOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.FormDispatchProvider$VoidOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.HttpReqResDispatchProvider$HttpReqResDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker.VoidVoidDispatchProvider$VoidVoidMethodInvoker(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.annotations</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.consumeMimeList</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.httpMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.parameters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.produceMimeList</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.resource</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toUpperCase()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.annotations</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getAnnotations()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.consumeMimeList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getAnnotations()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.annotations</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getDeclaringResource()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.resource</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.httpMethod</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.parameters</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.consumeMimeList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.produceMimeList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.httpMethod</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.produceMimeList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.resource</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getDeclaringResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractResourceMethod.toString()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractSetterMethod</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSetterMethod(com.sun.jersey.api.model.AbstractSetterMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSetterMethod(com.sun.jersey.api.model.AbstractSetterMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.parameters</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSetterMethod(com.sun.jersey.api.model.AbstractSetterMethod)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.getMethod()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.getParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.parameters</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.method</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSetterMethod.toString()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractSubResourceLocator</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathAnnotated</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.parameters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.getMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.getParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.parameters</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.getPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceLocator.getMethod()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceLocator.uriPath</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getPath()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.AbstractSubResourceMethod</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathAnnotated</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.accept(com.sun.jersey.api.model.AbstractModelVisitor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.getHttpMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.getMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.uriPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.getSupportedInputTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.getSupportedOutputTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.AbstractSubResourceMethod.uriPath</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.model.Parameter</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.MultipartFormDispatchProvider$MultipartFormParamInjectable(com.sun.jersey.spi.MessageBodyWorkers, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.p</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, com.sun.jersey.api.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.getAnnotation()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.getDefaultValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.getParameterClass()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.getParameterType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.getSource()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.getSourceName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.hasDefaultValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter.isEncoded()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.model.Parameter$Source</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._parameterSource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.getAnnotationTypeBySource(com.sun.jersey.api.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.CONTEXT</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getSource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.COOKIE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getSource()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.ENTITY</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.HEADER</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getSource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.MATRIX</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getSource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.PATH</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getSource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.QUERY</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getSource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.UNKNOWN</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.model.Parameter$Source.values()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.Parameterized</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractField</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.Parameterized.getParameters()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.PathAnnotated</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.PathAnnotated.getPath()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.PathValue</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isRootResource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isSubResource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.uriPath</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.uriPath</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.uriPath</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathAnnotated.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.PathValue.PathValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.value</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.PathValue.getValue()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.PathValue.toString()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.PathValue.value</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.PathValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.model.ResourceModelIssue</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.fatal</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.message</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.source</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.fatal</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.isFatal()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.getMessage()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.message</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.getSource()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.source</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.isFatal()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.fatal</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.message</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.model.ResourceModelIssue.source</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.getSource()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.api.representation</name>
        <class confirmed="no">
            <name>com.sun.jersey.api.representation.Form</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.representation.Form.getFirst(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.api.uri</name>
        <class confirmed="no">
            <name>com.sun.jersey.api.uri.ExtendedUriInfo</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.ExtendedUriInfo.getAbsolutePath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.ExtendedUriInfo.getPathParameters(boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.ExtendedUriInfo.getPathSegments(boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.ExtendedUriInfo.getPathSegments(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.ExtendedUriInfo.getQueryParameters(boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.uri.UriComponent</name>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriComponent.decode(java.lang.String, com.sun.jersey.api.uri.UriComponent$Type)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriComponent.decodePath(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriComponent.decodeQuery(java.net.URI, boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriComponent.encode(java.lang.String, com.sun.jersey.api.uri.UriComponent$Type)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.uri.UriComponent$Type</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriComponent$Type.PATH</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriComponent$Type.PATH_SEGMENT</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.uri.UriPattern</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.p</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getPattern()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pattern</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriPattern.EMPTY</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriPattern.UriPattern(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriPattern.getRegex()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriPattern.match(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriPattern.match(java.lang.CharSequence, java.util.List)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.api.uri.UriTemplate</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getTemplate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.template</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.getTemplate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.template</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.ResourceClassRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.ResourceObjectRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriTemplate.EMPTY</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriTemplate.UriTemplate(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriTemplate.endsWithSlash()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriTemplate.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriTemplate.getTemplate()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.uri.UriTemplate.getTemplateVariables()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.view</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.view.Viewable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.view.Viewable.Viewable(java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.model</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.templateName</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.ResolvedViewable(com.sun.jersey.spi.template.TemplateProcessor, java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.view.Viewable.getModel()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.model</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.view.Viewable.getTemplateName()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.templateName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.view.Viewable.model</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.Viewable(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.getModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.view.Viewable.templateName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.Viewable(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.getTemplateName()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.wadl</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.WadlGeneratorTask</name>
            <outbound type="class" confirmed="no">org.apache.tools.ant.Task</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.WadlGeneratorTask()</name>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.Task.Task()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.baseUri</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.getbaseUri()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setBaseUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.classpath</name>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.getClasspath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspath(org.apache.tools.ant.types.Path)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[], java.lang.ClassLoader)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.classpath</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.BuildException.BuildException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Path</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.types.Path.list()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.classpath</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.wadl.WadlGeneratorTask.getProject()</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.Project</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Path</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.types.Path.Path(org.apache.tools.ant.Project)</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.types.Path.createPath()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspathRef(org.apache.tools.ant.types.Reference)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.baseUri</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.classpath</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.wadl.WadlGeneratorTask.getLocation()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.wadlFile</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResources()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.setBase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedOutputStream.BufferedOutputStream(java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.createMarshaller()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.newInstance(java.lang.String, java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Marshaller</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Marshaller.marshal(java.lang.Object, java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.BuildException</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.BuildException.BuildException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.BuildException.BuildException(java.lang.String, org.apache.tools.ant.Location)</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.BuildException.BuildException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.Location</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Path</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.types.Path.list()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.getClasspath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.classpath</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Path</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.getDestfile()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.wadlFile</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.getLocation()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.getProject()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.getbaseUri()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.baseUri</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.setBaseUri(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.baseUri</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspath(org.apache.tools.ant.types.Path)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.classpath</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Path</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.types.Path.append(org.apache.tools.ant.types.Path)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspathRef(org.apache.tools.ant.types.Reference)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Path</outbound>
                <outbound type="feature" confirmed="no">org.apache.tools.ant.types.Path.setRefid(org.apache.tools.ant.types.Reference)</outbound>
                <outbound type="class" confirmed="no">org.apache.tools.ant.types.Reference</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.setDestfile(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.wadlFile</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask.wadlFile</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.getDestfile()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setDestfile(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.WadlGeneratorTask$Loader</name>
            <outbound type="class" confirmed="no">java.net.URLClassLoader</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.URLClassLoader(java.net.URL[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[], java.lang.ClassLoader)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.URLClassLoader(java.net.URL[], java.lang.ClassLoader)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.findClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.findClass(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</name>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.net.URL[]</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[], java.lang.ClassLoader)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.api.wadl.config</name>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.WadlGeneratorConfig$WadlGeneratorConfigImpl(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig._wadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig._wadlGenerator</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig.configure()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.WadlGeneratorConfig$WadlGeneratorConfigBuilder()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.configure()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1(com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.WadlGeneratorConfig$WadlGeneratorConfigBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder._generators</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder._generators</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.WadlGeneratorConfig$WadlGeneratorConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1(com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder, com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder._generators</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder._generators</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1(com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder, com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl(com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1(com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._descriptions</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._description</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.descriptions()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._descriptions</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.descriptions()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._description</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._descriptions</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.WadlGeneratorConfig$WadlGeneratorConfigImpl(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.descriptions()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._description</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._descriptions</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._description</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._descriptions</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setGeneratorClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._description</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getProperties()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setProperties(java.util.Properties)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1(com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl._wadlGenerator</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.getWadlGenerator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.configure()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.getWadlGenerator()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl._wadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.WadlGeneratorConfig$WadlGeneratorConfigImpl(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl._descriptions</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl._descriptions</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.WadlGeneratorConfig$WadlGeneratorConfigImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.configure()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl._descriptions</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.WadlGeneratorConfigLoader()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.init()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.WadlGeneratorImpl()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.asSubclass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._description</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.descriptions()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription(java.lang.Class, java.util.Properties)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._generatorClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._properties</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription._generatorClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription(java.lang.Class, java.util.Properties)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getGeneratorClass()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setGeneratorClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription._properties</name>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription(java.lang.Class, java.util.Properties)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setProperties(java.util.Properties)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getGeneratorClass()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._generatorClass</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getProperties()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._properties</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setGeneratorClass(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._generatorClass</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setProperties(java.util.Properties)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._properties</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.WadlGeneratorLoader()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethods()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getGeneratorClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getProperties()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.init()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.WadlGeneratorImpl()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.init()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.WadlGeneratorImpl()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toUpperCase()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.net.URISyntaxException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toURI()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.api.wadl.config.WadlGeneratorLoader.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.BuildId</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.BuildId.BuildId()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.BuildId._initiateBuildId()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getResourceAsStream(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.load(java.io.InputStream)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.BuildId.buildId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.getBuildId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.BuildId.getBuildId()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.buildId</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.BuildId.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.buildId</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.ImplMessages</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.AMBIGUOUS_SRLS(java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.AMBIGUOUS_SRMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.AMBIGUOUS_SRMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.BAD_ACCEPT_FIELD(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.BAD_CLASS_CONSUMEMIME(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.BAD_CLASS_PRODUCEMIME(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.BAD_METHOD_CONSUMEMIME(java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.BAD_METHOD_HTTPMETHOD(java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.BAD_METHOD_PRODUCEMIME(java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.DEFAULT_COULD_NOT_PROCESS_CONSTRUCTOR(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_GET_CONSUMES_ENTITY(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_GET_RETURNS_VOID(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_NO_SUB_RES_METHOD_LOCATOR_FOUND(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_SUBRES_LOC_RETURNS_VOID(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ERROR_SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.FATAL_ISSUES_FOUND_AT_RES_CLASS(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.NON_PUB_RES_METHOD(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.NOT_VALID_HTTPMETHOD(java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.NO_ROOT_RES_IN_RES_CFG()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.OBJECT_NOT_A_WEB_RESOURCE(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.RESOURCE_METHOD(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.ROOT_RES_NO_PUBLIC_CTOR(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ImplMessages.WEB_APP_ALREADY_INITIATED()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.MultivaluedMapImpl</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.decodedTemplateValues</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.encodedTemplateValues</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.MultivaluedMapImpl.MultivaluedMapImpl()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.MultivaluedMapImpl.addFirst(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.MultivaluedMapImpl.entrySet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.MultivaluedMapImpl.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.ResponseBuilderImpl</name>
            <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.CACHE_CONTROL</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.CONTENT_LANGUAGE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.CONTENT_LOCATION</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.CONTENT_TYPE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.EMPTY_VALUES</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.ETAG</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.HEADER_ARRAY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.getHeader(int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.HEADER_MAP</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.LAST_MODIFIED</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.LOCATION</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.Response$ResponseBuilder()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createResponseBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.nameValuePairs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.values</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.Response$ResponseBuilder()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.clone()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.nameValuePairs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cookie(javax.ws.rs.core.NewCookie[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.expires(java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.append(java.lang.StringBuilder, boolean, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.build()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.EMPTY_VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.nameValuePairs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.reset()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.values</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.cacheControl(javax.ws.rs.core.CacheControl)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.CacheControl</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.clone()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</outbound>
                <outbound type="class" confirmed="no">java.lang.CloneNotSupportedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.contentLocation(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.cookie(javax.ws.rs.core.NewCookie[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.NewCookie</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.util.KeyComparator</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.util.KeyComparatorHashMap.KeyComparatorHashMap(com.sun.jersey.impl.util.KeyComparator)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.util.StringIgnoreCaseKeyComparator</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.util.StringIgnoreCaseKeyComparator.SINGLETON</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.entity</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityType</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.entityType</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityType</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.expires(java.util.Date)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.getHeader(int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.HEADER_ARRAY</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.HEADER_MAP</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.language(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.language(java.util.Locale)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.lastModified(java.util.Date)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.location(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.nameValuePairs</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.nameValuePairs</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cookie(javax.ws.rs.core.NewCookie[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.reset()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.nameValuePairs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.values</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.HEADER_MAP</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.values</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.size()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cacheControl(javax.ws.rs.core.CacheControl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.contentLocation(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.lastModified(java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.location(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.EMPTY_VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.HEADER_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.HEADER_MAP</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.status</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.status(int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.tag(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.EntityTag.EntityTag(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.tag(javax.ws.rs.core.EntityTag)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.EntityTag</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.type(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.type(javax.ws.rs.core.MediaType)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.values</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.util.Locale)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getEncoding()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getLanguage()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getMediaType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.append(java.lang.StringBuilder, boolean, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(java.util.Locale, java.util.Locale)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getEncoding()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getLanguage()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getMediaType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.vary(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.vary(java.util.Locale, java.util.Locale)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseBuilderImpl.vary(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.ResponseImpl</name>
            <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.entityType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.nameValuePairs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.status</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.values</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.Response()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.entity</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getEntity()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.entityType</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getEntityType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.getEntity()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.entity</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.getEntityType()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.entityType</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.getMetadata()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.OutBoundHeaders.OutBoundHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.getHeader(int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.nameValuePairs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.values</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.OutBoundHeaders.OutBoundHeaders()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getBaseUri()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.getHeader(int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.nameValuePairs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.status</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.values</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getRawFragment()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getRawPath()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getRawQuery()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.isAbsolute()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fragment(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.path(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.replaceQuery(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.getStatus()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.status</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.headers</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.nameValuePairs</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.status</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getStatus()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ResponseImpl.values</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.ThreadLocalHttpContext</name>
            <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$000(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.context</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getThreadLocalHttpContext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ThreadLocalHttpContext.ThreadLocalHttpContext()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.context</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.ThreadLocal()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ThreadLocalHttpContext.context</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.ThreadLocalHttpContext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.set(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.context</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.context</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.context</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.context</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.ThreadLocalHttpContext.set(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.context</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.set(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.ThreadLocalInvoker</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.ServletContainer()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.requestInvoker</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.responseInvoker</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ThreadLocalInvoker.ThreadLocalInvoker()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.ThreadLocalNamedInvoker(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.ServletContainer()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ThreadLocalInvoker.getThreadLocal()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ThreadLocalInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.ThreadLocalInvoker.set(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.VariantListBuilderImpl</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.VariantListBuilderImpl.VariantListBuilderImpl()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createVariantListBuilder()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.VariantSelector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.CHARSET_DC</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.ENCODING_DC</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.LANGUAGE_TAG_DC</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.MEDIA_TYPE_DC</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.VariantSelector()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.value()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.CHARSET_DC</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.ENCODING_DC</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.LANGUAGE_TAG_DC</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.MEDIA_TYPE_DC</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker.getDimension(javax.ws.rs.core.Variant)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker.isCompatible(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.insertAfter(com.sun.jersey.impl.VariantSelector$ListEntry)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.removeTail()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.value()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.QualityFactor</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.QualityFactor.getQuality()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.VariantSelector$1()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.VariantSelector$2()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.VariantSelector$3()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.VariantSelector$4()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.CHARSET_DC</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.ENCODING_DC</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.LANGUAGE_TAG_DC</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.MEDIA_TYPE_DC</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.VariantSelector$1</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$1.VariantSelector$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$1.getDimension(javax.ws.rs.core.Variant)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getMediaType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$1.isCompatible(com.sun.jersey.impl.http.header.AcceptableMediaType, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableMediaType</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableMediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$1.isCompatible(java.lang.Object, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(com.sun.jersey.impl.http.header.AcceptableMediaType, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableMediaType</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.VariantSelector$2</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$2.VariantSelector$2()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$2.getDimension(javax.ws.rs.core.Variant)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getLanguage()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$2.isCompatible(com.sun.jersey.impl.http.header.AcceptableLanguageTag, java.util.Locale)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableLanguageTag</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableLanguageTag.isCompatible(java.util.Locale)</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$2.isCompatible(java.lang.Object, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(com.sun.jersey.impl.http.header.AcceptableLanguageTag, java.util.Locale)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableLanguageTag</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.VariantSelector$3</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$3.VariantSelector$3()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getParameters()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getMediaType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$3.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken.isCompatible(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$3.isCompatible(java.lang.Object, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.VariantSelector$4</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$4.VariantSelector$4()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$4.getDimension(javax.ws.rs.core.Variant)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Variant.getEncoding()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$4.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken.isCompatible(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$4.isCompatible(java.lang.Object, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.VariantSelector$DimensionChecker</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$2</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$3</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$4</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.CHARSET_DC</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.ENCODING_DC</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.LANGUAGE_TAG_DC</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.MEDIA_TYPE_DC</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.static {}</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$DimensionChecker.getDimension(javax.ws.rs.core.Variant)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$DimensionChecker.isCompatible(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.VariantSelector$ListEntry</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry(com.sun.jersey.impl.VariantSelector$ListEntry, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.prev</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry(com.sun.jersey.impl.VariantSelector$ListEntry, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.insertAfter(com.sun.jersey.impl.VariantSelector$ListEntry)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.prev</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.remove()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.next</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry(com.sun.jersey.impl.VariantSelector$ListEntry, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.insertAfter(com.sun.jersey.impl.VariantSelector$ListEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.removeTail()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.next()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.prev</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry(com.sun.jersey.impl.VariantSelector$ListEntry, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.insertAfter(com.sun.jersey.impl.VariantSelector$ListEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.removeTail()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.remove()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.prev</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.insertAfter(com.sun.jersey.impl.VariantSelector$ListEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.removeTail()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.prev</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.t</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry(com.sun.jersey.impl.VariantSelector$ListEntry, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.value()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.VariantSelector$ListEntry.value()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.application</name>
        <class confirmed="no">
            <name>com.sun.jersey.impl.application.ComponentProviderCache</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.FilterFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.cpc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ComponentProviderCache.ComponentProviderCache(com.sun.jersey.impl.application.InjectableProviderFactory, com.sun.jersey.spi.service.ComponentProvider, java.util.Set, java.util.Set)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ComponentProviderCache.getComponentProvider()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ComponentProviderCache.getInstances(java.lang.Class, java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ComponentProviderCache.getProviders(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ComponentProviderCache.getProvidersAndServices(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ComponentProviderCache.getServices(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ComponentProviderCache.injectOnComponents()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.application.ContextResolverFactory</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.WebApplicationImpl$6(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.ContextResolverFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.val$crf</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ContextResolverFactory.ContextResolverFactory(com.sun.jersey.impl.application.ComponentProviderCache, com.sun.jersey.impl.application.InjectableProviderFactory)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.ContextResolverFactory.resolve(java.lang.reflect.Type, javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.ExceptionMapperFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$800(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.exceptionFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.getProviders(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.ExceptionMapperFactory$ExceptionMapperType(javax.ws.rs.ext.ExceptionMapper, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.emts</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getExceptionType(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ExceptionMapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory.distance(java.lang.Class, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory.emts</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.em</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.distance(java.lang.Class, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.emts</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ExceptionMapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory.getExceptionType(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair.c</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper.resolveTypeVariable(java.lang.Class, java.lang.Class, java.lang.reflect.TypeVariable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getRawType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.TypeVariable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getGenericInterfaces()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getActualTypeArguments()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getRawType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ExceptionMapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getExceptionType(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.ExceptionMapperFactory$ExceptionMapperType(javax.ws.rs.ext.ExceptionMapper, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.em</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ExceptionMapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.ExceptionMapperFactory$ExceptionMapperType(javax.ws.rs.ext.ExceptionMapper, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.em</name>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ExceptionMapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.ExceptionMapperFactory$ExceptionMapperType(javax.ws.rs.ext.ExceptionMapper, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.FilterFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.FilterFactory(com.sun.jersey.impl.application.ComponentProviderCache)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.cpc</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.cpc</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.FilterFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getRequestFilters(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getResponseFilters(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.getInstances(java.lang.Class, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.cpc</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.getComponentProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.cpc</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.getRequestFilters(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.getResponseFilters(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.FilterFactory.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.application.InjectableProviderFactory</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectResources(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectableFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory.InjectableProviderFactory()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory.add(com.sun.jersey.spi.inject.InjectableProvider)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory.configure(com.sun.jersey.impl.application.ComponentProviderCache)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory.injectResources(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectResources(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$aic</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.InjectableProviderFactory$AccessibleObjectContext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.InjectableProviderFactory$AccessibleObjectContext(java.lang.reflect.AccessibleObject, java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.setAccesibleObject(java.lang.reflect.AccessibleObject)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.setAccesibleObject(java.lang.reflect.AccessibleObject, java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.application.MessageBodyFactory</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$700(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.bodyFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getMessageBodyWorkers()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.MessageBodyFactory.MessageBodyFactory(com.sun.jersey.impl.application.ComponentProviderCache)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.MessageBodyFactory.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.MessageBodyFactory.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.application.MessageBodyFactory.init()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.dispatcherFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.getProvidersAndServices(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.dispatchers</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.dispatchers</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatchers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.dispatchers</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.flush()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatchers()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.dispatchers</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationContext</name>
            <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.app</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResults</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.paths</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.response</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.templates</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.app</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.decodedTemplateValues</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.encodedTemplateValues</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePathBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePathBuilder()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getBaseUri()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUri()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getBaseUriBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUriBuilder()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.getTemplateVariables()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getMatchResult()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResult</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getMatchedResources()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.resources</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getMatchedResults()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResults</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getMatchedTemplates()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.templates</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getMatchedURIs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.paths</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getMatchedURIs(boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPath(boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResults</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.templates</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.end(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.start(int)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPathParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type.PATH_SEGMENT</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent.decode(java.lang.String, com.sun.jersey.api.uri.UriComponent$Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl.MultivaluedMapImpl()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl.entrySet()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.decodedTemplateValues</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.encodedTemplateValues</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPathSegments()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResults</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.getLast()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.subList(int, int)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getProperties()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.properties</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters(boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getRequest()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getRequestUri()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getRequestUriBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUriBuilder()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.app</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceComponentProvider()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.provider</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getResponse()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.response</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.app</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.getRules()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.getUriInfo()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.matchResult</name>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchResult()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.setMatchResult(java.util.regex.MatchResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.matchResults</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedResults()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.paths</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedURIs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.properties</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getProperties()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type.PATH_SEGMENT</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent.decode(java.lang.String, com.sun.jersey.api.uri.UriComponent$Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl.MultivaluedMapImpl()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl.addFirst(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.decodedTemplateValues</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.encodedTemplateValues</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResult</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResults</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.addFirst(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.templates</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.addFirst(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.paths</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.addFirst(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.request</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePathBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUri()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUriBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUri()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUriBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.resources</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.response</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.setMatchResult(java.util.regex.MatchResult)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResult</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationContext.templates</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedTemplates()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.app</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.WebApplicationImpl$1(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.WebApplicationImpl$2(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.WebApplicationImpl$3(com.sun.jersey.impl.application.WebApplicationImpl, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.WebApplicationImpl$4(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.WebApplicationImpl$5(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.WebApplicationImpl$6(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.ContextResolverFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.WebApplicationImpl$AdaptingComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.WebApplicationImpl$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$400()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.ThreadLocalHttpContext()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory.InjectableProviderFactory()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory.add(com.sun.jersey.spi.inject.InjectableProvider)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.WebApplicationImpl$1(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.WebApplicationImpl$2(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.WebApplicationImpl$3(com.sun.jersey.impl.application.WebApplicationImpl, java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider.WebApplicationImpl$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.context</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectableFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.metaClassMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.requestFilters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resolverFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.responseFilters</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.getInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.HttpHeaders</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.SecurityContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.WebApplicationProviderImpl.createWebApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.access$000(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectResources(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.inject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.access$400()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.access$500(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.access$600(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.provider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.access$700(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.bodyFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.access$800(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.exceptionFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.bodyFactory</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$700(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getMessageBodyWorkers()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.clone()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getAdaptedComponentProvider()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.provider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.CloneNotSupportedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.context</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$000(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getThreadLocalHttpContext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.RulesMap</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.RulesMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.PathPattern(com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathTemplate.PathTemplate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.ResourceObjectRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.dispatcherFactory</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.exceptionFactory</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$800(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getComponentProvider()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.provider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getMessageBodyWorkers()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.bodyFactory</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getComponentProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceComponentProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.metaClassMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resolverFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getComponentProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceComponentProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.metaClassMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resolverFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getResourceComponentProvider()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.getThreadLocalHttpContext()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.NotFoundException.NotFoundException()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerCheckedException.getCause()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getLanguageMappings()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getMediaTypeMappings()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.set(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.context</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.requestFilters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.responseFilters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.rootsRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isCommitted()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.isEmpty()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.WEB_APP_ALREADY_INITIATED()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.ComponentProviderCache(com.sun.jersey.impl.application.InjectableProviderFactory, com.sun.jersey.spi.service.ComponentProvider, java.util.Set, java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.getServices(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.injectOnComponents()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ContextResolverFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ContextResolverFactory.ContextResolverFactory(com.sun.jersey.impl.application.ComponentProviderCache, com.sun.jersey.impl.application.InjectableProviderFactory)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.FilterFactory(com.sun.jersey.impl.application.ComponentProviderCache)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getRequestFilters(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getResponseFilters(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory.add(com.sun.jersey.spi.inject.InjectableProvider)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory.configure(com.sun.jersey.impl.application.ComponentProviderCache)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory.MessageBodyFactory(com.sun.jersey.impl.application.ComponentProviderCache)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory.init()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.WebApplicationImpl$4(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.WebApplicationImpl$5(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.WebApplicationImpl$6(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.ContextResolverFactory)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.WebApplicationImpl$AdaptingComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.service.ComponentProvider)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.WebApplicationImpl$AdaptingResourceComponentProvider(com.sun.jersey.spi.service.ComponentProvider)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider.WebApplicationImpl$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.WebApplicationImpl$1)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.WebApplicationImpl$DefaultResourceComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl$1)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.bodyFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.dispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.exceptionFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiated</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectableFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.provider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.requestFilters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.responseFilters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.rootsRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.templateContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.wadlFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.RulesMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.CookieParamInjectableProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.HeaderParamInjectableProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.MatrixParamInjectableProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.PathParamInjectableProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.QueryParamInjectableProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.RootResourceClassesRule(java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.Providers</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.initiated</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.injectResources(java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory.injectResources(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectableFactory</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.injectableFactory</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectResources(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.exceptionFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.noContent()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.serverError()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ExceptionMapper</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.ExceptionMapper.toResponse(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.getResponse()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getEntity()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.metaClassMap</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.isFatal()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.FATAL_ISSUES_FOUND_AT_RES_CLASS(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.dispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getComponentProvider()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectableFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.wadlFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.BasicValidator()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.getIssueList()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.WARNING</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.isLoggable(java.util.logging.Level)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.flush()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.type(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getEntity()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.status(int)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isRootResource()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.endsWithSlash()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.NO_ROOT_RES_IN_RES_CFG()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectResources(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.wadlFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.RulesMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.RulesMap.RulesMap()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.RulesMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.PathPattern(com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathTemplate.PathTemplate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.ResourceClassRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.ResourceObjectRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getModifiers()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isAbstract(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isInterface(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.provider</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$600(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getComponentProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.requestFilters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.resolverFactory</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.resourceContext</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.resourceProvider</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$500(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceComponentProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.responseFilters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.rootsRule</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.CharSequence, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.indexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.templateContext</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getLanguageMappings()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getMediaTypeMappings()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.delete(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.indexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.lastIndexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.lastIndexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.toString()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl.wadlFactory</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.WebApplicationImpl$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.WebApplicationImpl$DefaultResourceComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$1.WebApplicationImpl$1(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.this$0</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$000(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.WebApplicationImpl$1(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$2.WebApplicationImpl$2(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.this$0</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$000(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$2.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.WebApplicationImpl$2(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$3</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.WebApplicationImpl$3$1(com.sun.jersey.impl.application.WebApplicationImpl$3, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.this$1</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3.WebApplicationImpl$3(com.sun.jersey.impl.application.WebApplicationImpl, java.util.Map)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.val$m</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.WebApplicationImpl$3$1(com.sun.jersey.impl.application.WebApplicationImpl$3, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.val$m</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Singleton</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.WebApplicationImpl$3(com.sun.jersey.impl.application.WebApplicationImpl, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3.val$m</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.WebApplicationImpl$3(com.sun.jersey.impl.application.WebApplicationImpl, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$3$1</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3$1.WebApplicationImpl$3$1(com.sun.jersey.impl.application.WebApplicationImpl$3, java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.val$o</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3$1.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.val$o</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3$1.this$1</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.WebApplicationImpl$3$1(com.sun.jersey.impl.application.WebApplicationImpl$3, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$3$1.val$o</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.WebApplicationImpl$3$1(com.sun.jersey.impl.application.WebApplicationImpl$3, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$4</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$4.WebApplicationImpl$4(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.this$0</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$000(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$400()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$500(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.provider</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$4.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.WebApplicationImpl$4(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$5</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.this$1</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5.WebApplicationImpl$5(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.this$0</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.InjectableProviderFactory$AccessibleObjectContext(java.lang.reflect.AccessibleObject, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Inject</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentContext.getAccesibleObject()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentContext.getAnnotations()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.AccessibleObject</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Inject</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Undefined</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.WebApplicationImpl$5(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$5$1</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$aic</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$c</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$aic</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$400()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$600(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Undefined</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5$1.this$1</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$aic</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$c</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$6</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.ws.rs.ext.Providers</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$6.WebApplicationImpl$6(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.ContextResolverFactory)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ContextResolverFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.val$crf</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ContextResolverFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ContextResolverFactory.resolve(java.lang.reflect.Type, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.val$crf</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ContextResolver</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$800(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ExceptionMapper</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$700(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyReader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.MessageBodyFactory.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$700(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyWriter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$6.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.WebApplicationImpl$6(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.ContextResolverFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$6.val$crf</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ContextResolverFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.WebApplicationImpl$6(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.ContextResolverFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.WebApplicationImpl$AdaptingComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.service.ComponentProvider)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.this$0</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.WebApplicationImpl$AdaptingComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getAdaptedComponentProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getAdaptedComponentProvider()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInjectableInstance(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.WebApplicationImpl$AdaptingComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.WebApplicationImpl$AdaptingResourceComponentProvider(com.sun.jersey.spi.service.ComponentProvider)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.WebApplicationImpl$AdaptingResourceComponentProvider(com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getAdaptedComponentProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.inject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getAdaptedComponentProvider()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInjectableInstance(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.inject(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.SingletonTypeInjectableProvider</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider.WebApplicationImpl$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.SingletonTypeInjectableProvider.SingletonTypeInjectableProvider(java.lang.reflect.Type, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.WebApplicationImpl$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.WebApplicationImpl$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInjectableInstance(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.inject(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.inject(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.WebApplicationImpl$DefaultResourceComponentProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.WebApplicationImpl$DefaultResourceComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.WebApplicationImpl$DefaultResourceComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.WebApplicationImpl$DefaultResourceComponentProvider()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInjectableInstance(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.inject(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.container</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.WebApplicationProviderImpl</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplicationProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.WebApplicationProviderImpl.WebApplicationProviderImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.WebApplicationProviderImpl.createWebApplication()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.container.config</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner, com.sun.jersey.impl.container.config.AnnotatedClassScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$1</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner, com.sun.jersey.impl.container.config.AnnotatedClassScanner$1)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.annotations</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classes</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classloader</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$100(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.annotations</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$200(com.sun.jersey.impl.container.config.AnnotatedClassScanner, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$300(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classes</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.ClassReader</outbound>
                <outbound type="feature" confirmed="no">org.objectweb.asm.ClassReader.accept(org.objectweb.asm.ClassVisitor, int)</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.ClassVisitor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classVisitor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarEntry</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarFile</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.ClassReader</outbound>
                <outbound type="feature" confirmed="no">org.objectweb.asm.ClassReader.accept(org.objectweb.asm.ClassVisitor, int)</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.ClassVisitor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.annotations</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$100(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.classVisitor</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.classes</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$300(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getMatchingClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.io.File[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.classloader</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replaceAll(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classloader</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$200(com.sun.jersey.impl.container.config.AnnotatedClassScanner, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.openStream()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.ClassReader</outbound>
                <outbound type="feature" confirmed="no">org.objectweb.asm.ClassReader.ClassReader(java.io.InputStream)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarEntry</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarEntry.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarFile</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarFile.getInputStream(java.util.zip.ZipEntry)</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarFile.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.zip.ZipEntry</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.ClassReader</outbound>
                <outbound type="feature" confirmed="no">org.objectweb.asm.ClassReader.ClassReader(java.io.InputStream)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarFile</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarFile.JarFile(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.getMatchingClasses()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classes</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.io.File[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getRawSchemeSpecificPart()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getScheme()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarEntry</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarEntry.getName()</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarEntry.isDirectory()</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarFile</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarFile.close()</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarFile.entries()</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarFile.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.io.File[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classes</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classes</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classloader</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getResources(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.net.URISyntaxException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toURI()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner, com.sun.jersey.impl.container.config.AnnotatedClassScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.objectweb.asm.ClassVisitor</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classVisitor</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.this$0</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner, com.sun.jersey.impl.container.config.AnnotatedClassScanner$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner, com.sun.jersey.impl.container.config.AnnotatedClassScanner$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.className</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isAnnotated</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isScoped</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.className</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isAnnotated</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isScoped</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isAnnotated</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$100(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.AnnotationVisitor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAttribute(org.objectweb.asm.Attribute)</name>
                <outbound type="class" confirmed="no">org.objectweb.asm.Attribute</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.className</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isAnnotated</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isScoped</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$200(com.sun.jersey.impl.container.config.AnnotatedClassScanner, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$300(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replaceAll(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.FieldVisitor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.className</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.isScoped</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.MethodVisitor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitOuterClass(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitSource(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.container.filter</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.filter.NormalizeFilter</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.filter.NormalizeFilter.NormalizeFilter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.resourceConfig</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.UriHelper.normalize(java.net.URI, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.filter.NormalizeFilter.resourceConfig</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.container.grizzly</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer</name>
            <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyAdapter</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerListener</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer.GrizzlyContainer(com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyAdapter.GrizzlyAdapter()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.application</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer.afterService(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer.application</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.GrizzlyContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.onReload()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getScheme()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getServerName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getServerPort()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URISyntaxException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getHeaderNames()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.InBoundHeaders()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.add(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer.onReload()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.application</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.clone()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.Request</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.Request.unparsedURI()</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyInputStream</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyRequest.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.util.buf.MessageBytes</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.util.buf.MessageBytes.toString()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.GrizzlyContainer$Writer(com.sun.grizzly.tcp.http11.GrizzlyResponse)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.resolve(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.GrizzlyContainer$Writer(com.sun.grizzly.tcp.http11.GrizzlyResponse)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.response</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.finish()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.response</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.GrizzlyContainer$Writer(com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyOutputStream</outbound>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse.addHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse.getHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse.getOutputStream()</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse.setContentLength(int)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse.setContentType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.grizzly.tcp.http11.GrizzlyResponse.setStatus(int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.response</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getStatus()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.entrySet()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.GrizzlyContainerProvider()</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.Adapter</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="class" confirmed="no">com.sun.grizzly.tcp.Adapter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.GrizzlyContainer(com.sun.jersey.spi.container.WebApplication)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.container.httpserver</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerListener</outbound>
            <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpHandler</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.HttpHandlerContainer(com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.application</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.application</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.HttpHandlerContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.onReload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.InBoundHeaders()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.Headers</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.Headers.entrySet()</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpExchange</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.HttpHandlerContainer$Writer(com.sun.net.httpserver.HttpExchange)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.Headers</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.Headers.clear()</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpContext.getPath()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpContext.getServer()</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpExchange</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.close()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getHttpContext()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getLocalAddress()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getRequestBody()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getRequestMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getRequestURI()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getResponseBody()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getResponseHeaders()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.sendResponseHeaders(int, long)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpServer</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpsServer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.flush()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.printStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.InetSocketAddress</outbound>
                <outbound type="feature" confirmed="no">java.net.InetSocketAddress.getHostName()</outbound>
                <outbound type="feature" confirmed="no">java.net.InetSocketAddress.getPort()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.resolve(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.net.URISyntaxException</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.path(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.onReload()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.application</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.clone()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.HttpHandlerContainer$Writer(com.sun.net.httpserver.HttpExchange)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.exchange</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpExchange</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.exchange</name>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpExchange</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.HttpHandlerContainer$Writer(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.finish()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.getResponseLength(long)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.exchange</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.getResponseLength(long)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getStatus()</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.Headers</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.Headers.put(java.lang.String, java.util.List)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpExchange</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getResponseBody()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.getResponseHeaders()</outbound>
                <outbound type="feature" confirmed="no">com.sun.net.httpserver.HttpExchange.sendResponseHeaders(int, long)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.entrySet()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.HttpHandlerContainerProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.HttpHandlerContainer(com.sun.jersey.spi.container.WebApplication)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="class" confirmed="no">com.sun.net.httpserver.HttpHandler</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.container.servlet</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.Include</name>
            <outbound type="class" confirmed="no">javax.servlet.jsp.tagext.SimpleTagSupport</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Include.Include()</name>
                <outbound type="feature" confirmed="no">javax.servlet.jsp.tagext.SimpleTagSupport.SimpleTagSupport()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Include.doTag()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.container.servlet.Include.getJspContext()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.getPageObject(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.page</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.Wrapper(javax.servlet.http.HttpServletResponse, java.io.PrintWriter)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.RequestDispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getServletContext()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContext.getRequestDispatcher(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContext.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.servlet.jsp.JspContext</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.jsp.JspContext.getAttribute(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.jsp.JspContext.getOut()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.jsp.JspContext.setAttribute(java.lang.String, java.lang.Object, int)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.jsp.JspException</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.jsp.JspException.JspException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.jsp.JspException.JspException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.jsp.JspWriter</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.container.servlet.Include.getJspContext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.getPageObject(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Include.getPageObject(java.lang.String)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.container.servlet.Include.getJspContext()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.jsp.JspContext</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.jsp.JspContext.getAttribute(java.lang.String, int)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Include.page</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.setPage(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Include.resource</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.setResource(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Include.setPage(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.page</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Include.setResource(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.resource</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.JSPTemplateProcessor(java.lang.ThreadLocal, java.lang.ThreadLocal)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.requestInvoker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.responseInvoker</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.requestInvoker</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.JSPTemplateProcessor(java.lang.ThreadLocal, java.lang.ThreadLocal)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.servletContext</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContext.getResource(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.responseInvoker</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.JSPTemplateProcessor(java.lang.ThreadLocal, java.lang.ThreadLocal)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.servletContext</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.ui</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.requestInvoker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.responseInvoker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.servletContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.ui</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.printStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContext.getRequestDispatcher(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriInfo.getMatchedResources()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.PerSessionProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.PerSessionProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.constructor</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.constructorInjectableParams</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.constructor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.constructorInjectableParams</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.hsr</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.rci</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Undefined</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getSession()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSession.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.hsr</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.constructor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.constructorInjectableParams</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.ipc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.rci</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.ResourceConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.con</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.is</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Singleton</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Undefined</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.ipc</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.PerSessionProvider.rci</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.d</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.it</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.resource</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.d</name>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.d</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.it</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.resource</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.it</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.resource</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.ServletAdaptor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.ServletAdaptor$1(com.sun.jersey.impl.container.servlet.ServletAdaptor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor.ServletAdaptor()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.persistenceUnits</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.ServletContainer()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor.access$000(com.sun.jersey.impl.container.servlet.ServletAdaptor)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.persistenceUnits</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getSingletons()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.ServletAdaptor$1(com.sun.jersey.impl.container.servlet.ServletAdaptor)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.persistenceUnits</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getInitParameter(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getInitParameterNames()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor.persistenceUnits</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.ServletAdaptor()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.access$000(com.sun.jersey.impl.container.servlet.ServletAdaptor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.ServletAdaptor$1$1(com.sun.jersey.impl.container.servlet.ServletAdaptor$1, javax.persistence.EntityManagerFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.this$1</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1.ServletAdaptor$1(com.sun.jersey.impl.container.servlet.ServletAdaptor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.this$0</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.persistence.PersistenceUnit</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.ServletAdaptor$1$1(com.sun.jersey.impl.container.servlet.ServletAdaptor$1, javax.persistence.EntityManagerFactory)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.access$000(com.sun.jersey.impl.container.servlet.ServletAdaptor)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.ThreadLocalNamedInvoker(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManagerFactory</outbound>
                <outbound type="class" confirmed="no">javax.persistence.PersistenceUnit</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.PersistenceUnit.unitName()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Singleton</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.ServletAdaptor$1(com.sun.jersey.impl.container.servlet.ServletAdaptor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.ServletAdaptor$1$1(com.sun.jersey.impl.container.servlet.ServletAdaptor$1, javax.persistence.EntityManagerFactory)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.val$emf</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManagerFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.val$emf</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManagerFactory</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.this$1</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.ServletAdaptor$1$1(com.sun.jersey.impl.container.servlet.ServletAdaptor$1, javax.persistence.EntityManagerFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.val$emf</name>
                <outbound type="class" confirmed="no">javax.persistence.EntityManagerFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.ServletAdaptor$1$1(com.sun.jersey.impl.container.servlet.ServletAdaptor$1, javax.persistence.EntityManagerFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.ServletContainerRequest</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletContainerRequest.getAuthenticationScheme()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.request</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getAuthType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletContainerRequest.getUserPrincipal()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.request</outbound>
                <outbound type="class" confirmed="no">java.security.Principal</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getUserPrincipal()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletContainerRequest.isSecure()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.request</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.isSecure()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletContainerRequest.isUserInRole(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.request</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.isUserInRole(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ServletContainerRequest.request</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getAuthenticationScheme()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getUserPrincipal()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.isSecure()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.isUserInRole(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker</name>
            <outbound type="class" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.ThreadLocalNamedInvoker(java.lang.String)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker.ThreadLocalInvoker()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.get()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.get()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.name</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">javax.naming.Context.lookup(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.naming.InitialContext.InitialContext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.ThreadLocalNamedInvoker(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.set(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.container.servlet.Wrapper</name>
            <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponseWrapper</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Wrapper.Wrapper(javax.servlet.http.HttpServletResponse, java.io.PrintWriter)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.pw</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponseWrapper.HttpServletResponseWrapper(javax.servlet.http.HttpServletResponse)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Wrapper.getWriter()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.pw</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.container.servlet.Wrapper.pw</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.Wrapper(javax.servlet.http.HttpServletResponse, java.io.PrintWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.getWriter()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.impl.http.header</name>
        <class confirmed="no">
            <name>com.sun.jersey.impl.http.header.AcceptableLanguageTag</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(com.sun.jersey.impl.http.header.AcceptableLanguageTag, java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableLanguageTag.AcceptableLanguageTag(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableLanguageTag.getAsLocale()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableLanguageTag.isCompatible(java.util.Locale)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(com.sun.jersey.impl.http.header.AcceptableLanguageTag, java.util.Locale)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.http.header.AcceptableMediaType</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(com.sun.jersey.impl.http.header.AcceptableMediaType, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableMediaType.getQuality()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableMediaType.getType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableMediaType.isCompatible(javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(com.sun.jersey.impl.http.header.AcceptableMediaType, javax.ws.rs.core.MediaType)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.http.header.AcceptableToken</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableToken.AcceptableToken(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.AcceptableToken.isCompatible(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.http.header.HttpHeaderFactory</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptCharset(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptEncoding(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptLanguage(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptMediaType(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.HttpHeaderFactory.createCookies(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.http.header.QualityFactor</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.QualityFactor.getQuality()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.impl.http.header.reader</name>
        <class confirmed="no">
            <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReader</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReader.hasNext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReader.nextSeparator(char)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReader.nextToken()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReader.nextTokenOrQuotedString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReader.readDate(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReaderImpl</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.http.header.reader.HttpHeaderReaderImpl.HttpHeaderReaderImpl(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.model</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.ErrorHelper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ErrorHelper.ErrorHelper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.BAD_CLASS_CONSUMEMIME(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Consumes.value()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.BAD_CLASS_PRODUCEMIME(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Produces.value()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.BAD_METHOD_CONSUMEMIME(java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toString()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Consumes.value()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.BAD_METHOD_HTTPMETHOD(java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toString()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.HttpMethod.value()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.BAD_METHOD_PRODUCEMIME(java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toString()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Produces.value()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.OBJECT_NOT_A_WEB_RESOURCE(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.HttpHelper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.HttpHelper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.type(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.status(int)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getHeaderValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.BAD_ACCEPT_FIELD(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptMediaType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.MediaTypeHelper.GENERAL_ACCEPT_MEDIA_TYPE_LIST</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getHeaderValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken.AcceptableToken(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptCharset(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.singletonList(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getHeaderValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableToken.AcceptableToken(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptEncoding(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.singletonList(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getHeaderValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableLanguageTag.AcceptableLanguageTag(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.HttpHeaderFactory.createAcceptLanguage(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.singletonList(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getRequestHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getType()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.model.MediaTypeHelper</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.MediaTypeHelper.GENERAL_ACCEPT_MEDIA_TYPE_LIST</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.MediaTypeHelper.GENERAL_MEDIA_TYPE_LIST</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.MediaTypeHelper.MEDIA_TYPE_LIST_COMPARATOR</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.MediaTypeHelper.createMediaTypes(javax.ws.rs.Consumes)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.MediaTypeHelper.createMediaTypes(javax.ws.rs.Produces)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.model.ReflectionHelper</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ReflectionHelper.getGenericClass(java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ReflectionHelper.getStringConstructor(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ReflectionHelper.getValueOfStringMethod(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ReflectionHelper.resolveTypeVariable(java.lang.Class, java.lang.Class, java.lang.reflect.TypeVariable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair.c</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair.t</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.ResourceClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriPattern.EMPTY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriPattern.UriPattern(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.endsWithSlash()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.config</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.rules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.wadlFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ResourceMethodMap.isEmpty()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.RulesMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.RulesMap.RulesMap()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.RulesMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.ViewableRule()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.EMPTY_PATH</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.getTemplate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.CombiningMatchingPatterns(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.SequentialMatchingPatterns(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.TerminatingRule()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.ResourceMethodMap()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.PathPattern</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.config</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.mediaEquals(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.getRules()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.rules</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeatures()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperties()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.config</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.provider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ResourceMethodMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.ResourceMethodMap()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.PathPattern</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.wadlFactory</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ResourceMethodMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.PathPattern</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceLocator.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getPath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.endsWithSlash()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.config</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.RulesMap</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.RulesMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.PathPattern(com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathTemplate.PathTemplate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.util.List, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.PathPattern(com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathTemplate.PathTemplate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.provider</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.resource</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.rules</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.getRules()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceClass.wadlFactory</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.ResourceMethodMap</name>
            <outbound type="class" confirmed="no">java.util.HashMap</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceMethodMap.ResourceMethodMap()</name>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ResourceMethodMap.entrySet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ResourceMethodMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ResourceMethodMap.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ResourceMethodMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ResourceMethodMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getHttpMethod()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.ResourceMethodMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.ResourceMethodMap.sort()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ResourceMethodMap.entrySet()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.COMPARATOR</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List, java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.RulesMap</name>
            <outbound type="class" confirmed="no">java.util.TreeMap</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.RulesMap.RulesMap()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.COMPARATOR</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeMap.TreeMap(java.util.Comparator)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.RulesMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.model.method</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.m</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getConsumes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getDispatcher()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getProduces()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getTemplate()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.m</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.toString()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.m</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.ResourceHttpMethod</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.EMPTY</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.NOT_VALID_HTTPMETHOD(java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.ResourceHttpMethod.getDispatcher()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.m</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.ResourceHttpMethod.getDispatcher()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpMethod.m</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.RESOURCE_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.m</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.EMPTY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.MediaTypeHelper.GENERAL_MEDIA_TYPE_LIST</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.allow</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.allow</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.allow</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.header(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.noContent()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.ResourceMethod</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.m</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.toString()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.COMPARATOR</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.EMPTY_LIST</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumeMime</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.dispatcher</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.httpMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.template</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.access$000(com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumeMime</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.access$100(com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.consumeMime</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.access$000(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.mediaEquals(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumeMime</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getType()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.dispatcher</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getDispatcher()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.getConsumes()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.getDispatcher()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.dispatcher</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.getHttpMethod()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.httpMethod</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.getProduces()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.getTemplate()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.template</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.httpMethod</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getHttpMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.mediaEquals(com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumeMime</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.produceMime</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.access$100(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getConsumes()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getProduces()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.mediaEquals(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableMediaType</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableMediaType.getQuality()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableMediaType.getType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getType()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getType()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.ResourceMethod$1()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.COMPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod.template</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getTemplate()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.ResourceMethod$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod$1.ResourceMethod$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.MediaTypeHelper.MEDIA_TYPE_LIST_COMPARATOR</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.access$000(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.access$100(com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="no">java.util.Comparator.compare(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.ResourceMethod$1.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.model.method.dispatch</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.EntityParamDispatchProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.EntityParamDispatchProvider$ObjectOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.EntityParamDispatchProvider$ResponseOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.EntityParamDispatchProvider$VoidOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.GenericEntity</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.ipc</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getDeclaringResource()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair.c</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper$ClassTypePair.t</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper.resolveTypeVariable(java.lang.Class, java.lang.Class, java.lang.reflect.TypeVariable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.ipc</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(com.sun.jersey.api.model.Parameter, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.TypeVariable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.as</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.as</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.as</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.t</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.is</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.EntityParamDispatchProvider$ObjectOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.EntityParamDispatchProvider$ResponseOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.EntityParamDispatchProvider$VoidOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.is</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.is</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.EntityParamDispatchProvider$ObjectOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status(int)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.type(javax.ws.rs.core.MediaType)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.EntityParamDispatchProvider$ResponseOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.t</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getGenericReturnType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.t</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.status(int)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.type(javax.ws.rs.core.MediaType)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.t</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.EntityParamDispatchProvider$VoidOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.FormDispatchProvider$ObjectOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.FormDispatchProvider$ResponseOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.FormDispatchProvider$VoidOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.this$0</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.FormDispatchProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.MultipartFormDispatchProvider()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.FormDispatchProvider$ObjectOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.FormDispatchProvider$ResponseOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.FormDispatchProvider$VoidOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.GenericEntity</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotation()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.isEncoded()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.FormDispatchProvider$FormParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.ipc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(com.sun.jersey.api.model.Parameter, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.ipc</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.mbw</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getEntity(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.representation.Form</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotation()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.as</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.t</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.this$0</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.as</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.t</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.is</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.FormDispatchProvider$ObjectOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.FormDispatchProvider$ResponseOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.FormDispatchProvider$VoidOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.is</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.is</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.FormDispatchProvider$FormParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.decode</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.FormDispatchProvider$FormParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.extractor</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.FormDispatchProvider$FormParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.getCause()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.representation.Form</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.FormDispatchProvider$ObjectOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.this$0</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status(int)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.type(javax.ws.rs.core.MediaType)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.FormDispatchProvider$ObjectOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.FormDispatchProvider$ResponseOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.this$0</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.FormDispatchProvider$ResponseOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.t</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.this$0</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getGenericReturnType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.t</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.status(int)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.type(javax.ws.rs.core.MediaType)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.t</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.FormDispatchProvider$VoidOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.this$0</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.getParams(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.FormDispatchProvider$VoidOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.HttpReqResDispatchProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.HttpReqResDispatchProvider$HttpReqResDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.HttpReqResDispatchProvider$HttpReqResDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.getHttpHeaders()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.MULTIPART_FORM_DATA</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.MultipartFormDispatchProvider()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.FormDispatchProvider()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.MULTIPART_FORM_DATA</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardSubtype()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.mail.BodyPart</outbound>
                <outbound type="feature" confirmed="no">javax.mail.BodyPart.getDisposition()</outbound>
                <outbound type="feature" confirmed="no">javax.mail.BodyPart.getHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.mail.internet.MimeMultipart</outbound>
                <outbound type="feature" confirmed="no">javax.mail.internet.MimeMultipart.getBodyPart(int)</outbound>
                <outbound type="feature" confirmed="no">javax.mail.internet.MimeMultipart.getCount()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotation()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.MultipartFormDispatchProvider$MultipartFormParamInjectable(com.sun.jersey.spi.MessageBodyWorkers, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.ipc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.mbws</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(com.sun.jersey.api.model.Parameter, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.mail.internet.MimeMultipart</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.reader.HttpHeaderReader.hasNext()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.reader.HttpHeaderReader.nextSeparator(char)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.reader.HttpHeaderReader.nextToken()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.reader.HttpHeaderReader.nextTokenOrQuotedString()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.reader.HttpHeaderReaderImpl.HttpHeaderReaderImpl(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.ipc</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.mbws</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getEntity(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getMediaType()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.representation.Form</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.MULTIPART_FORM_DATA</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.mail.internet.MimeMultipart</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.MULTIPART_FORM_DATA</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.MediaType(java.lang.String, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.as</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.t</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.this$0</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.as</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.t</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.MultipartFormDispatchProvider$MultipartFormParamInjectable(com.sun.jersey.spi.MessageBodyWorkers, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.mbws</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.p</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.representation.Form</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.representation.Form.getFirst(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.mbws</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.p</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getBytes(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.TEXT_PLAIN_TYPE</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyReader</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.MessageBodyReader.readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.mbws</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.p</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.mail.BodyPart</outbound>
                <outbound type="feature" confirmed="no">javax.mail.BodyPart.getContentType()</outbound>
                <outbound type="feature" confirmed="no">javax.mail.BodyPart.getInputStream()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.TEXT_PLAIN_TYPE</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyReader</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.MessageBodyReader.readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getProperties()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.representation.Form</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.mbws</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.MultipartFormDispatchProvider$MultipartFormParamInjectable(com.sun.jersey.spi.MessageBodyWorkers, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.p</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.MultipartFormDispatchProvider$MultipartFormParamInjectable(com.sun.jersey.spi.MessageBodyWorkers, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.annotations</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.mediaType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.produceMime</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getSubtype()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getType()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher.HttpReqResDispatchProvider$HttpReqResDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker.VoidVoidDispatchProvider$VoidVoidMethodInvoker(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.annotations</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.ContainerCheckedException(java.lang.Exception)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.getEntity()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setAnnotations(java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.annotations</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getAcceptableMediaType(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.mediaType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.produceMime</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardSubtype()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.mediaType</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.method</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.produceMime</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.VoidVoidDispatchProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker.VoidVoidDispatchProvider$VoidVoidMethodInvoker(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker.VoidVoidDispatchProvider$VoidVoidMethodInvoker(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker.method</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker.method</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.model.parameter</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.CookieParamInjectableProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.CookieParamInjectableProvider$CookieParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.CookieParamInjectableProvider$CookieTypeParamInjectable(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Cookie</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.CookieParamInjectableProvider$CookieParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.extractor</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.CookieParamInjectableProvider$CookieParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.getCause()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getCookieNameValueMap()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.CookieParamInjectableProvider$CookieTypeParamInjectable(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getCookies()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.name</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Cookie</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.CookieParamInjectableProvider$CookieTypeParamInjectable(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.HeaderParamInjectableProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.HeaderParamInjectableProvider$HeaderParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.HeaderParamInjectableProvider$HeaderParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.extractor</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.HeaderParamInjectableProvider$HeaderParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.getCause()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getRequestHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.HttpContextInjectableProvider$HttpContextInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.HttpContextInjectableProvider$HttpContextRequestInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.HttpContextInjectableProvider$UriInfoInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.injectables</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.HttpHeaders</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.SecurityContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.injectables</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.injectables</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.HttpContextInjectableProvider$HttpContextInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.HttpContextInjectableProvider$HttpContextRequestInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.HttpContextInjectableProvider$UriInfoInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.HttpContextInjectableProvider$HttpContextInjectable()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.HttpContextInjectableProvider$HttpContextInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.HttpContextInjectableProvider$HttpContextInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.HttpContextInjectableProvider$HttpContextInjectable()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.HttpContextInjectableProvider$HttpContextRequestInjectable()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.HttpContextInjectableProvider$HttpContextRequestInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.HttpContextInjectableProvider$HttpContextRequestInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.HttpContextInjectableProvider$HttpContextRequestInjectable()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.HttpContextInjectableProvider$UriInfoInjectable()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.HttpContextInjectableProvider$UriInfoInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.HttpContextInjectableProvider$UriInfoInjectable(com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.HttpContextInjectableProvider$UriInfoInjectable()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.MatrixParamInjectableProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.isEncoded()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.MatrixParamInjectableProvider$MatrixParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.MatrixParamInjectableProvider$MatrixParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.decode</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.MatrixParamInjectableProvider$MatrixParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.extractor</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.MatrixParamInjectableProvider$MatrixParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.getCause()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo.getPathSegments(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.PathSegment</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.PathSegment.getMatrixParameters()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.PathParamInjectableProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.isEncoded()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.PathParamInjectableProvider$PathParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.PathParamInjectableProvider$PathParamListPathSegmentInjectable(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.PathParamInjectableProvider$PathParamPathSegmentInjectable(java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.Class, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getActualTypeArguments()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.PathSegment</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.PathParamInjectableProvider$PathParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.decode</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.PathParamInjectableProvider$PathParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.extractor</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.PathParamInjectableProvider$PathParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.getCause()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo.getPathParameters(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.PathParamInjectableProvider$PathParamListPathSegmentInjectable(java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.decode</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.PathParamInjectableProvider$PathParamListPathSegmentInjectable(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo.getPathSegments(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.name</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.PathParamInjectableProvider$PathParamListPathSegmentInjectable(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.PathParamInjectableProvider$PathParamPathSegmentInjectable(java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.decode</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.PathParamInjectableProvider$PathParamPathSegmentInjectable(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo.getPathSegments(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.name</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.PathSegment</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.PathParamInjectableProvider$PathParamPathSegmentInjectable(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.QueryParamInjectableProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.isEncoded()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.QueryParamInjectableProvider$QueryParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getScope()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.QueryParamInjectableProvider$QueryParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.decode</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.QueryParamInjectableProvider$QueryParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.extractor</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.QueryParamInjectableProvider$QueryParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.getCause()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo.getQueryParameters(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.decode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.extractor</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.model.parameter.multivalued</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.BaseStringConstructorExtractor(java.lang.reflect.Constructor)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.c</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.c</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.BaseStringConstructorExtractor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.c</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.valueOf</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.valueOf</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.valueOf</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.BaseStringConstructorExtractor(java.lang.reflect.Constructor)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getValue(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.getInstance()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.parameter</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.CollectionStringExtractor$ListString(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.CollectionStringExtractor$SetString(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.CollectionStringExtractor$SortedSetString(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.CollectionStringExtractor$ListString(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.CollectionStringExtractor$SetString(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.CollectionStringExtractor$SortedSetString(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.CollectionStringExtractor$ListString(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.getInstance()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.CollectionStringExtractor$SetString(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.CollectionStringExtractor$SortedSetString(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.CollectionValueOfExtractor$ListValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.CollectionValueOfExtractor$SetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.CollectionValueOfExtractor$SortedSetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.CollectionValueOfExtractor$ListValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.CollectionValueOfExtractor$SetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.CollectionValueOfExtractor$SortedSetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getValue(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.CollectionValueOfExtractor$ListValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.getInstance()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.CollectionValueOfExtractor$SetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.CollectionValueOfExtractor$SortedSetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.FormDispatchProvider$FormParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.extractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.CookieParamInjectableProvider$CookieParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.extractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.HeaderParamInjectableProvider$HeaderParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.extractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.MatrixParamInjectableProvider$MatrixParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.extractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.PathParamInjectableProvider$PathParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.extractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.QueryParamInjectableProvider$QueryParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.extractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.MultivaluedParameterProcessor()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.Class, java.lang.reflect.Type, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.DEFAULT_COULD_NOT_PROCESS_CONSTRUCTOR(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper.getGenericClass(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper.getStringConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.ReflectionHelper.getValueOfStringMethod(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToClassMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToDefaultValueMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isPrimitive()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.PrimitiveMapper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.valueOf(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.valueOf(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.valueOf(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.valueOf(short)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToClassMap</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToDefaultValueMap</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToClassMap</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToDefaultValueMap</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultDefaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultDefaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultDefaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.getValue(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.BaseStringConstructorExtractor(java.lang.reflect.Constructor)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.BaseStringConstructorExtractor(java.lang.reflect.Constructor)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.getValue(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.StringExtractor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.parameter</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.getValue(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.modelapi.annotation</name>
        <class confirmed="no">
            <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getGenericParameterTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMetaMethodAnnotations(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getParameterAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.isAnnotationPresent(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.ANOT_HELPER_MAP</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.IntrospectionModeller()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.MediaTypeHelper.createMediaTypes(javax.ws.rs.Consumes)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.MediaTypeHelper.createMediaTypes(javax.ws.rs.Produces)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.IntrospectionModeller$1()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.IntrospectionModeller$2()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.IntrospectionModeller$3()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.IntrospectionModeller$4()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.IntrospectionModeller$5()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.IntrospectionModeller$6()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.UNKNOWN</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, com.sun.jersey.api.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper.getSource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.ANOT_HELPER_MAP</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.WARNING</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.isLoggable(java.util.logging.Level)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.DefaultValue</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.DefaultValue.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.MethodList(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructors()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.FINEST</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.finest(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.isLoggable(java.util.logging.Level)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Path.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getInterfaces()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.security.AccessController.doPrivileged(java.security.PrivilegedAction)</outbound>
                <outbound type="class" confirmed="no">java.security.PrivilegedAction</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.NON_PUB_RES_METHOD(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.MethodList(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.isNotPublic()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toGenericString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.WARNING</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.isLoggable(java.util.logging.Level)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getGenericParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getParameterAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.toString()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getGenericParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.Parameterized.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.removeAll(java.util.Collection)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.ANOT_HELPER_MAP</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getConstructors()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getParameters()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getFields()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredFields()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInterface()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getGenericType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMetaMethodAnnotations(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.HttpMethod.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSetterMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getGenericParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.toString()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasNumParams(int)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasReturnType(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.iterator()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.nameStartsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Path.value()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMetaMethodAnnotations(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.hasMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.annotation.MethodList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.HttpMethod.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Path.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.IntrospectionModeller$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getSource()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.CONTEXT</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.IntrospectionModeller$2()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getSource()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.HEADER</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.HeaderParam.value()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.IntrospectionModeller$3()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getSource()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.COOKIE</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.CookieParam.value()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.IntrospectionModeller$4()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getSource()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.MATRIX</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.MatrixParam.value()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.IntrospectionModeller$5()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getSource()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.QUERY</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.QueryParam.value()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.IntrospectionModeller$6()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getSource()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.PATH</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.PathParam.value()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.security.PrivilegedAction</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.val$_c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.val$ml</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.val$ml</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredMethods()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.val$_c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.val$ml</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper.getSource()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.modelapi.annotation.MethodList</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.MethodList(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.MethodList(java.util.List)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.hasAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.hasMetaAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.hasNotMetaAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.hasNumParams(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.hasReturnType(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.isNotPublic()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.iterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.annotation.MethodList.nameStartsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.modelapi.validation</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.validation.AbstractModelValidator</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.AbstractModelValidator()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.issueList</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.BasicValidator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.cleanIssueList()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.removeAll(java.util.Collection)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.getIssueList()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.issueList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.AbstractModelValidator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.cleanIssueList()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.getIssueList()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent.accept(com.sun.jersey.api.model.AbstractModelVisitor)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent.getComponents()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.validation.BasicValidator</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.BasicValidator$1(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.BasicValidator$2(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator, com.sun.jersey.impl.modelapi.validation.BasicValidator$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.BasicValidator()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.AbstractModelValidator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardSubtype()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardType()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.getIssueList()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractField(com.sun.jersey.api.model.AbstractField)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractField</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getConstructors()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isRootResource()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getPath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.UriTemplate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.endsWithSlash()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.getTemplate()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.AMBIGUOUS_SRLS(java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_NO_SUB_RES_METHOD_LOCATOR_FOUND(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ROOT_RES_NO_PUBLIC_CTOR(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.BasicValidator$1(com.sun.jersey.impl.modelapi.validation.BasicValidator)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.BasicValidator$2(com.sun.jersey.impl.modelapi.validation.BasicValidator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceConstructor(com.sun.jersey.api.model.AbstractResourceConstructor)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_GET_CONSUMES_ENTITY(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_GET_RETURNS_VOID(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaredAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSetterMethod(com.sun.jersey.api.model.AbstractSetterMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceLocator.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getPath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_SUBRES_LOC_RETURNS_VOID(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.ERROR_SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$1</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.BasicValidator$2(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator, com.sun.jersey.impl.modelapi.validation.BasicValidator$1)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$1.BasicValidator$1(com.sun.jersey.impl.modelapi.validation.BasicValidator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator, com.sun.jersey.impl.modelapi.validation.BasicValidator$1)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.this$0</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.this$0</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.BasicValidator$1(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2.BasicValidator$2(com.sun.jersey.impl.modelapi.validation.BasicValidator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator, com.sun.jersey.impl.modelapi.validation.BasicValidator$1)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.AMBIGUOUS_SRMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.this$0</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ImplMessages.AMBIGUOUS_SRMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.this$0</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.modelapi.validation.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.UriTemplate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.endsWithSlash()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$2.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.BasicValidator$2(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.this$0</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator, com.sun.jersey.impl.modelapi.validation.BasicValidator$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator, com.sun.jersey.impl.modelapi.validation.BasicValidator$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.BasicValidator$1(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.BasicValidator$2(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.provider</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl</name>
            <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.hps</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.map</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.HeaderDelegateProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ServiceFinder</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ServiceFinder.find(java.lang.Class, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ServiceFinder.iterator()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.CacheControl</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Cookie</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.EntityTag</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.NewCookie</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.RuntimeDelegate.RuntimeDelegate()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.hps</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.HeaderDelegateProvider</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.HeaderDelegateProvider.supports(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.UnsupportedOperationException</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.map</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.createResponseBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.createUriBuilder()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.UriBuilderImpl.UriBuilderImpl()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.createVariantListBuilder()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.VariantListBuilderImpl.VariantListBuilderImpl()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant$VariantListBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.hps</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.provider.RuntimeDelegateImpl.map</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.resource</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.resource.PerRequestProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.DEFAULT_VALUES</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.PerRequestProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.constructor</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.constructorInjectableParams</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.FALSE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.valueOf(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Character</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.valueOf(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.valueOf(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.valueOf(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.valueOf(short)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.DEFAULT_VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.constructor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.constructorInjectableParams</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.rci</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterTypes()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.c</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.constructor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.constructorInjectableParams</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.ipc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.rci</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.ResourceConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.con</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.is</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.ipc</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.rci</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.PerRequestProvider.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.DEFAULT_VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.resource.SingletonProvider</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.SingletonProvider.SingletonProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.SingletonProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.resource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.ipc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.resource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.ResourceConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.con</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.is</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Singleton</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.SingletonProvider.ipc</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.resource.SingletonProvider.resource</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.template</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.template.ResolvedViewable</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.api.view.Viewable</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ResolvedViewable.ResolvedViewable(com.sun.jersey.spi.template.TemplateProcessor, java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.Viewable(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.template</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ResolvedViewable.getTemplate()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.template</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ResolvedViewable.template</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.ResolvedViewable(com.sun.jersey.spi.template.TemplateProcessor, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.getTemplate()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.template.TemplateFactory</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.TemplateFactory.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.ComponentProviderCache.getProvidersAndServices(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.templates</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.TemplateFactory.getTemplateProcessors()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.templates</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.TemplateFactory.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.TemplateFactory.templates</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.getTemplateProcessors()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyWriter</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.ViewableMessageBodyWriter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.view.Viewable</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.view.Viewable</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.view.Viewable</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.tc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.ui</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.view.Viewable</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.getModel()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.getTemplateName()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.getTemplate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.tc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.ui</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateContext.getTemplateProcessors()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.resolve(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriInfo.getMatchedResources()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.view.Viewable</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.template.ViewableRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableRule.ViewableRule()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getMethod()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.ResolvedViewable(com.sun.jersey.spi.template.TemplateProcessor, java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.tc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateContext.getTemplateProcessors()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.resolve(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getMatchResult()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.ok(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getResponse()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.path(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.template.ViewableRule.tc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.impl.uri</name>
        <class confirmed="no">
            <name>com.sun.jersey.impl.uri.PathPattern</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.PathPattern.COMPARATOR</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.RulesMap.RulesMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.PathPattern.EMPTY_PATH</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.PathPattern.PathPattern(com.sun.jersey.api.uri.UriTemplate)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.PathPattern.getTemplate()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.uri.PathTemplate</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.PathTemplate.PathTemplate(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.uri.UriBuilderImpl</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.UriBuilderImpl.UriBuilderImpl()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createUriBuilder()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.uri.UriHelper</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.UriHelper.normalize(java.net.URI, boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.uri.rules</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.AtomicMatchingPatterns(java.util.Collection)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.rules</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriPattern.match(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.AtomicMatchingPatterns$EmptyIterator(com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.AtomicMatchingPatterns$SingleEntryIterator(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.rules</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.p</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.r</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext.setMatchResult(java.util.regex.MatchResult)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.rules</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.AtomicMatchingPatterns(java.util.Collection)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.AtomicMatchingPatterns$EmptyIterator(com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.AtomicMatchingPatterns$EmptyIterator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.AtomicMatchingPatterns$EmptyIterator(com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.AtomicMatchingPatterns$EmptyIterator(com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.AtomicMatchingPatterns$EmptyIterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.hasNext()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.AtomicMatchingPatterns$SingleEntryIterator(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.hasNext()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.next()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.t</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.AtomicMatchingPatterns$SingleEntryIterator(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.next()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.BaseRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.BaseRule.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.template</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.ResourceClassRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.ResourceObjectRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.BaseRule.getTemplate()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.template</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.BaseRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.getTemplateVariables()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.template</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushParameterValues(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.BaseRule.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.BaseRule.template</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.getTemplate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.CombiningMatchingPatterns(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.rs</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.rs</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.rs</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.CombiningMatchingPatterns(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.path</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.resultContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.ruleIterator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.rulesIterator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.path</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.r</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.resultContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.ruleIterator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.rulesIterator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.next()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.r</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.path</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.r</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.resultContext</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.ruleIterator</name>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.rulesIterator</name>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.HttpMethodRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.allow</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.isSubResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.map</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.methodNotAllowed()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.notAcceptable()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.unsupportedMediaType()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getAcceptableMediaTypes()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getMediaType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpRequestContext.getMethod()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.getTemplateVariables()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getDispatcher()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getTemplate()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_CONSUME</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_PRODUCE</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.allow</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.isSubResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.map</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getRequest()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushParameterValues(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.get(int)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.header(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.allow</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.isSubResource</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.map</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_CONSUME</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_PRODUCE</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.listIterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.removeFirst()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.ListIterator</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.nextIndex()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.remove()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.HttpMethodRule$MatchStatus(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.MATCH</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_CONSUME</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_PRODUCE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.HttpMethodRule$MatchStatus(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_CONSUME</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.NO_MATCH_FOR_PRODUCE</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.values()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus[]</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus[]</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.values()</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus[].clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.PatternRulePair</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.p</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.r</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.PatternRulePair.p</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.PatternRulePair.r</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.ResourceClassRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.ResourceClassRule.ResourceClassRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.resourceClass</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.rules.ResourceClassRule.getTemplate()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.rules.ResourceClassRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.resourceClass</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getRules(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.rules.ResourceClassRule.getTemplate()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.rules.ResourceClassRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.ResourceClassRule.resourceClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.ResourceClassRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.ResourceObjectRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.ResourceObjectRule.ResourceObjectRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.resourceObject</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.rules.ResourceObjectRule.getTemplate()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.rules.ResourceObjectRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.resourceObject</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getRules(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.rules.ResourceObjectRule.getTemplate()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.rules.ResourceObjectRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.ResourceObjectRule.resourceObject</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.ResourceObjectRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.RightHandPathRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.patternEndsInSlash</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.rule</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.getRightHandPath(java.util.regex.MatchResult)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.patternEndsInSlash</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.rule</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getMatchResult()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushRightHandPathLength(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.getRightHandPath(java.util.regex.MatchResult)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.groupCount()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.patternEndsInSlash</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getResponse()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.path(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.rule</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RightHandPathRule.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.RootResourceClassesRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.rootsRule</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RootResourceClassesRule.RootResourceClassesRule(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.rules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.rules</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.RootResourceClassesRule.rules</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.RootResourceClassesRule(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.SequentialMatchingPatterns(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.rules</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.rules</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.rules</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.SequentialMatchingPatterns(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.i</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.path</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.resultContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriPattern.match(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.p</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.r</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.i</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.path</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.r</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.resultContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext.setMatchResult(java.util.regex.MatchResult)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.i</name>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.next()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.r</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.path</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.r</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.resultContext</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.SubLocatorRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.is</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.m</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.rules.SubLocatorRule.getTemplate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.rules.SubLocatorRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getRules(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.rules.SubLocatorRule.getTemplate()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.is</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.m</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SubLocatorRule.is</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.SubLocatorRule.m</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.uri.rules.SubLocatorRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.TerminatingRule</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.TerminatingRule.TerminatingRule()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.getResponse()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.isResponseSet()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.uri.rules.UriRuleContext.getResponse()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.UriRulesFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.UriRulesFactory.UriRulesFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.AtomicMatchingPatterns(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.AutomataMatchingUriTemplateRules(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.RootResourceClassesRule(java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.uri.rules.automata</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.AutomataMatchingUriTemplateRules(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.automata</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.automata</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.AutomataMatchingUriTemplateRules(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriPattern.match(java.lang.CharSequence, java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.arc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.i</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.node</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.automata</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.length()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getFirstArc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getPattern()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.isWildcard()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.matchExitArc(java.lang.CharSequence, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.Stack()</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.pop()</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.push(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.getTemplate()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.getTemplate()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.p</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.r</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pack()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.AutomataMatchingUriTemplateRules(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.TrieNodeValue$EmptyIterator()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.arc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.i</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.node</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.arc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.i</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.node</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.TrieArc</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.arc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.addArc(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getFirstArc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.lastArc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.matchExitArc(java.lang.CharSequence, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pack()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.TrieArc(com.sun.jersey.impl.uri.rules.automata.TrieNode, char)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.code</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.code</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.TrieArc(com.sun.jersey.impl.uri.rules.automata.TrieNode, char)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.length()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.copyOf(char[], int)</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.length()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.code</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.code</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.length()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.matchExitArc(java.lang.CharSequence, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.code</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.copyOf(char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getArcs()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getFirstArc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.isWildcard()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.next</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.addArc(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.matchExitArc(java.lang.CharSequence, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pack()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getArcs()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getFirstArc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.isWildcard()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pack()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pack()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.target</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.TrieArc(com.sun.jersey.impl.uri.rules.automata.TrieNode, char)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriPattern.getRegex()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.code</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getPattern()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.String(char[])</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.TrieNode</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.node</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.AutomataMatchingUriTemplateRules(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.automata</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.TrieArc(com.sun.jersey.impl.uri.rules.automata.TrieNode, char)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.PARAMETER_PATTERN</name>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.arcs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.value</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.wildcard</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.TrieNodeValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.arcs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.value</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.wildcard</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.TrieNodeValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.WILDCARD_CHAR</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.TrieArc(com.sun.jersey.impl.uri.rules.automata.TrieNode, char)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.addArc(com.sun.jersey.impl.uri.rules.automata.TrieArc)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setWildcard(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.PARAMETER_PATTERN</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(char)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.replaceAll(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.addArc(com.sun.jersey.impl.uri.rules.automata.TrieArc)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.arcs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.lastArc</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.arcs</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.addArc(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getArcs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.addArc(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getFirstArc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.matchExitArc(java.lang.CharSequence, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pack()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.getArcs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.arcs</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.getFirstArc()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.getPattern()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pattern</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.getValue()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.value</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.value</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.isWildcard()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.wildcard</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.lastArc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.addArc(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.matchExitArc(java.lang.CharSequence, int)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.pack()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.pack()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.pattern</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getPattern()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriPattern</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.pattern</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.value</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.setWildcard(boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.wildcard</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.PARAMETER_PATTERN</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.toString()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.code</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.next</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.target</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.firstArc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.value</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.wildcard</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.String(char[])</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.value</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getValue()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNode.wildcard</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.isWildcard()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setWildcard(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getValue()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.value</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.TrieNodeValue()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.value</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.TrieNodeValue$ArrayIterator(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.TrieNodeValue$EmptyIterator()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.TrieNodeValue$SingleEntryIterator(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.value</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.isEmpty()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.value</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.hasValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.value</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.value</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.TrieNodeValue()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.isEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.TrieNodeValue$ArrayIterator(java.lang.Object[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.cursor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.data</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.cursor</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.TrieNodeValue$ArrayIterator(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.data</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.TrieNodeValue$ArrayIterator(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.hasNext()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.cursor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.data</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.next()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.cursor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.data</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.hasNext()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.TrieNodeValue$EmptyIterator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.hasNext()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.TrieNodeValue$SingleEntryIterator(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.hasNext()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.next()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.t</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.t</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.TrieNodeValue$SingleEntryIterator(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.next()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.impl.util</name>
        <class confirmed="no">
            <name>com.sun.jersey.impl.util.KeyComparator</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.util.KeyComparatorHashMap</name>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.util.KeyComparatorHashMap.KeyComparatorHashMap(com.sun.jersey.impl.util.KeyComparator)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.util.StringIgnoreCaseKeyComparator</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.util.StringIgnoreCaseKeyComparator.SINGLETON</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.wadl</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder(com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.WadlGeneratorImpl()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.getBuildId()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getOtherAttributes()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResources()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setResources(com.sun.research.ws.wadl.Resources)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getResource()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResources()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setResources(com.sun.research.ws.wadl.Resources)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getResource()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResources()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setResources(com.sun.research.ws.wadl.Resources)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getResource()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setRequest(com.sun.research.ws.wadl.Request)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setResponse(com.sun.research.ws.wadl.Response)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.CONTEXT</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getName()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getStyle()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.TEMPLATE</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getParam()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getRepresentation()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractSubResourceLocator.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getPath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getStyle()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.TEMPLATE</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getMethodOrResource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getParam()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isRootResource()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.getPath()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getMethodOrResource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getParam()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.wadlFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.wadlFactory</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory._jaxb</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory._wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory._jaxb</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory._wadlGenerator</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.CONFIG</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.getTemplate()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.uri.PathPattern.getTemplate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory._jaxb</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory._wadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory._jaxb</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory._wadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlFactory.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlGenerator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1.WadlGeneratorConfig$WadlGeneratorConfigBuilder$1(com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl._wadlGenerator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.getWadlGenerator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig._wadlGenerator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder._wadlGenerator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory._wadlGenerator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.wadlGenerator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.ApplicationDocs)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.research.ws.wadl.Grammars)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocWadlGenerator</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createResources()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.getRequiredJaxbContextPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.init()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGenerator.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.WadlGeneratorImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createApplication()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.Application()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.Method()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ordinal()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.hasDefaultValue()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.$SwitchMap$com$sun$jersey$api$model$Parameter$Source</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.Param()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setDefault(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setRepeating(java.lang.Boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setStyle(com.sun.research.ws.wadl.ParamStyle)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setType(javax.xml.namespace.QName)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.HEADER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.MATRIX</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.QUERY</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.TEMPLATE</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getComponentType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.Request()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setMediaType(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.isRootResource()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResources()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.Resources()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.Response()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getRepresentationOrFault()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setMediaType(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.getRequiredJaxbContextPath()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.init()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.$SwitchMap$com$sun$jersey$api$model$Parameter$Source</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.HEADER</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.MATRIX</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.PATH</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.QUERY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.ordinal()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.values()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.$SwitchMap$com$sun$jersey$api$model$Parameter$Source</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlMethodFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory.WadlMethodFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder(com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResources()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getParam()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getResource()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.setBase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.relativize(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriInfo.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriInfo.getBaseUri()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriTemplate.EMPTY</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.model.MediaTypeHelper.GENERAL_MEDIA_TYPE_LIST</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.path</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.wadlGenerator</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.allow</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.MediaTypes.WADL</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getResponse()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.HttpResponseContext.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.ExtendedUriInfo</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.allow</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.path</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.wadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.header(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.ok(java.lang.Object, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.path</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.resource</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.wadlGenerator</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.WadlResource</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlResource.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder(com.sun.jersey.impl.wadl.WadlGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.getRequiredJaxbContextPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource._a</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource._requiredJaxbContextPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlResource._a</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlResource._bytes</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlResource._requiredJaxbContextPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource._a</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource._bytes</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource._requiredJaxbContextPath</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResources()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getBase()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.setBase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.WARNING</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.GET</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.ok(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriInfo.getBaseUri()</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.createMarshaller()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.newInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Marshaller</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Marshaller.marshal(java.lang.Object, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Marshaller.setProperty(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.WadlResource.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.wadl.generators</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.ApplicationDocs</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ObjectFactory.createApplicationDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.ApplicationDocs)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocs</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.ApplicationDocs.ApplicationDocs()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ObjectFactory.createApplicationDocs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.ApplicationDocs.docs</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.getDocs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.ApplicationDocs.getDocs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.docs</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.ObjectFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRegistry</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.ObjectFactory.ObjectFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.ObjectFactory.createApplicationDocs()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.ApplicationDocs()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.LOG</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.ApplicationDocs)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocs</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.ApplicationDocs)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocsFile</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.ApplicationDocs)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.getDocs()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getDoc()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResources()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResources()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.getRequiredJaxbContextPath()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.getRequiredJaxbContextPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.init()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocs</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocsFile</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.createUnmarshaller()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.newInstance(java.lang.String, java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBException</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Unmarshaller</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Unmarshaller.unmarshal(java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.LOG</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocsFile</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.LOG</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.LOG</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.research.ws.wadl.Grammars)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammars</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.research.ws.wadl.Grammars)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammars</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.research.ws.wadl.Grammars)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammarsFile</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.LOG</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammars</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getGrammars()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setGrammars(com.sun.research.ws.wadl.Grammars)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getAny()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getInclude()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResources()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResources()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.getRequiredJaxbContextPath()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.getRequiredJaxbContextPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.init()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammars</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammarsFile</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.createUnmarshaller()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.newInstance(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBException</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Unmarshaller</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Unmarshaller.unmarshal(java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.LOG</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammarsFile</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.LOG</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.wadl.generators.resourcedoc</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.ResourceDocAccessor(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor._resourceDoc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor._resourceDoc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.ResourceDocAccessor(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor._resourceDoc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getClassName()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.getDocs()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getMethodDocs()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getMethodName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.getAnnotationTypeBySource(com.sun.jersey.api.model.Parameter$Source)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getParamDocs()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAnnotationDocs()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getRequestDoc()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.getRepresentationDoc()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getResponseDoc()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAttributeDocs()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.hasAttributeDocs()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getName()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.MATRIX_PARAM</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.PATH_PARAM</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.QUERY_PARAM</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._jaxRsParamAnnotationType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._parameterSource</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._jaxRsParamAnnotationType</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.getAnnotationTypeBySource(com.sun.jersey.api.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._parameterSource</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.getAnnotationTypeBySource(com.sun.jersey.api.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.getAnnotationTypeBySource(com.sun.jersey.api.model.Parameter$Source)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._jaxRsParamAnnotationType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._parameterSource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.values()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.MATRIX</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.PATH</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter$Source.QUERY</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.MATRIX_PARAM</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.PATH_PARAM</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.QUERY_PARAM</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.values()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping[]</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.getAnnotationTypeBySource(com.sun.jersey.api.model.Parameter$Source)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping[]</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.values()</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping[].clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocWadlGenerator</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocWadlGenerator.setResourceDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.LOG</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.RESOURCE_DOC_FILE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.ResourceDocAccessor(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDocFile</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.setResourceDocFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.el(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.val(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createApplication()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getCommentText()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getDoc()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.getMethod()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getCommentText()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getDoc()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getElement()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getExample()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getMediaType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setElement(javax.xml.namespace.QName)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getCommentText()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getDoc()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResources()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResources()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.AbstractResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getElement()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getExample()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getMediaType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getStatus()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getRepresentations()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getReturnDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getWadlParams()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.hasRepresentations()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getName()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getStyle()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.Param()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setStyle(com.sun.research.ws.wadl.ParamStyle)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setType(javax.xml.namespace.QName)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setElement(javax.xml.namespace.QName)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setMediaType(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.Response()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getDoc()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getParam()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getRepresentationOrFault()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.getRequiredJaxbContextPath()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.init()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.ResourceDocAccessor(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDoc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDocFile</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.LOG</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.createUnmarshaller()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.newInstance(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Unmarshaller</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Unmarshaller.unmarshal(java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.setResourceDocFile(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDocFile</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.LOG</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.AnnotationDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.annotationTypeName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAnnotationTypeName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.setAnnotationTypeName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.attribute</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAttributeDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.hasAttributeDocs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAnnotationTypeName()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.annotationTypeName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAttributeDocs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.attribute</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.hasAttributeDocs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.attribute</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.setAnnotationTypeName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.annotationTypeName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.ClassDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.className</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getClassName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.setClassName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.commentText</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getCommentText()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.setCommentText(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getClassName()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.className</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getCommentText()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.commentText</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getMethodDocs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.methodDoc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.methodDoc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getMethodDocs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.setClassName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.className</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.setCommentText(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.commentText</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.MethodDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.commentText</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getCommentText()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setCommentText(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getCommentText()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.commentText</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getMethodName()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.methodName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getParamDocs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.paramDoc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getRequestDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.requestDoc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getResponseDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.responseDoc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getReturnDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnDoc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getReturnTypeExample()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnTypeExample</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.methodName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getMethodName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setMethodName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.paramDoc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getParamDocs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.requestDoc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getRequestDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setRequestDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.responseDoc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getResponseDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setResponseDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnDoc</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getReturnDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setReturnDoc(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnTypeExample</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getReturnTypeExample()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setReturnTypeExample(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setCommentText(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.commentText</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setMethodName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.methodName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setRequestDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.requestDoc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setResponseDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.responseDoc</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setReturnDoc(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnDoc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setReturnTypeExample(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnTypeExample</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.NamedValueType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getName()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getValue()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.setName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.setValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.value</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getValue()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.setValue(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRegistry</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory.ObjectFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory.createResourceDocType()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.ResourceDocType()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.ParamDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.annotationDoc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAnnotationDocs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.commentText</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getCommentText()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.setCommentText(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAnnotationDocs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.annotationDoc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getCommentText()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.commentText</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getParamName()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.paramName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.paramName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getParamName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.setParamName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.setCommentText(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.commentText</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.setParamName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.paramName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.getRepresentationDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.representationDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.setRepresentationDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.RepresentationDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.doc</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setDoc(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.element</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getElement()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setElement(javax.xml.namespace.QName)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.example</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getExample()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setExample(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.doc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getElement()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.element</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getExample()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.example</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getMediaType()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.mediaType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getStatus()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.status</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.mediaType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getMediaType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setMediaType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setDoc(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.doc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setElement(javax.xml.namespace.QName)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.element</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setExample(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.example</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setMediaType(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.mediaType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setStatus(java.lang.Long)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.status</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.status</name>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getStatus()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setStatus(java.lang.Long)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getRequestDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.requestDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setRequestDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.RequestDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.getRepresentationDoc()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.representationDoc</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.representationDoc</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.getRepresentationDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.setRepresentationDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.setRepresentationDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.representationDoc</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.ResourceDocAccessor(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor._resourceDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocWadlGenerator.setResourceDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory.createResourceDocType()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.ResourceDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory.createResourceDocType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.classDoc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.getDocs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.getDocs()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.classDoc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getResponseDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.responseDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setResponseDoc(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.ResponseDocType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getRepresentations()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.representation</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getReturnDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.returnDoc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getWadlParams()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.wadlParam</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.hasRepresentations()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.representation</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.representation</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getRepresentations()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.hasRepresentations()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.returnDoc</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getReturnDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.setReturnDoc(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.setReturnDoc(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.returnDoc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.wadlParam</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getWadlParams()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.WadlParamType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.doc</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setDoc(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.doc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getName()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getStyle()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.style</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getType()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.type</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setDoc(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.doc</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setStyle(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.style</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setType(javax.xml.namespace.QName)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.type</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.style</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getStyle()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setStyle(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.type</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setType(javax.xml.namespace.QName)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml</name>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements</name>
            <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.Elements(javax.xml.namespace.QName, java.lang.Class, com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.getChildNodes()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.addChild(java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.getChildNodes()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.Elements(javax.xml.namespace.QName, java.lang.Class, com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.XhtmlElementType()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.el(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.XhtmlValueType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.value</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.val(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.el(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.getValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.addChild(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.val(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRegistry</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.ObjectFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.createXhtmlCodeType()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.XhtmlValueType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.createXhtmlElementType()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.XhtmlElementType()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.Elements(javax.xml.namespace.QName, java.lang.Class, com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.addChild(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.createXhtmlElementType()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.XhtmlElementType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.createXhtmlElementType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.getChildNodes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.getChildNodes()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.addChild(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.createXhtmlCodeType()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.XhtmlValueType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.createXhtmlCodeType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.value</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.spi</name>
        <class confirmed="no">
            <name>com.sun.jersey.spi.HeaderDelegateProvider</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.HeaderDelegateProvider.supports(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.MessageBodyWorkers</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getMessageBodyWorkers()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.mbw</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.MultipartFormDispatchProvider$MultipartFormParamInjectable(com.sun.jersey.spi.MessageBodyWorkers, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.mbws</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.mbws</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.bodyContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.bodyContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.getMessageBodyWorkers()</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyWriterMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.spi.container</name>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerNotifier.addListener(com.sun.jersey.spi.container.ContainerListener)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerListener.onReload()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerNotifier</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerNotifier.addListener(com.sun.jersey.spi.container.ContainerListener)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerListener</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerRequest</name>
            <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePathBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUri()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUri()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.request</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.request</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.getModCount()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.baseUri</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.bodyContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headersModCount</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.requestUri</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.getMessageBodyWorkers()</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.EMTPTY_ANNOTATIONS</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.absolutePathUri</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.accept</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.acceptLanguages</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.baseUri</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUri()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.bodyContext</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.contentType</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.cookieNames</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.cookies</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.decodedPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.decodedPathSegments</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.decodedQueryParameters</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.encodedPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.encodedPathSegments</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.encodedQueryParameters</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.entity</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntityInputStream()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setEntityInputStream(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.preconditionFailed()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.EntityTag</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.EntityTag.getValue()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(javax.ws.rs.core.EntityTag)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.notModified()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.reader.HttpHeaderReader.readDate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.preconditionFailed()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.EntityTag</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.EntityTag.getValue()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.notModified(javax.ws.rs.core.EntityTag)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(javax.ws.rs.core.EntityTag)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.preconditionFailed()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.reader.HttpHeaderReader.readDate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.EntityTag</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.tag(javax.ws.rs.core.EntityTag)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(javax.ws.rs.core.EntityTag)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.EntityTag</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.absolutePathUri</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.requestUri</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fragment(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.replaceQuery(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePathBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getAbsolutePathBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePathBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.getModCount()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.http.header.AcceptableLanguageTag</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.AcceptableLanguageTag.getAsLocale()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.acceptLanguages</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headersModCount</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.getType()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardSubtype()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardType()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.getModCount()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.accept</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headersModCount</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getAuthenticationScheme()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getBaseUri()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.baseUri</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUri()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUriBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getBaseUriBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUri()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUriBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.getModCount()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.MultivaluedMapImpl.MultivaluedMapImpl()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.cookieNames</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headersModCount</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Cookie</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Cookie.getValue()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getCookies()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.getModCount()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.http.header.HttpHeaderFactory.createCookies(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.cookies</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headersModCount</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.putAll(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedPath</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUri()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getRawPath()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.EMTPTY_ANNOTATIONS</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.unsupportedMediaType()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.bodyContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyReader</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.MessageBodyReader.readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getEntityInputStream()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.entity</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getLanguage()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.Locale(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getMediaType()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.getModCount()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.contentType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headersModCount</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getMethod()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.method</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent.decode(java.lang.String, com.sun.jersey.api.uri.UriComponent$Type)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedPath</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getPathSegments()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent.decodePath(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedPathSegments</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedPathSegments</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getQueryParameters()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent.decodeQuery(java.net.URI, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedQueryParameters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedQueryParameters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getRequestHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getLanguage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.requestUri</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUri()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUriBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getRequestUriBuilder()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUriBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.getUserPrincipal()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <outbound type="class" confirmed="no">java.security.Principal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.headers</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.headersModCount</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.isSecure()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.isUserInRole(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.method</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMethod()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setMethod(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.requestUri</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Variant</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.setEntityInputStream(java.io.InputStream)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.entity</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.getModCount()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.accept</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.contentType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.cookieNames</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.cookies</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.headersModCount</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.setMethod(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.method</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.absolutePathUri</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.baseUri</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedPath</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedPathSegments</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedQueryParameters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedPath</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedPathSegments</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedQueryParameters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.requestUri</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequest.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.EMTPTY_ANNOTATIONS</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerRequestFilter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getRequestFilters(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerRequestFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerResponse</name>
            <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpResponseContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$200(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.response</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.ContainerResponse$CommittingOutputStream(com.sun.jersey.spi.container.ContainerResponse, long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.EMPTY_ANNOTATIONS</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.annotations</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.bodyContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.responseWriter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.status</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.getMessageBodyWorkers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.EMPTY_ANNOTATIONS</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setAnnotations(java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.access$000(com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isCommitted</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.access$002(com.sun.jersey.spi.container.ContainerResponse, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isCommitted</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.access$100(com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.responseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.annotations</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getAnnotations()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setAnnotations(java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.bodyContext</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.checkStatusAndEntity()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.status</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.entity</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.checkStatusAndEntity()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getEntity()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.entityType</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getEntityType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getAnnotations()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.annotations</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getContainerResponseWriter()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.responseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getContentType()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getEntity()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entity</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getEntityType()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entityType</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.rd</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate.toString(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.RuntimeDelegate.createHeaderDelegate(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.OutBoundHeaders.OutBoundHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.headers</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getOutputStream()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.ContainerResponse$CommittingOutputStream(com.sun.jersey.spi.container.ContainerResponse, long)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.out</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getResponse()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.getStatus()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.status</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.headers</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.isCommitted</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$000(com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$002(com.sun.jersey.spi.container.ContainerResponse, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isCommitted()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.isCommitted()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isCommitted</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.isResponseSet()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.out</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getOutputStream()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.rd</name>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.request</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.reset()</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.noContent()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.response</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isResponseSet()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.responseWriter</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$100(com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContainerResponseWriter()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setContainerResponseWriter(com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setAnnotations(java.lang.annotation.Annotation[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.EMPTY_ANNOTATIONS</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.annotations</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setContainerResponseWriter(com.sun.jersey.spi.container.ContainerResponseWriter)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.responseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.checkStatusAndEntity()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entityType</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.GenericEntity</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.GenericEntity.getEntity()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.GenericEntity.getType()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.Responses.noContent()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ResponseImpl</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.headers</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isCommitted</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.out</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.response</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.status</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getStatus()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUri()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.resolve(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getEntity()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getMetadata()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpRequestContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.ResponseImpl</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getEntity()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getEntityType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entityType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.request</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.GenericEntity</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.GenericEntity.getEntity()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.GenericEntity.getType()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.setStatus(int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.status</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.EMPTY_ANNOTATIONS</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.rd</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.RuntimeDelegate</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.RuntimeDelegate.getInstance()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.status</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.checkStatusAndEntity()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getStatus()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setStatus(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse.write()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers.getMessageBodyWriterMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.ContainerResponse$CommittingOutputStream(com.sun.jersey.spi.container.ContainerResponse, long)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.annotations</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.bodyContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entity</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entityType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isCommitted</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.responseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.finish()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.toString(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.APPLICATION_OCTET_STREAM_TYPE</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardSubtype()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardType()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.serverError()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyWriter</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.MessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.MessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream</name>
            <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.out</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.ContainerResponse$CommittingOutputStream(com.sun.jersey.spi.container.ContainerResponse, long)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.size</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.OutputStream()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getOutputStream()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.close()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$000(com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$002(com.sun.jersey.spi.container.ContainerResponse, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$100(com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.size</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$000(com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$002(com.sun.jersey.spi.container.ContainerResponse, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$100(com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setStatus(int)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$000(com.sun.jersey.spi.container.ContainerResponse)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.flush()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.close()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.size</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.ContainerResponse$CommittingOutputStream(com.sun.jersey.spi.container.ContainerResponse, long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.ContainerResponse$CommittingOutputStream(com.sun.jersey.spi.container.ContainerResponse, long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerResponseFilter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getResponseFilters(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponseFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.ContainerResponseWriter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.GZIPContentEncodingFilter$Adapter(com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.crw</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.LoggingFilter$Adapter(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.crw</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.access$100(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContainerResponseWriter()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.responseWriter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setContainerResponseWriter(com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponseWriter.finish()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.WebApplication</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.WebApplicationProviderImpl.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.GrizzlyContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.application</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.onReload()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.HttpHandlerContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.application</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.onReload()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationProvider.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.application</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.create()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.onReload()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.onReload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.getComponentProvider()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.getMessageBodyWorkers()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.getResourceComponentProvider()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.getThreadLocalHttpContext()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.WebApplicationFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplicationFactory.WebApplicationFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplicationProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationProvider.createWebApplication()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ServiceFinder</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ServiceFinder.find(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ServiceFinder.iterator()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.create()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.WebApplicationProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.WebApplicationProviderImpl</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.WebApplicationProvider.createWebApplication()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.spi.container.servlet</name>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.servlet.PerSession</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Documented</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.ElementType.TYPE</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Retention</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.RetentionPolicy.RUNTIME</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Target</outbound>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.servlet.ServletContainer</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerListener</outbound>
            <outbound type="class" confirmed="no">javax.servlet.http.HttpServlet</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.APPLICATION_CONFIG_CLASS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.RESOURCE_CONFIG_CLASS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.ServletContainer()</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker.ThreadLocalInvoker()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.requestInvoker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.responseInvoker</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServlet.HttpServlet()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.ServletAdaptor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.application</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.config</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getSingletons()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker.getThreadLocal()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.JSPTemplateProcessor(java.lang.ThreadLocal, java.lang.ThreadLocal)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$ContextInjectableProvider.ServletContainer$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.requestInvoker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.responseInvoker</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getServletContext()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.context</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.create()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperties()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.putAll(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getInitParameter(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.ServletException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.ServletException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.ServletException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.getContext()</name>
                <outbound type="class" confirmed="no">javax.naming.Context</outbound>
                <outbound type="feature" confirmed="no">javax.naming.InitialContext.InitialContext()</outbound>
                <outbound type="class" confirmed="no">javax.naming.NamingException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.InBoundHeaders()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.InBoundHeaders.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getHeaderNames()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getInitParameter(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getInitParameterNames()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.context</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContext.getRealPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.ServletException(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperties()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerListener</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerNotifier</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerNotifier.addListener(com.sun.jersey.spi.container.ContainerListener)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.config</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.context</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initResourceConfigFeatures(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.resourceConfig</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getServletContext()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServlet.init(javax.servlet.ServletConfig)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.initResourceConfigFeatures(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.load()</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.config</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.create()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.resourceConfig</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.onReload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.onReload()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.requestInvoker</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.ServletContainer()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.resourceConfig</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.responseInvoker</name>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.ServletContainer()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.InBoundHeaders</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.container.ContainerException</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.uri.UriComponent.encode(java.lang.String, com.sun.jersey.api.uri.UriComponent$Type)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.ThreadLocalInvoker.set(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.ServletContainer$Writer(javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.requestInvoker</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.responseInvoker</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.ServletException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getContextPath()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getPathInfo()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getQueryString()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestURI()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestURL()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getServletPath()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setStatus(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.replacePath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.replaceQuery(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeatures()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletConfig</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletConfig.getInitParameter(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initResourceConfigFeatures(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.core.ResourceConfig.getSingletons()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.context</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getContext()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInterface()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.CONFIG</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.naming.Context</outbound>
                <outbound type="feature" confirmed="no">javax.naming.Context.lookup(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.naming.NamingException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.servlet.ServletContainer$ContextInjectableProvider</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.SingletonTypeInjectableProvider</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$ContextInjectableProvider.ServletContainer$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.SingletonTypeInjectableProvider.SingletonTypeInjectableProvider(java.lang.reflect.Type, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</outbound>
            <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.ServletContainer$Writer(javax.servlet.http.HttpServletResponse)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.response</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.OutputStream()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.close()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.finish()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.flush()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.flush()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.response</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.getOutputStream()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.response</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.ServletContainer$Writer(javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[])</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(int)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.response</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentLength(int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setStatus(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.entrySet()</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.spi.dispatch</name>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.dispatch.RequestDispatcher</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.dispatcher</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getDispatcher()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.dispatch.RequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.spi.inject</name>
        <class confirmed="no">
            <name>com.sun.jersey.spi.inject.Inject</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.inject.Injectable</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFieldInjectables</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetterInjectables</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.inject.InjectableProvider</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.inject.InjectableProviderContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.ResourceConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(com.sun.jersey.api.model.Parameter, com.sun.jersey.spi.service.ComponentProvider$Scope)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.lang.Class, com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object, com.sun.jersey.spi.service.ComponentProvider$Scope)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.lang.Class, com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object, java.util.List)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.util.List, com.sun.jersey.spi.service.ComponentProvider$Scope)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.inject.SingletonTypeInjectableProvider</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$ContextInjectableProvider</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.inject.SingletonTypeInjectableProvider.SingletonTypeInjectableProvider(java.lang.reflect.Type, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider.WebApplicationImpl$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$ContextInjectableProvider.ServletContainer$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.spi.resource</name>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.PerRequest</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Documented</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.ElementType.TYPE</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Retention</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.RetentionPolicy.RUNTIME</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Target</outbound>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.ResourceClassInjector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.rci</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.rci</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.ResourceClassInjector$1(com.sun.jersey.spi.resource.ResourceClassInjector, java.lang.reflect.Field)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getFields()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSetterMethods()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.ResourceClassInjector$1(com.sun.jersey.spi.resource.ResourceClassInjector, java.lang.reflect.Field)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.isAccessible()</outbound>
                <outbound type="feature" confirmed="no">java.security.AccessController.doPrivileged(java.security.PrivilegedAction)</outbound>
                <outbound type="class" confirmed="no">java.security.PrivilegedAction</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFieldInjectables</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFields</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestPrimitive</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetterInjectables</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonFieldValues</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonFields</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetterValues</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetters</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFieldInjectables</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFields</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.perRequestPrimitive</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetterInjectables</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetters</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractField</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getField()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotation()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.InjectableProviderFactory$AccessibleObjectContext()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.setAccesibleObject(java.lang.reflect.AccessibleObject)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.lang.Class, com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.lang.Class, com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFieldInjectables</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFields</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestPrimitive</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonFieldValues</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonFields</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PERREQUEST_UNDEFINED</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Singleton</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.UNDEFINED_SINGLETON</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isPrimitive()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.AccessibleObject</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.size()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.api.model.Parameter</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotation()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.InjectableProviderFactory$AccessibleObjectContext()</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext.setAccesibleObject(java.lang.reflect.AccessibleObject, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.Injectable</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.Injectable.getValue(com.sun.jersey.api.core.HttpContext)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.lang.Class, com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.lang.Class, com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetterInjectables</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetters</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetterValues</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetters</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PERREQUEST_UNDEFINED</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.Singleton</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.UNDEFINED_SINGLETON</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.AccessibleObject</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.size()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.singletonFieldValues</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.singletonFields</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetterValues</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetters</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.ResourceClassInjector$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.security.PrivilegedAction</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector$1.ResourceClassInjector$1(com.sun.jersey.spi.resource.ResourceClassInjector, java.lang.reflect.Field)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.val$f</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector$1.run()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.val$f</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.setAccessible(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.ResourceClassInjector$1(com.sun.jersey.spi.resource.ResourceClassInjector, java.lang.reflect.Field)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceClassInjector$1.val$f</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.ResourceClassInjector$1(com.sun.jersey.spi.resource.ResourceClassInjector, java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.ResourceConstructor</name>
            <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor</outbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceConstructor.ResourceConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor.ComponentConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getConstructors()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.getCtor()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.getParameters()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.inject.InjectableProviderContext.getInjectable(java.util.List, com.sun.jersey.spi.service.ComponentProvider$Scope)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.resource.ResourceConstructor.ipc</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorComparator.ComponentConstructor$ConstructorComparator()</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.ComponentConstructor$ConstructorInjectablePair(java.lang.reflect.Constructor, java.util.List)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.SortedSet.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.SortedSet.first()</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet(java.util.Comparator)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.resource.ResourceConstructor.ipc</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.ResourceFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Documented</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.ElementType.ANNOTATION_TYPE</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Retention</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.RetentionPolicy.RUNTIME</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Target</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceFactory.value()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.ResourceProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.provider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.ResourceProviderFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resolverFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceProviderFactory.ResourceProviderFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.getInstance()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</name>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.api.container.ContainerException.ContainerException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory.value()</outbound>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider</outbound>
                <outbound type="class" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</outbound>
                <outbound type="feature" confirmed="no">com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.asSubclass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceProviderFactory.getInstance()</name>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.ResourceProviderFactory()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.instance</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.resource.ResourceProviderFactory.instance</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.getInstance()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.resource.Singleton</name>
            <outbound type="class" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Documented</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.ElementType.TYPE</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Retention</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.RetentionPolicy.RUNTIME</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Target</outbound>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.jersey.spi.service</name>
        <class confirmed="no">
            <name>com.sun.jersey.spi.service.ComponentConstructor</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentConstructor.ComponentConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.ResourceConstructor(com.sun.jersey.spi.inject.InjectableProviderContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.service.ComponentConstructor$ConstructorComparator</name>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentConstructor$ConstructorComparator.ComponentConstructor$ConstructorComparator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.ComponentConstructor$ConstructorInjectablePair(java.lang.reflect.Constructor, java.util.List)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.con</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentConstructor$ConstructorInjectablePair.is</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.service.ComponentContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentContext.getAccesibleObject()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentContext.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.service.ComponentProvider</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.WebApplicationImpl$AdaptingComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.cp</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getAdaptedComponentProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.WebApplicationImpl$AdaptingResourceComponentProvider(com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.cp</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getAdaptedComponentProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$500(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$600(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getComponentProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceComponentProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.provider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.resourceProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.getComponentProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.getResourceComponentProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider.getInjectableInstance(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider.inject(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.inject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.service.ComponentProvider$Scope</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getScope()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider$Scope.PERREQUEST_UNDEFINED</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider$Scope.PerRequest</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider$Scope.Singleton</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider$Scope.UNDEFINED_SINGLETON</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ComponentProvider$Scope.Undefined</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getScope()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.jersey.spi.service.ServiceFinder</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ServiceFinder.find(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ServiceFinder.find(java.lang.Class, boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.service.ServiceFinder.iterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.spi.template</name>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.template.TemplateContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.templateContext</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.tc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.tc</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.template.TemplateContext.getTemplateProcessors()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.template.TemplateProcessor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.ResolvedViewable(com.sun.jersey.spi.template.TemplateProcessor, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.getTemplate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.template</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.template.TemplateProcessor.resolve(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.template.TemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.jersey.spi.uri.rules</name>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.uri.rules.UriMatchResultContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.resultContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.resultContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriMatchResultContext.getMatchResult()</name>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriMatchResultContext.setMatchResult(java.util.regex.MatchResult)</name>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.uri.rules.UriRule</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.template.ViewableRule</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.rule</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.uri.rules.UriRuleContext</name>
            <outbound type="class" confirmed="no">com.sun.jersey.api.core.HttpContext</outbound>
            <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.getMatchResult()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.getRequest()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.getResource(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.getResponse()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.getRules(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.getUriInfo()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.pushParameterValues(java.util.List)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</name>
                <outbound type="class" confirmed="no">com.sun.jersey.api.uri.UriTemplate</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriRuleContext.pushRightHandPathLength(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.jersey.spi.uri.rules.UriRules</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.getRules()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.rules</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.RootResourceClassesRule(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.rules</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getRules(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</name>
                <outbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.net.httpserver</name>
        <class confirmed="no">
            <name>com.sun.net.httpserver.Headers</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.Headers.clear()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.Headers.entrySet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.Headers.put(java.lang.String, java.util.List)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.net.httpserver.HttpContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpContext.getPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpContext.getServer()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.net.httpserver.HttpExchange</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.HttpHandlerContainer$Writer(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.exchange</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getHttpContext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getLocalAddress()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getRequestBody()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getRequestHeaders()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getRequestMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getRequestURI()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getResponseBody()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.getResponseHeaders()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpExchange.sendResponseHeaders(int, long)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.net.httpserver.HttpHandler</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.net.httpserver.HttpServer</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpServer.create(java.net.InetSocketAddress, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpServer.createContext(java.lang.String, com.sun.net.httpserver.HttpHandler)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpServer.setExecutor(java.util.concurrent.Executor)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.net.httpserver.HttpsServer</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <feature confirmed="no">
                <name>com.sun.net.httpserver.HttpsServer.create(java.net.InetSocketAddress, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.research.ws.wadl</name>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Application</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource._a</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createApplication()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.Application()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.getGrammars()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.grammars</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.getResourceTypeOrMethodOrRepresentation()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.getResources()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resources</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.grammars</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getGrammars()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setGrammars(com.sun.research.ws.wadl.Grammars)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ResourceType</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementRef</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementRefs</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResourceTypeOrMethodOrRepresentation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.resources</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setResources(com.sun.research.ws.wadl.Resources)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.setGrammars(com.sun.research.ws.wadl.Grammars)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.grammars</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Application.setResources(com.sun.research.ws.wadl.Resources)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resources</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Doc</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createDoc()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.Doc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.content</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlMixed</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.getContent()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.content</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.getLang()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.lang</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.getTitle()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.title</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.lang</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getLang()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.setLang(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.setLang(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.lang</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.setTitle(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.title</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Doc.title</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getTitle()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.setTitle(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Grammars</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.research.ws.wadl.Grammars)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammars</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getGrammars()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.grammars</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setGrammars(com.sun.research.ws.wadl.Grammars)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createGrammars()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Grammars.Grammars()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createGrammars()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Grammars.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Grammars.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Grammars.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Grammars.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Grammars.getInclude()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.include</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Grammars.include</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getInclude()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.HTTPMethods</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlEnum</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.DELETE</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.GET</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.HEAD</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.HTTPMethods(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.POST</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.PUT</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.fromValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.research.ws.wadl.HTTPMethods.name()</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.value()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.DELETE</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.GET</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.HEAD</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.HTTPMethods(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.POST</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.PUT</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.value()</name>
                <outbound type="feature" confirmed="no">com.sun.research.ws.wadl.HTTPMethods.name()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.fromValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.HTTPMethods.values()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.sun.research.ws.wadl.HTTPMethods[]</outbound>
                <outbound type="feature" confirmed="no">com.sun.research.ws.wadl.HTTPMethods[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.research.ws.wadl.HTTPMethods[]</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.values()</inbound>
            <feature confirmed="no">
                <name>com.sun.research.ws.wadl.HTTPMethods[].clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Include</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createInclude()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.Include()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createInclude()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.getHref()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.href</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.href</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.getHref()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.setHref(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.Include()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Include.setHref(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.href</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Link</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createLink()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getLink()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.link</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setLink(com.sun.research.ws.wadl.Link)</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.Link()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createLink()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.getRel()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rel</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.getResourceType()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.resourceType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.getRev()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rev</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.Link()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.rel</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getRel()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.setRel(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.resourceType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getResourceType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.setResourceType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.rev</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getRev()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.setRev(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.setRel(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rel</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.setResourceType(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.resourceType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Link.setRev(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rev</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Method</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createMethod()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.methodOrResource</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.Method()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getHref()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.href</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getId()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getName()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getRequest()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.getResponse()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.response</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.href</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getHref()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setHref(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.id</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlID</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setId(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.Method()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.request</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setRequest(com.sun.research.ws.wadl.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.response</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setResponse(com.sun.research.ws.wadl.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.setHref(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.href</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.setId(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.setName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.setRequest(com.sun.research.ws.wadl.Request)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.request</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Method.setResponse(com.sun.research.ws.wadl.Response)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.response</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.ObjectFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRegistry</outbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.ObjectFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory._Fault_QNAME</name>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory._Representation_QNAME</name>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createApplication()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.Application()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createDoc()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Doc</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory._Fault_QNAME</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementDecl</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createGrammars()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.Grammars()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createInclude()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Include</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.Include()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createLink()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.Link()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createMethod()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.Method()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createOption()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Option</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.Option()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createParam()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.Param()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory._Representation_QNAME</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementDecl</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createRepresentationType()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createRequest()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.Request()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createResource()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createResourceType()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ResourceType</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.ResourceType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createResources()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.Resources()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.createResponse()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.Response()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ObjectFactory.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory._Fault_QNAME</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory._Representation_QNAME</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Option</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createOption()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.Option()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createOption()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.getValue()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.Option()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.setValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Option.value</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getValue()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.setValue(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Param</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createParam()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.Param()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createParam()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param._default</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getDefault()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setDefault(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.fixed</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getFixed()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setFixed(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getDefault()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param._default</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getFixed()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.fixed</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getId()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getLink()</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.link</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getName()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getOption()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.option</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.path</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getStyle()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.style</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.getType()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.type</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <outbound type="feature" confirmed="no">javax.xml.namespace.QName.QName(java.lang.String, java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.id</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlID</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setId(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.isRepeating()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.repeating</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.booleanValue()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.isRequired()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.required</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.booleanValue()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.link</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getLink()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setLink(com.sun.research.ws.wadl.Link)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getName()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.option</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getOption()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.Param()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.path</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.repeating</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.isRepeating()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setRepeating(java.lang.Boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.required</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.isRequired()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setRequired(java.lang.Boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setDefault(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param._default</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setFixed(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.fixed</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setId(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setLink(com.sun.research.ws.wadl.Link)</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.link</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setPath(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.path</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setRepeating(java.lang.Boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.repeating</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setRequired(java.lang.Boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.required</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setStyle(com.sun.research.ws.wadl.ParamStyle)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.style</outbound>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.setType(javax.xml.namespace.QName)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.type</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.style</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getStyle()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setStyle(com.sun.research.ws.wadl.ParamStyle)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Param.type</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setType(javax.xml.namespace.QName)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.ParamStyle</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlEnum</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getStyle()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setStyle(com.sun.research.ws.wadl.ParamStyle)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.style</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.HEADER</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlEnumValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.MATRIX</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlEnumValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.PLAIN</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlEnumValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.ParamStyle(java.lang.String, int, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.value</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.QUERY</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlEnumValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.TEMPLATE</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlEnumValue</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.value</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.values()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.HEADER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.MATRIX</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.PLAIN</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.ParamStyle(java.lang.String, int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.QUERY</outbound>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.TEMPLATE</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.value</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.ParamStyle(java.lang.String, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.value()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.value()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ParamStyle.values()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.sun.research.ws.wadl.ParamStyle[]</outbound>
                <outbound type="feature" confirmed="no">com.sun.research.ws.wadl.ParamStyle[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.research.ws.wadl.ParamStyle[]</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.values()</inbound>
            <feature confirmed="no">
                <name>com.sun.research.ws.wadl.ParamStyle[].clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.RepresentationType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentationType()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.RepresentationType()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentationType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.element</name>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getElement()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setElement(javax.xml.namespace.QName)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getElement()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.element</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getHref()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.href</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getId()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getMediaType()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.mediaType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getParam()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.param</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getProfile()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.profile</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.getStatus()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.status</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.href</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getHref()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setHref(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.id</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlID</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setId(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.mediaType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getMediaType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setMediaType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.param</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getParam()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.profile</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getProfile()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.setElement(javax.xml.namespace.QName)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.element</outbound>
                <outbound type="class" confirmed="no">javax.xml.namespace.QName</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.setHref(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.href</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.setId(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.setMediaType(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.mediaType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.RepresentationType.status</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getStatus()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Request</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.request</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setRequest(com.sun.research.ws.wadl.Request)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRequest()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.Request()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.getParam()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.param</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.getRepresentation()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.representation</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.param</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getParam()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Request.representation</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getRepresentation()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Resource</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResource()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.Resource()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getId()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getMethodOrResource()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.methodOrResource</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getParam()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.param</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getPath()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.path</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getQueryType()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.queryType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.getType()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.type</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.id</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlID</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setId(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.methodOrResource</name>
                <outbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElements</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getMethodOrResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.param</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getParam()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.path</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.queryType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getQueryType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setQueryType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.setId(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.setPath(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.path</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.setQueryType(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.queryType</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resource.type</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getType()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.ResourceType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResourceType()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.ResourceType()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResourceType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.getId()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.getMethod()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.method</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.getParam()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.param</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.id</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlID</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.CollapsedStringAdapter</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.setId(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.method</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.ResourceType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.param</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getParam()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.ResourceType.setId(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Resources</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resources</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.setResources(com.sun.research.ws.wadl.Resources)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResources()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.Resources()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResources()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.base</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchemaType</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getBase()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.setBase(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.getBase()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.base</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.getResource()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.resource</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.Resources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.resource</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Resources.setBase(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.base</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.Response</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAccessType.FIELD</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAccessorType</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.response</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setResponse(com.sun.research.ws.wadl.Response)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResponse()</inbound>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.Response()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.otherAttributes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.any</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyElement</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getAny()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.doc</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getDoc()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.getAny()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.any</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.getDoc()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.doc</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.getOtherAttributes()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.otherAttributes</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.getParam()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.param</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.getRepresentationOrFault()</name>
                <outbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.representationOrFault</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.otherAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAnyAttribute</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.Response()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getOtherAttributes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.param</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getParam()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.research.ws.wadl.Response.representationOrFault</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementRef</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementRefs</outbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getRepresentationOrFault()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.research.ws.wadl.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlNsForm.QUALIFIED</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlSchema</outbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.BufferedOutputStream</name>
            <feature confirmed="no">
                <name>java.io.BufferedOutputStream.BufferedOutputStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayInputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.ByteArrayOutputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.toByteArray()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.getDestfile()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setDestfile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.wadlFile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.io.File[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc._applicationDocsFile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport._grammarsFile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport._resourceDocFile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.setResourceDocFile(java.io.File)</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.File(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getAbsolutePath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.isDirectory()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.listFiles()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.pathSeparator</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.pathSeparatorChar</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.toURI()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.close()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestEntity(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.close()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.close()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <feature confirmed="no">
                <name>java.io.IOException.IOException()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.IOException.IOException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.IOException.initCause(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.entity</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntityInputStream()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setEntityInputStream(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read(byte[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.close()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.out</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.close()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitClose()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.commitWrite()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.o</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.close()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.out</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <feature confirmed="no">
                <name>java.io.OutputStream.OutputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.LoggingFilter$LoggingOutputStream(com.sun.jersey.api.container.filter.LoggingFilter, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.ContainerResponse$CommittingOutputStream(com.sun.jersey.spi.container.ContainerResponse, long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.ServletContainer$Writer(javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.close()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.close()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.flush()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.flush()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.write(byte[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.write(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.write(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$000(com.sun.jersey.api.container.filter.LoggingFilter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$100(com.sun.jersey.api.container.filter.LoggingFilter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.loggingStream</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestEntity(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.append(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestEntity(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.write(byte[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestEntity(byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.write(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.write(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintWriter</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.Wrapper(javax.servlet.http.HttpServletResponse, java.io.PrintWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.pw</inbound>
            <feature confirmed="no">
                <name>java.io.PrintWriter.PrintWriter(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.flush()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.StringWriter</name>
            <feature confirmed="no">
                <name>java.io.StringWriter.StringWriter()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.write(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Writer</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.AssertionError</name>
            <feature confirmed="no">
                <name>java.lang.AssertionError.AssertionError()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Boolean</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.isRepeating()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.isRequired()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.repeating</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.required</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setRepeating(java.lang.Boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setRequired(java.lang.Boolean)</inbound>
            <feature confirmed="no">
                <name>java.lang.Boolean.FALSE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.booleanValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.isRepeating()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.isRequired()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.valueOf(boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.valueOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Byte</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.lang.Byte.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Byte.valueOf(byte)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$LoggingOutputStream.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.path</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.path</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.matchExitArc(java.lang.CharSequence, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <feature confirmed="no">
                <name>java.lang.CharSequence.charAt(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.CharSequence.length()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.match(java.lang.CharSequence, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <feature confirmed="no">
                <name>java.lang.Character.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.valueOf(char)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.isRootResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceClass()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.resourceClass</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.findClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.generator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription(java.lang.Class, java.util.Properties)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._generatorClass</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getGeneratorClass()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setGeneratorClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.ExceptionMapperFactory$ExceptionMapperType(javax.ws.rs.ext.ExceptionMapper, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.distance(java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getExceptionType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getRequestFilters(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getResponseFilters(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRules(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$200(com.sun.jersey.impl.container.config.AnnotatedClassScanner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.val$_c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.ResourceClassRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.resourceClass</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping._jaxRsParamAnnotationType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.getAnnotationTypeBySource(com.sun.jersey.api.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.Elements(javax.xml.namespace.QName, java.lang.Class, com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory.value()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getRules(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.asSubclass(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.cast(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.desiredAssertionStatus()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getClassLoader()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getComponentType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getConstructor(java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getConstructors()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getDeclaredFields()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getDeclaredMethods()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getGenericInterfaces()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getInterfaces()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.isRootResourceClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethods()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getModifiers()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getResourceAsStream(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSuperclass()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.distance(java.lang.Class, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAnnotationPresent(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.isRootResourceClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isArray()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAssignableFrom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.distance(java.lang.Class, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getExceptionType(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isInstance(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isInterface()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isPrimitive()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.newInstance()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[], java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classloader</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getResources(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.loadClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.findClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.CloneNotSupportedException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.clone()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Double</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.lang.Double.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.valueOf(double)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.HttpMethodRule$MatchStatus(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.HTTPMethods(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.ParamStyle(java.lang.String, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.valueOf(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.ContainerCheckedException(java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.checkType(java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.afterService(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.printStackTrace()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.printStackTrace(java.io.PrintWriter)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Float</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.lang.Float.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Float.valueOf(float)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalAccessException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.WebApplicationImpl$1(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.WebApplicationImpl$2(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.CollectionValueOfExtractor$ListValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.CollectionValueOfExtractor$SetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.CollectionValueOfExtractor$SortedSetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplication.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.checkType(java.lang.Exception)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalStateException</name>
            <feature confirmed="no">
                <name>java.lang.IllegalStateException.IllegalStateException()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InstantiationException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.intValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toString(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getStatus()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setStatus(java.lang.Long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.status</inbound>
            <feature confirmed="no">
                <name>java.lang.Long.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.toString(long)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Math</name>
            <feature confirmed="no">
                <name>java.lang.Math.min(int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.copyOf(char[], int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchFieldError</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchMethodException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NullPointerException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.ContainerFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceContext.getResource(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractField</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractModelVisitor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResource</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.Parameterized</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.PathAnnotated</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.PathValue</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.getSource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.source</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.view.Viewable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.Viewable(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.getModel()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.model</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.descriptions()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.BuildId</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.EMPTY_VALUES</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cacheControl(javax.ws.rs.core.CacheControl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.clone()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.contentLocation(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cookie(javax.ws.rs.core.NewCookie[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.expires(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.lastModified(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.location(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.reset()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.values</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(java.util.Locale, java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.entity</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getEntity()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.values</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.set(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$2</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$3</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$4</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry(com.sun.jersey.impl.VariantSelector$ListEntry, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.value()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.FilterFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getRequestFilters(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getResponseFilters(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.WebApplicationImpl$3$1(com.sun.jersey.impl.application.WebApplicationImpl$3, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.val$o</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider.WebApplicationImpl$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInjectableInstance(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.inject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$100(com.sun.jersey.impl.application.WebApplicationImpl, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.clone()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.injectResources(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.WebApplicationProviderImpl</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.getPageObject(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.resource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.setResource(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.it</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.resource</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.HttpHelper</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceClass</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.mediaEquals(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceMethodDispatchProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultDefaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.resource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.ResolvedViewable(com.sun.jersey.spi.template.TemplateProcessor, java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.template.ViewableRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.next()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.AtomicMatchingPatterns$SingleEntryIterator(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.next()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.next()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.r</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.values()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.r</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.ResourceObjectRule(com.sun.jersey.api.uri.UriTemplate, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.resourceObject</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.next()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.r</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.copyOf(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.CharSequence, int, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.setValue(java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.TrieNodeValue$ArrayIterator(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.data</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.next()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.next()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.TrieNodeValue$SingleEntryIterator(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.next()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.TrieNodeValue()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.isEmpty()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.value</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ObjectFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.values()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocWadlGenerator</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.Elements(javax.xml.namespace.QName, java.lang.Class, com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.addChild(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.val(java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerListener</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerNotifier</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerProvider.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getLanguage()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeader(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerRequestFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.checkStatusAndEntity()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entity</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getEntity()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseFilter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.ContainerResponseWriter</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplication</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.WebApplicationProvider</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$ContextInjectableProvider.ServletContainer$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.dispatch.RequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonFieldValues</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetterValues</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateContext</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Doc</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.values()</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Include</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Option</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.values()</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ResourceType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.package-info</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.ContainerFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.GZIPContentEncodingFilter$Adapter(com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.GZIPContentEncodingFilter()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.LoggingFilter$Adapter(com.sun.jersey.api.container.filter.LoggingFilter, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.PostReplaceFilter()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.GrizzlyServerFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.GrizzlyWebContainerFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.HttpServerFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.PathValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.Viewable(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.WadlGeneratorConfig$WadlGeneratorConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.WadlGeneratorConfigLoader()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription(java.lang.Class, java.util.Properties)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.WadlGeneratorLoader()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.BuildId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.ThreadLocalHttpContext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.VariantSelector$1()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.VariantSelector$2()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.VariantSelector$3()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.VariantSelector$4()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.VariantSelector$ListEntry(com.sun.jersey.impl.VariantSelector$ListEntry, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.VariantSelector()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.ExceptionMapperFactory$ExceptionMapperType(javax.ws.rs.ext.ExceptionMapper, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.FilterFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.WebApplicationImpl$1(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.WebApplicationImpl$2(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3$1.WebApplicationImpl$3$1(com.sun.jersey.impl.application.WebApplicationImpl$3, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.WebApplicationImpl$3(com.sun.jersey.impl.application.WebApplicationImpl, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.WebApplicationImpl$4(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.WebApplicationImpl$5(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.WebApplicationImpl$6(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.impl.application.ContextResolverFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.WebApplicationImpl$AdaptingComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.WebApplicationImpl$AdaptingResourceComponentProvider(com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.WebApplicationImpl$DefaultComponentProvider(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.WebApplicationImpl$DefaultResourceComponentProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.WebApplicationProviderImpl.WebApplicationProviderImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.AnnotatedClassScanner$AnnotatedClassVisitor(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.NormalizeFilter()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.GrizzlyContainer$Writer(com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainerProvider.GrizzlyContainerProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.HttpHandlerContainer$Writer(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.HttpHandlerContainer(com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainerProvider.HttpHandlerContainerProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.JSPTemplateProcessor(java.lang.ThreadLocal, java.lang.ThreadLocal)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.PerSessionProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.ServletAdaptor$1$1(com.sun.jersey.impl.container.servlet.ServletAdaptor$1, javax.persistence.EntityManagerFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.ServletAdaptor$1(com.sun.jersey.impl.container.servlet.ServletAdaptor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.ErrorHelper()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.HttpHelper()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.ResourceMethod$1()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.EntityParamDispatchProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.FormDispatchProvider$FormParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.FormDispatchProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.HttpReqResDispatchProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.MultipartFormDispatchProvider$MultipartFormParamInjectable(com.sun.jersey.spi.MessageBodyWorkers, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.VoidVoidDispatchProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.CookieParamInjectableProvider$CookieParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.CookieParamInjectableProvider$CookieTypeParamInjectable(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.CookieParamInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.HeaderParamInjectableProvider$HeaderParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.HeaderParamInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextInjectable.HttpContextInjectableProvider$HttpContextInjectable()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$HttpContextRequestInjectable.HttpContextInjectableProvider$HttpContextRequestInjectable()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.HttpContextInjectableProvider$UriInfoInjectable()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.MatrixParamInjectableProvider$MatrixParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.MatrixParamInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.PathParamInjectableProvider$PathParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.PathParamInjectableProvider$PathParamListPathSegmentInjectable(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.PathParamInjectableProvider$PathParamPathSegmentInjectable(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.PathParamInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.QueryParamInjectableProvider$QueryParamInjectable(com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.QueryParamInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.BaseStringConstructorExtractor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.MultivaluedParameterProcessor()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.PrimitiveMapper()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.IntrospectionModeller$1()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.IntrospectionModeller$2()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.IntrospectionModeller$3()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.IntrospectionModeller$4()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.IntrospectionModeller$5()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.IntrospectionModeller$6()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.IntrospectionModeller()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.AbstractModelValidator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator(com.sun.jersey.impl.modelapi.validation.BasicValidator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.PerRequestProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.SingletonProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.ViewableMessageBodyWriter()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.ViewableRule()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.AtomicMatchingPatterns$EmptyIterator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.AtomicMatchingPatterns$SingleEntryIterator(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.AtomicMatchingPatterns(java.util.Collection)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.BaseRule(com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.CombiningMatchingPatterns(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.PatternRulePair.PatternRulePair(com.sun.jersey.api.uri.UriPattern, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.RightHandPathRule(boolean, boolean, com.sun.jersey.spi.uri.rules.UriRule)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.RootResourceClassesRule(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.SequentialMatchingPatterns(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.TerminatingRule()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.UriRulesFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules$SearchState.AutomataMatchingUriTemplateRules$SearchState(com.sun.jersey.impl.uri.rules.automata.TrieNode, com.sun.jersey.impl.uri.rules.automata.TrieArc, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.AutomataMatchingUriTemplateRules(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.TrieArc(com.sun.jersey.impl.uri.rules.automata.TrieNode, char)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.TrieNode(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.TrieNodeValue$ArrayIterator(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.TrieNodeValue$EmptyIterator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.TrieNodeValue$SingleEntryIterator(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.TrieNodeValue()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.WadlBuilder(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.WadlFactory(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.WadlGeneratorImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.WadlMethodFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.ApplicationDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ObjectFactory.ObjectFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.WadlGeneratorApplicationDoc(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.ApplicationDocs)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.WadlGeneratorGrammarsSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.research.ws.wadl.Grammars)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.ResourceDocAccessor(com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.WadlGeneratorResourceDocSupport(com.sun.jersey.impl.wadl.WadlGenerator, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.AnnotationDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.ClassDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.MethodDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.NamedValueType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory.ObjectFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.ParamDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.RepresentationDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType.RequestDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.ResourceDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.ResponseDocType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.WadlParamType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory.ObjectFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.XhtmlElementType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.XhtmlValueType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.WebApplicationFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.ResourceClassInjector$1(com.sun.jersey.spi.resource.ResourceClassInjector, java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.ResourceProviderFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.Application()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.Grammars()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.Include()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.Link()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.Method()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.ObjectFactory()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.Option()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.Param()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.ResourceType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.Resources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.Response()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.mediaEquals(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getAbstractResource(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Object[]</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.Object[].clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.checkType(java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.printStackTrace()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Short</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.lang.Short.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Short.valueOf(short)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.checkType(java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.NOTIFICATION_PREFIX</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.REQUEST_PREFIX</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.RESPONSE_PREFIX</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseLine(com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.PROPERTY_CLASSPATH</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.paths</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.reload()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PROPERTY_PACKAGES</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.packages</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.reload()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.FEATURE_CANONICALIZE_URI_PATH</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.FEATURE_IMPLICIT_VIEWABLES</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.FEATURE_MATCH_MATRIX_PARAMS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.FEATURE_NORMALIZE_URI</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.FEATURE_REDIRECT</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_NOTIFIER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.PROPERTY_DEFAULT_RESOURCE_PROVIDER_CLASS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.PROPERTY_WADL_GENERATOR_CONFIG</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeature(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getHttpMethod()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.httpMethod</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.PathValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.getValue()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.value</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.ResourceModelIssue.message</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.Viewable(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.getTemplateName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.view.Viewable.templateName</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[], java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.findClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.baseUri</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.getbaseUri()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setBaseUri(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.configure()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.WadlGeneratorConfig(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.buildId</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.getBuildId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.HEADER_ARRAY</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.append(java.lang.StringBuilder, boolean, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cookie(javax.ws.rs.core.NewCookie[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.expires(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.getHeader(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(com.sun.jersey.impl.http.header.AcceptableToken, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.className</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitOuterClass(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitSource(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$200(com.sun.jersey.impl.container.config.AnnotatedClassScanner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.getPageObject(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.page</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.setPage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getAuthenticationScheme()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.isUserInRole(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.ThreadLocalNamedInvoker(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.objectNotAWebResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.allow</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getHttpMethod()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.httpMethod</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.CookieParamInjectableProvider$CookieTypeParamInjectable(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.PathParamInjectableProvider$PathParamListPathSegmentInjectable(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.PathParamInjectableProvider$PathParamPathSegmentInjectable(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.CollectionStringExtractor$ListString(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.CollectionStringExtractor$SetString(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.CollectionStringExtractor$SortedSetString(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.CollectionStringExtractor(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.CollectionValueOfExtractor$ListValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.CollectionValueOfExtractor$SetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.CollectionValueOfExtractor$SortedSetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.StringExtractor(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ResolvedViewable.ResolvedViewable(com.sun.jersey.spi.template.TemplateProcessor, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.HttpMethodRule$MatchStatus(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule$MatchStatus.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.allow</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.getRightHandPath(java.util.regex.MatchResult)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.path</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource._requiredJaxbContextPath</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.ResourceDocAccessor$ParameterAnnotationMapping(java.lang.String, int, java.lang.Class, com.sun.jersey.api.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.RESOURCE_DOC_FILE</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.annotationTypeName</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAnnotationTypeName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.setAnnotationTypeName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.className</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.commentText</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getClassName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getCommentText()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.setClassName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.setCommentText(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.commentText</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getCommentText()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getMethodName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getReturnDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getReturnTypeExample()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.methodName</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.returnTypeExample</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setCommentText(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setMethodName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setReturnDoc(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.setReturnTypeExample(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.getValue()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.setValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType.value</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.commentText</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getCommentText()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getParamName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.paramName</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.setCommentText(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.setParamName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.example</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getExample()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getMediaType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.mediaType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setDoc(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setExample(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setMediaType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getReturnDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.returnDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.setReturnDoc(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getStyle()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setDoc(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setStyle(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.style</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.el(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.val(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.value</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedPath</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedPath</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAuthenticationScheme()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getLanguage()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.isUserInRole(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.method</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setMethod(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.APPLICATION_CONFIG_CLASS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.RESOURCE_CONFIG_CLASS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initResourceConfigFeatures(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.resolve(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getLang()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getTitle()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.lang</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.setLang(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.setTitle(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.title</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.HTTPMethods(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.fromValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.value()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.getHref()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.setHref(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getRel()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getResourceType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getRev()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rel</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.resourceType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rev</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.setRel(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.setResourceType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.setRev(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getHref()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setHref(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getValue()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.setValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.value</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param._default</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.fixed</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getDefault()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getFixed()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.path</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setDefault(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setFixed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.ParamStyle(java.lang.String, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.value</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.value()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getHref()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getMediaType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.mediaType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setHref(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setMediaType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getQueryType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.path</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.queryType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.setQueryType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.setId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.base</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getBase()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.setBase(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.String.String(char[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.contains(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.endsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.fromValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equalsIgnoreCase(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.getBytes(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(char, char)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replaceAll(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.split(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toUpperCase()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.isEmpty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(char)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuffer</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.append(java.lang.StringBuilder, boolean, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(char)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.append(java.lang.StringBuilder, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.CharSequence, int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.append(java.lang.StringBuilder, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.charAt(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.delete(int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.indexOf(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.lastIndexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.lastIndexOf(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.length()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.append(java.lang.StringBuilder, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.stripMatrixParams(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.isConflictingPaths(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.getAbsolutePath(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.toStringRepresentation(java.lang.StringBuilder, int, char[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.getRequiredJaxbContextPath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String[]</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.String[].clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.copyOf(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieArc.merge(com.sun.jersey.impl.uri.rules.automata.TrieArc)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.set(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.out</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.LoggingFilter()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Thread</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</inbound>
            <feature confirmed="no">
                <name>java.lang.Thread.currentThread()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.getContextClassLoader()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ThreadLocal</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.ThreadLocalHttpContext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.context</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.set(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.JSPTemplateProcessor(java.lang.ThreadLocal, java.lang.ThreadLocal)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.requestInvoker</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.responseInvoker</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.ThreadLocal()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.ThreadLocalHttpContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.get()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getUriInfo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.set(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.set(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerCheckedException.ContainerCheckedException(java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.loadWadlGeneratorsFromConfig(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getExceptionType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>java.lang.Throwable.printStackTrace()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.printStackTrace(java.io.PrintWriter)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.UnsupportedOperationException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.UnsupportedOperationException.UnsupportedOperationException()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedURIs(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.remove()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAuthenticationScheme()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getUserPrincipal()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.isSecure()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.isUserInRole(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.configure()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.setWadlGeneratorDelegate(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Void</name>
            <feature confirmed="no">
                <name>java.lang.Void.TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.annotation</name>
        <class confirmed="no">
            <name>java.lang.annotation.Annotation</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.annotations</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.as</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.as</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.as</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.annotations</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.EMTPTY_ANNOTATIONS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.ContainerResponse(com.sun.jersey.spi.container.WebApplication, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.EMPTY_ANNOTATIONS</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.annotations</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setAnnotations(java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
            <feature confirmed="no">
                <name>java.lang.annotation.Annotation.annotationType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Documented</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.ElementType</name>
            <feature confirmed="no">
                <name>java.lang.annotation.ElementType.ANNOTATION_TYPE</name>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.annotation.ElementType.TYPE</name>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Retention</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.RetentionPolicy</name>
            <feature confirmed="no">
                <name>java.lang.annotation.RetentionPolicy.RUNTIME</name>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Target</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.PerSession</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.PerRequest</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.Singleton</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.AccessibleObject</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Constructor</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.ctor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.getCtor()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.constructor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.BaseStringConstructorExtractor(java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.constructor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getGenericParameterTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getParameterAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.newInstance(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Field</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.field</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getField()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.ResourceClassInjector$1(com.sun.jersey.spi.resource.ResourceClassInjector, java.lang.reflect.Field)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.val$f</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestFields</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonFields</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getDeclaringClass()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getGenericType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.isAccessible()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.setAccessible(boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationHandler</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationTargetException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.WebApplicationImpl$1(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.WebApplicationImpl$2(com.sun.jersey.impl.application.WebApplicationImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$AdaptingResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$DefaultResourceComponentProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider$Scope, java.lang.reflect.Constructor, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseStringConstructorExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.CollectionStringConstructorExtractor$ListString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.CollectionStringConstructorExtractor$SetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.CollectionStringConstructorExtractor$SortedSetString(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.CollectionStringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.CollectionValueOfExtractor$ListValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.CollectionValueOfExtractor$SetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.CollectionValueOfExtractor$SortedSetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.StringConstructorExtractor(java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getTargetException()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.AbstractMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractMethod.method</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.method</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.AbstractSubResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, com.sun.jersey.api.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.m</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.method</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.BaseValueOfExtractor(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.valueOf</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.CollectionValueOfExtractor$ListValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.CollectionValueOfExtractor$SetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.CollectionValueOfExtractor$SortedSetValueOf(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.CollectionValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.ValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.m</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getRequestRepresentation(java.lang.Class, java.lang.reflect.Method, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getResponse(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.perRequestSetters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.singletonSetters</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getDeclaredAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getDeclaringClass()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getGenericReturnType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.getMethodByName(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getParameterAnnotations()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.isRequestResponseMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getReturnType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$2.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.VoidVoidDispatchProvider$VoidVoidMethodInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.BaseValueOfExtractor.getValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.inject(com.sun.jersey.api.core.HttpContext, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.toGenericString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Modifier</name>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isAbstract(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isInterface(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.ParameterizedType</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.ParameterizedType.getActualTypeArguments()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.ParameterizedType.getRawType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Proxy</name>
            <feature confirmed="no">
                <name>java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createProxy(java.lang.Class, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Type</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.entityType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getEntityType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.WebApplicationImpl$5$1(com.sun.jersey.impl.application.WebApplicationImpl$5, com.sun.jersey.impl.application.InjectableProviderFactory$AccessibleObjectContext, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.val$c</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, com.sun.jersey.spi.inject.Inject, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$ContextInjectableProvider.WebApplicationImpl$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.EntityParamDispatchProvider$EntityInjectable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.FormDispatchProvider$FormEntityInjectable(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.MultipartFormDispatchProvider$MultipartFormInjectable(com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.t</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.entityType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getEntityType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$ContextInjectableProvider.ServletContainer$ContextInjectableProvider(java.lang.reflect.Type, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.TypeVariable</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getResolvedType(java.lang.reflect.Type, java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameter(com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.Parameter, java.lang.annotation.Annotation[], boolean)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.InetSocketAddress</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <feature confirmed="no">
                <name>java.net.InetSocketAddress.InetSocketAddress(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.InetSocketAddress.getHostName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.InetSocketAddress.getPort()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.MalformedURLException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URI</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.contentLocation(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.location(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUri()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUri()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexDir(java.io.File, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.ContainerRequest(com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.absolutePathUri</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.baseUri</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePathBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUri()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUri()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.requestUri</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.net.URI.URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.create(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.lang.String, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.lang.String, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getPort()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getRawFragment()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getRawPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEncodedPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getRawQuery()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getRawSchemeSpecificPart()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getScheme()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyServerFactory.create(java.net.URI, com.sun.grizzly.tcp.Adapter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.isAbsolute()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.relativize(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.resolve(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.service(com.sun.grizzly.tcp.http11.GrizzlyRequest, com.sun.grizzly.tcp.http11.GrizzlyResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.resolve(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.toASCIIString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestLine(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.toURL()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URISyntaxException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getBaseUri(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[], java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.openStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.toURI()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.setProperty(java.lang.Object, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URLClassLoader</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader</inbound>
            <feature confirmed="no">
                <name>java.net.URLClassLoader.URLClassLoader(java.net.URL[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URLClassLoader.URLClassLoader(java.net.URL[], java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.WadlGeneratorTask$Loader(java.lang.String[], java.lang.ClassLoader)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URLClassLoader.findClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.findClass(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URL[]</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.security</name>
        <class confirmed="no">
            <name>java.security.AccessController</name>
            <feature confirmed="no">
                <name>java.security.AccessController.doPrivileged(java.security.PrivilegedAction)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.security.Principal</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getUserPrincipal()</inbound>
        </class>
        <class confirmed="no">
            <name>java.security.PrivilegedAction</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.configureField(java.lang.reflect.Field)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.text</name>
        <class confirmed="no">
            <name>java.text.ParseException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.WadlGeneratorConfig$WadlGeneratorConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.getDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAttributeDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getMethodDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getParamDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAnnotationDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.getDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getRepresentations()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getWadlParams()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.getChildNodes()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResourceTypeOrMethodOrRepresentation()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getInclude()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getOption()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getParam()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getProfile()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getStatus()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getParam()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getRepresentation()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getMethodOrResource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getParam()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getMethod()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getParam()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getResource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getAny()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getDoc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getParam()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getRepresentationOrFault()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.asList(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.cleanIssueList()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.AtomicMatchingPatterns(java.util.Collection)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.rules</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collection.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collection.iterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.emptyList()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.emptyMap()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getLanguageMappings()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getMediaTypeMappings()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.singletonList(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.sort(java.util.List, java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableSet(java.util.Set)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Comparator</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.RulesMap.RulesMap()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.COMPARATOR</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <feature confirmed="no">
                <name>java.util.Comparator.compare(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Date</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.expires(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.lastModified(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
            <feature confirmed="no">
                <name>java.util.Date.getTime()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Enumeration</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            <feature confirmed="no">
                <name>java.util.Enumeration.hasMoreElements()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Enumeration.nextElement()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer.getHeaders(com.sun.grizzly.tcp.http11.GrizzlyRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap</inbound>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.ServletAdaptor()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.ResourceMethodMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.Include()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.Link()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.Method()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.Option()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.Param()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.ResourceType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.Resources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.Response()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashSet</name>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.io.File[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.ruleIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.rulesIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.i</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.getValue()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue.getIterator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$ListEntry.create(java.util.Collection)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceClassRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.ResourceObjectRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.WebApplicationFactory.createWebApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.remove()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.LinkedList</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedResults()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedTemplates()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedURIs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResults</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.paths</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.resources</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.templates</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <feature confirmed="no">
                <name>java.util.LinkedList.LinkedList()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.WebApplicationContext(com.sun.jersey.impl.application.WebApplicationImpl, com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.AbstractModelValidator()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.addFirst(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushResource(java.lang.Object, com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushRightHandPathLength(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.get(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.getLast()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.iterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.listIterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.removeFirst()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.AbstractField(java.lang.reflect.Field)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractField.parameters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractModelComponent.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.AbstractResource(java.lang.Class, com.sun.jersey.api.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.constructors</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.fields</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getConstructors()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getFields()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getResourceMethods()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSetterMethods()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceLocators()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getSubResourceMethods()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.resourceMethods</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.setterMethods</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.subResourceLocators</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.subResourceMethods</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.AbstractResourceConstructor(java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceConstructor.parameters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.AbstractResourceMethod(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Method, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.consumeMimeList</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedInputTypes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.getSupportedOutputTypes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.parameters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResourceMethod.produceMimeList</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.AbstractSetterMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSetterMethod.parameters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.AbstractSubResourceLocator(java.lang.reflect.Method, com.sun.jersey.api.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractSubResourceLocator.parameters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.Parameterized.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.WadlGeneratorConfig$WadlGeneratorConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder._generators</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder._descriptions</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.descriptions()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigGeneratorImpl.configure()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.WadlGeneratorConfig$WadlGeneratorConfigImpl(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl._descriptions</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigImpl.configure()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.configure()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig.getWadlGenerator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(com.sun.jersey.api.wadl.config.WadlGeneratorDescription[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.nameValuePairs</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.reset()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.nameValuePairs</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getRequestFilters(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getResponseFilters(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedResults()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedTemplates()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedURIs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchedURIs(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.requestFilters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.responseFilters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.constructorInjectableParams</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHeadWrapperMethod.ResourceHeadWrapperMethod(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpMethod.ResourceHttpMethod(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.api.uri.UriTemplate, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod$1.compare(com.sun.jersey.impl.model.method.ResourceMethod, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.EMPTY_LIST</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.ResourceMethod(java.lang.String, com.sun.jersey.api.uri.UriTemplate, java.util.List, java.util.List, com.sun.jersey.spi.dispatch.RequestDispatcher)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.access$000(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.access$100(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumeMime</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getConsumes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.getProduces()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.mediaEquals(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produceMime</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.EntityParamDispatchProvider$EntityParamInInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.is</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker.EntityParamDispatchProvider$ObjectOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker.EntityParamDispatchProvider$ResponseOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker.EntityParamDispatchProvider$TypeOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$VoidOutInvoker.EntityParamDispatchProvider$VoidOutInvoker(com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.FormDispatchProvider$FormParamInInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.is</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker.FormDispatchProvider$ObjectOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker.FormDispatchProvider$ResponseOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker.FormDispatchProvider$TypeOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$VoidOutInvoker.FormDispatchProvider$VoidOutInvoker(com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider, com.sun.jersey.api.model.AbstractResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.produceMime</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamListPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$ListString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$ListString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$ListValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.IntrospectionModeller$7(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.val$ml</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getDeclaredMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.AbstractModelValidator()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.cleanIssueList()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.getIssueList()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.issueList</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.constructorInjectableParams</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.BaseRule.pushParameterValues(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.CombiningMatchingPatterns(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns.rs</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.SequentialMatchingPatterns(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.access$000(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns.rules</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.SubLocatorRule(com.sun.jersey.api.uri.UriTemplate, java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.is</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.AutomataMatchingUriTemplateRules(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.docs</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.getDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.attribute</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.getAttributeDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.hasAttributeDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.getMethodDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.methodDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.getParamDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.paramDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.annotationDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAnnotationDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.classDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.getDocs()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getRepresentations()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.getWadlParams()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.hasRepresentations()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.representation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.wadlParam</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.addChild(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.getChildNodes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.accept</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.acceptLanguages</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedPathSegments</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedPathSegments</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaTypes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getPathSegments(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.ResourceClassInjector(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriRuleContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.getResourceTypeOrMethodOrRepresentation()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.content</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getContent()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.getInclude()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.include</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getOption()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.option</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getParam()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getProfile()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getStatus()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.param</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.profile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.status</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getParam()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getRepresentation()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.param</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.representation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getMethodOrResource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getParam()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.methodOrResource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.param</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.type</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getParam()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.method</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.param</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getResource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.resource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.doc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getAny()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getDoc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getParam()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getRepresentationOrFault()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.param</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.representationOrFault</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(int, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigBuilder.generator(com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.descriptions()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.generator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.add(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.put(com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$7.run()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutConstructorsList(com.sun.jersey.api.model.AbstractResource, java.lang.reflect.Constructor[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutFieldsList(com.sun.jersey.api.model.AbstractResource, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceLocator(com.sun.jersey.api.model.AbstractSubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractSubResourceMethod(com.sun.jersey.api.model.AbstractSubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDoc(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.addDocForExample(java.util.List, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createMethod(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.add(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.addChild(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.clear()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.get(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.hasAttributeDocs()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.hasRepresentations()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGeneratorDescriptions(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerators(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.remove(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getLastPathParameterIndex(java.lang.String, com.sun.jersey.api.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.containsMediaOfMethod(java.util.List, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processHead(com.sun.jersey.impl.model.ResourceMethodMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceLocators(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.impl.model.RulesMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.validate(com.sun.jersey.api.model.AbstractModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.CombiningMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.SequentialMatchingPatterns$XInterator(com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns, java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.initTrie(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getClassDoc(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getMethodDoc(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getParamDoc(java.lang.Class, java.lang.reflect.Method, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor.getSourceName(com.sun.jersey.api.model.Parameter, com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType, com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.removeAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(java.lang.String, com.sun.jersey.api.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.AbstractModelValidator.cleanIssueList()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.model.AbstractResource.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.subList(int, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getElements(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask$Loader.getURLs(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.ListIterator</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <feature confirmed="no">
                <name>java.util.ListIterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.next()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.nextIndex()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.remove()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Locale</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(java.util.Locale, java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(com.sun.jersey.impl.http.header.AcceptableLanguageTag, java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableLanguages()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getLanguage()</inbound>
            <feature confirmed="no">
                <name>java.util.Locale.Locale(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getLanguage()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Locale.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(java.util.Locale, java.util.Locale)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.ClasspathResourceConfig(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.features</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeatures()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getLanguageMappings()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getMediaTypeMappings()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.languageExtentions</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.mediaExtentions</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.properties</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.PackagesResourceConfig(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getFeatures()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getLanguageMappings()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getMediaTypeMappings()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.HEADER_MAP</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ThreadLocalHttpContext.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.properties</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.WebApplicationImpl$3(com.sun.jersey.impl.application.WebApplicationImpl, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.val$m</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.ServletAdaptor()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.access$000(com.sun.jersey.impl.container.servlet.ServletAdaptor)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.persistenceUnits</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.init(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.resource.ResourceProviderFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processOptions(com.sun.jersey.impl.model.ResourceMethodMap, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.ResourceHttpOptionsMethod$OptionsRequestDispatcher(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod.ResourceHttpOptionsMethod(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.injectables</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToClassMap</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.primitiveToDefaultValueMap</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.ANOT_HELPER_MAP</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.map</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.DEFAULT_VALUES</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.HttpMethodRule(java.util.Map, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.map</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RootResourceClassesRule.RootResourceClassesRule(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateMethod(com.sun.jersey.api.model.AbstractResource, java.util.Map, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethod.WadlMethodFactory$WadlOptionsMethod(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.WadlMethodFactory$WadlOptionsMethodDispatcher(java.util.Map, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.cookies</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.Doc()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.Include()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.Link()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.Method()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.Option()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.Param()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.RepresentationType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.Request()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.Resource()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.ResourceType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.Resources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.Response()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.getOtherAttributes()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.otherAttributes</inbound>
            <feature confirmed="no">
                <name>java.util.Map.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.entrySet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.prefixId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.getPaths(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getFeature(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.getPackages(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormEntityInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceProviderFactory.createProvider(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.model.AbstractResource, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.keySet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.setId()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.addToPatternMethodMap(java.util.Map, com.sun.jersey.impl.uri.PathPattern, com.sun.jersey.impl.model.method.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResource(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.createDefaultValues()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.putAll(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.size()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.set(int, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.values()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateSubResource(com.sun.jersey.api.model.AbstractResource, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map$Entry</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getKey()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.NoSuchElementException</name>
            <feature confirmed="no">
                <name>java.util.NoSuchElementException.NoSuchElementException()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$EmptyIterator.next()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns$SingleEntryIterator.next()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.CombiningMatchingPatterns$XInterator.next()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.next()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$ArrayIterator.next()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$EmptyIterator.next()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNodeValue$SingleEntryIterator.next()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Properties</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.WadlGeneratorDescription(java.lang.Class, java.util.Properties)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription._properties</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorDescription.setProperties(java.util.Properties)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <feature confirmed="no">
                <name>java.util.Properties.Properties()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.entrySet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.load(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.BuildId._initiateBuildId()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfig$WadlGeneratorConfigDescriptionBuilder.prop(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Set</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.ContainerFactory.createContainer(java.lang.Class, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.reload()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.classes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.getSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.singletons</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.reload()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.emts</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.dispatchers</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatchers()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.createWadlResource(java.util.Set, com.sun.jersey.impl.model.RulesMap, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.AnnotatedClassScanner(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$100(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.access$300(com.sun.jersey.impl.container.config.AnnotatedClassScanner)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.annotations</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.classes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getMatchingClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.io.File[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.hps</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.TemplateFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.getTemplateProcessors()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.templates</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.createWadlResource(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.WadlResource(java.util.Set, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.template.TemplateContext.getTemplateProcessors()</inbound>
            <feature confirmed="no">
                <name>java.util.Set.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.DefaultResourceConfig(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.clear()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.reload()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.reload()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.iterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.DefaultResourceConfig.setPropertiesAndFeatures(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceClasses()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getRootResourceSingletons()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.createHeaderArray()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.getHeaders(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.ResourceClass(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.impl.application.ResourceMethodDispatcherFactory, com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.wadl.WadlFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.processSubResourceMethods(com.sun.jersey.impl.application.ResourceMethodDispatcherFactory)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceMethodMap.sort()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.getAllow(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.UriRulesFactory.create(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generate(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateResource(com.sun.jersey.api.model.AbstractResource, java.lang.String, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.size()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processFields(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceClassInjector.processSetters(com.sun.jersey.spi.inject.InjectableProviderContext, com.sun.jersey.spi.service.ComponentProvider$Scope, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.SortedSet</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.getInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.getInstance(java.lang.Class, java.lang.reflect.Method, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterProcessor.process(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.util.SortedSet.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.SortedSet.first()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Stack</name>
            <feature confirmed="no">
                <name>java.util.Stack.Stack()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Stack.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Stack.pop()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Stack.push(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.AutomataMatchingUriTemplateRules.find(java.lang.CharSequence, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.TreeMap</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.model.RulesMap</inbound>
            <feature confirmed="no">
                <name>java.util.TreeMap.TreeMap(java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.RulesMap.RulesMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.TreeSet</name>
            <feature confirmed="no">
                <name>java.util.TreeSet.TreeSet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor$SortedSetString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor$SortedSetString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor$SortedSetValueOf.getInstance()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.TreeSet.TreeSet(java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.resource.ResourceConstructor.getConstructor(java.lang.Class, com.sun.jersey.api.model.AbstractResource, com.sun.jersey.spi.service.ComponentProvider$Scope)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.WeakHashMap</name>
            <feature confirmed="no">
                <name>java.util.WeakHashMap.WeakHashMap()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent</name>
        <class confirmed="no">
            <name>java.util.concurrent.ConcurrentHashMap</name>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ConcurrentMap</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.metaClassMap</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.getResourceClass(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.Executor</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ExecutorService</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.Executors</name>
            <feature confirmed="no">
                <name>java.util.concurrent.Executors.newCachedThreadPool()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.httpserver.HttpServerFactory.create(java.net.URI, com.sun.net.httpserver.HttpHandler)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.jar</name>
        <class confirmed="no">
            <name>java.util.jar.JarEntry</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.util.jar.JarEntry.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarEntry.isDirectory()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.jar.JarFile</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.util.jar.JarFile.JarFile(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarFile.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarFile.entries()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarFile.getInputStream(java.util.zip.ZipEntry)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarFile.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.logging</name>
        <class confirmed="no">
            <name>java.util.logging.Level</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <feature confirmed="no">
                <name>java.util.logging.Level.CONFIG</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Level.FINEST</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Level.INFO</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Level.SEVERE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Level.WARNING</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.logging.Logger</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.access$400()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.LOG</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.LOG</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.LOG</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <feature confirmed="no">
                <name>java.util.logging.Logger.finest(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.getLogger(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorConfigLoader.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ResourceClass.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.TemplateFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.info(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.config.WadlGeneratorLoader.loadWadlGenerator(com.sun.jersey.api.wadl.config.WadlGeneratorDescription, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.setApplicationDocsFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createApplication()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.setGrammarsFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.isLoggable(java.util.logging.Level)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlFactory.checkForJAXB()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$5$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.severe(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.FilterFactory.getFilters(java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ResourceMethodDispatcherFactory.getDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$4.getResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getJarFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.indexJar(java.io.File, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.warning(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.newResourceClass(com.sun.jersey.api.model.AbstractResource)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.processRootResources()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.index(java.net.URI, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.scan(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.regex</name>
        <class confirmed="no">
            <name>java.util.regex.MatchResult</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getMatchResult()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.matchResult</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.setMatchResult(java.util.regex.MatchResult)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.AtomicMatchingPatterns.match(java.lang.CharSequence, com.sun.jersey.spi.uri.rules.UriMatchResultContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.getRightHandPath(java.util.regex.MatchResult)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SequentialMatchingPatterns$XInterator.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext.getMatchResult()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.uri.rules.UriMatchResultContext.setMatchResult(java.util.regex.MatchResult)</inbound>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.end(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.group()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.group(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.pushParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.getRightHandPath(java.util.regex.MatchResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.groupCount()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.getRightHandPath(java.util.regex.MatchResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.start(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Matcher</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.replaceAll(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Pattern</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.PARAMETER_PATTERN</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.compile(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.matcher(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.automata.TrieNode.add(java.lang.String, java.lang.Object, com.sun.jersey.api.uri.UriPattern)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.zip</name>
        <class confirmed="no">
            <name>java.util.zip.GZIPInputStream</name>
            <feature confirmed="no">
                <name>java.util.zip.GZIPInputStream.GZIPInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.zip.GZIPOutputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.finish()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.gos</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <feature confirmed="no">
                <name>java.util.zip.GZIPOutputStream.GZIPOutputStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.zip.GZIPOutputStream.finish()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter$Adapter.finish()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.zip.ZipEntry</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.mail</name>
        <class confirmed="no">
            <name>javax.mail.BodyPart</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            <feature confirmed="no">
                <name>javax.mail.BodyPart.getContentType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.mail.BodyPart.getDisposition()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.mail.BodyPart.getHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.mail.BodyPart.getInputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.mail.internet</name>
        <class confirmed="no">
            <name>javax.mail.internet.MimeMultipart</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <feature confirmed="no">
                <name>javax.mail.internet.MimeMultipart.getBodyPart(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.mail.internet.MimeMultipart.getCount()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getFormData(javax.mail.internet.MimeMultipart)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.naming</name>
        <class confirmed="no">
            <name>javax.naming.Context</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getContext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <feature confirmed="no">
                <name>javax.naming.Context.lookup(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.naming.InitialContext</name>
            <feature confirmed="no">
                <name>javax.naming.InitialContext.InitialContext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ThreadLocalNamedInvoker.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getContext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.naming.NamingException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getContext()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.persistence</name>
        <class confirmed="no">
            <name>javax.persistence.EntityManagerFactory</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.ServletAdaptor$1$1(com.sun.jersey.impl.container.servlet.ServletAdaptor$1, javax.persistence.EntityManagerFactory)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1$1.val$emf</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.persistence.PersistenceUnit</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>javax.persistence.PersistenceUnit.unitName()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor$1.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.persistence.PersistenceUnit, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.servlet</name>
        <class confirmed="no">
            <name>javax.servlet.RequestDispatcher</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.RequestDispatcherWrapper(javax.servlet.RequestDispatcher, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.d</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.RequestDispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.Servlet</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.create(java.net.URI, java.lang.Class, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory.getInstance(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletConfig</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.config</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.initResourceConfigFeatures(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.load()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletConfig.getInitParameter(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.setResourceConfigFeature(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletConfig.getInitParameterNames()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletAdaptor.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getInitParams(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletConfig.getServletContext()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.servletContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.context</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.validate(com.sun.jersey.api.core.ResourceConfig)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletContext.getRealPath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletContext.getRequestDispatcher(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletContext.getResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.resolve(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletException.ServletException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getPaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletException.ServletException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletException.ServletException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletInputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletOutputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletRequest</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletResponse</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.RequestDispatcherWrapper.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.servlet.http</name>
        <class confirmed="no">
            <name>javax.servlet.http.HttpServlet</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServlet.HttpServlet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.ServletContainer()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServlet.init(javax.servlet.ServletConfig)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.init(javax.servlet.ServletConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpServletRequest</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.hsr</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.ServletContainerRequest(javax.servlet.http.HttpServletRequest, com.sun.jersey.spi.container.WebApplication, java.lang.String, java.net.URI, java.net.URI, com.sun.jersey.api.InBoundHeaders, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getAuthenticationScheme()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.isSecure()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.isUserInRole(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.request</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getAuthType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getAuthenticationScheme()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getContextPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getHeaderNames()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.getHeaders(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getInputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getMethod()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getPathInfo()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getQueryString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getRequestURI()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getRequestURL()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getServletPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getSession()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getUserPrincipal()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.getUserPrincipal()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.isSecure()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.isSecure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.isUserInRole(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.ServletContainerRequest.isUserInRole(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpServletResponse</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.Wrapper(javax.servlet.http.HttpServletResponse, java.io.PrintWriter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.ServletContainer$Writer(javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.response</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.configure(javax.servlet.ServletConfig, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.container.WebApplication)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.getOutputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.initiate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.setContentLength(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.setStatus(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpServletResponseWrapper</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponseWrapper.HttpServletResponseWrapper(javax.servlet.http.HttpServletResponse)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Wrapper.Wrapper(javax.servlet.http.HttpServletResponse, java.io.PrintWriter)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSession</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSession.getAttribute(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.getInstance(com.sun.jersey.spi.service.ComponentProvider, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.servlet.jsp</name>
        <class confirmed="no">
            <name>javax.servlet.jsp.JspContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.getPageObject(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.jsp.JspContext.getAttribute(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.getPageObject(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.jsp.JspContext.getOut()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.jsp.JspContext.setAttribute(java.lang.String, java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.jsp.JspException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            <feature confirmed="no">
                <name>javax.servlet.jsp.JspException.JspException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.jsp.JspException.JspException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.jsp.JspWriter</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.doTag()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.servlet.jsp.tagext</name>
        <class confirmed="no">
            <name>javax.servlet.jsp.tagext.SimpleTagSupport</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.servlet.Include</inbound>
            <feature confirmed="no">
                <name>javax.servlet.jsp.tagext.SimpleTagSupport.SimpleTagSupport()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.Include.Include()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.ws.rs</name>
        <class confirmed="no">
            <name>javax.ws.rs.Consumes</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addConsumes(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.Consumes.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassConsumes(java.lang.Exception, java.lang.Class, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodConsumes(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Consumes)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.CookieParam</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.CookieParam.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.DefaultValue</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.DefaultValue.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.Encoded</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParameter(java.lang.String, int, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.processParameters(com.sun.jersey.api.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.FormParam</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.processParameters(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.GET</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.HeaderParam</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.HeaderParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.HeaderParam.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.HttpMethod</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.visitAbstractResourceMethod(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.HttpMethod.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodHttpMethod(java.lang.Class, java.lang.reflect.Method, javax.ws.rs.HttpMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.MatrixParam</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.MatrixParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.MatrixParam.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.Path</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderClasses()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.getProviderSingletons()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.isRootResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.validate()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.logNonPublicMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSetterMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.Path.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceLocatorsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.PathParam</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.PathParam.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.Produces</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.addProduces(com.sun.jersey.impl.modelapi.annotation.AnnotatedMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.workOutSubResourceMethodsList(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.impl.modelapi.annotation.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.Produces.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badClassProduces(java.lang.Exception, java.lang.Class, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.ErrorHelper.badMethodProduces(java.lang.Exception, java.lang.Class, java.lang.reflect.Method, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.QueryParam</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.QueryParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.ResourceDocAccessor$ParameterAnnotationMapping.static {}</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.QueryParam.value()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.WebApplicationException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.handleRequest(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAccept(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptCharset(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptEncoding(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getAcceptLangauge(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$EntityParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInInvoker.getParams(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.SubLocatorRule.invokeSubLocator(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, javax.ws.rs.core.Response)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.WebApplicationException.WebApplicationException(javax.ws.rs.core.Response)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.WebApplicationException.getResponse()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.ws.rs.core</name>
        <class confirmed="no">
            <name>javax.ws.rs.core.Application</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.core.ResourceConfig</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.createResourceConfig(javax.servlet.ServletConfig)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Application.Application()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ResourceConfig.ResourceConfig()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Application.getClasses()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Application.getSingletons()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ApplicationAdapter.ApplicationAdapter(javax.ws.rs.core.Application)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.CacheControl</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cacheControl(javax.ws.rs.core.CacheControl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Context</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.hc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$3.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.resourceConfig</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.servletContext</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.ui</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.hsr</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.PerSessionProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.mbw</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.mbws</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, java.lang.annotation.Annotation, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.annotation.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.PerRequestProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.resource.SingletonProvider.ipc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.tc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.ui</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.tc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Cookie</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieTypeParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.CookieParam, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Cookie.getValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.EntityTag</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(javax.ws.rs.core.EntityTag)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.EntityTag.EntityTag(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.EntityTag.getValue()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.GenericEntity</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.GenericEntity.getEntity()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.GenericEntity.getType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setEntity(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.HttpHeaders</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.MediaType</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(com.sun.jersey.impl.http.header.AcceptableMediaType, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.isCompatible(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.MULTIPART_FORM_DATA</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.mediaType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$1.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$2.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractSubResourceMethod, com.sun.jersey.api.model.AbstractSubResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateInErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator.generateOutErrMsg(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.match(java.util.List, javax.ws.rs.core.MediaType, java.util.List, java.util.LinkedList)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.generateRequest(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGenerator.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.contentType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getMediaType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.APPLICATION_OCTET_STREAM_TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.MediaType(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.TEXT_PLAIN_TYPE</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.vary(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.getParameters()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.getSubtype()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.getType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.ResourceJavaMethodDispatcher(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.produces(javax.ws.rs.core.MediaType, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.consumes(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceMethod.produces(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.processForm(com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.isWildcardSubtype()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.isWildcardType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.ResourceJavaMethodDispatcher.getAcceptableMediaType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.modelapi.validation.BasicValidator.findOutMTAmbiguities(com.sun.jersey.api.model.AbstractResource, java.util.List, com.sun.jersey.impl.modelapi.validation.BasicValidator$ResourceMethodAmbiguityErrMsgGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAcceptableMediaType(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponseRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.valueOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.MultivaluedMap</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter$Adapter.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.access$300(com.sun.jersey.api.container.filter.LoggingFilter, javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.headers</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getQueryParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$FormParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider.getInjectables(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.CookieParamInjectableProvider$CookieParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HeaderParamInjectableProvider$HeaderParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.QueryParamInjectableProvider$QueryParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.cookieNames</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.decodedQueryParameters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.encodedQueryParameters</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getLanguage()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getQueryParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestHeaders()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setHeaders(com.sun.jersey.api.InBoundHeaders)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.setUris(java.net.URI, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.headers</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseOptimal(com.sun.jersey.impl.ResponseImpl, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.add(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.entrySet()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printRequestHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.LoggingFilter.printResponseHeaders(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.grizzly.GrizzlyContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer$Writer.writeStatusAndHeaders(long, com.sun.jersey.spi.container.ContainerResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionStringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.CollectionValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getHeaderValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest, com.sun.jersey.spi.container.ContainerResponse)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.PostReplaceFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.getContentType(com.sun.jersey.api.core.HttpRequestContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringConstructorExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.StringExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.multivalued.ValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getLanguage()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.putSingle(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadata()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.uriConneg(java.lang.StringBuilder, com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.HttpReqResDispatchProvider$HttpReqResDispatcher._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getCookieNameValueMap()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.container.filter.GZIPContentEncodingFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.NewCookie</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cookie(javax.ws.rs.core.NewCookie[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.PathSegment</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider$PathParamPathSegmentInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.PathParamInjectableProvider.getInjectable(com.sun.jersey.spi.service.ComponentContext, javax.ws.rs.PathParam, com.sun.jersey.api.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.PathSegment.getMatrixParameters()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.MatrixParamInjectableProvider$MatrixParamInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Request</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Response</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.build()</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.ResponseImpl</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ResponseOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider.create(com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.TerminatingRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.isResponseSet()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.reset()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.response</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.Response()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.ResponseImpl(int, java.lang.Object, java.lang.reflect.Type, java.lang.Object[], java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.getEntity()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapWebApplicationException(javax.ws.rs.WebApplicationException, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.getMetadata()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponseNonOptimal(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.getStatus()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.noContent()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.notModified(javax.ws.rs.core.EntityTag)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.ok(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.ok(java.lang.Object, javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.serverError()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.status(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Response$ResponseBuilder</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cacheControl(javax.ws.rs.core.CacheControl)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.clone()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.contentLocation(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.cookie(javax.ws.rs.core.NewCookie[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.entityWithType(java.lang.Object, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.expires(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.header(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.language(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.lastModified(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.location(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.status(int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.tag(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.type(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createResponseBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfModifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfNoneMatch(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluateIfUnmodifiedSince(long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(javax.ws.rs.core.EntityTag)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.reset()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.Response$ResponseBuilder()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.ResponseBuilderImpl(com.sun.jersey.impl.ResponseBuilderImpl)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.build()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.filter.NormalizeFilter.filter(com.sun.jersey.spi.container.ContainerRequest)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.setResponse(javax.ws.rs.core.Response, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.header(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.ResourceHttpOptionsMethod$OptionsRequestDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.HttpMethodRule.accept(java.lang.CharSequence, java.lang.Object, com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.status(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.tag(javax.ws.rs.core.EntityTag)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.type(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.onException(java.lang.Throwable, javax.ws.rs.core.Response, com.sun.jersey.api.core.HttpResponseContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.HttpHelper.clientError(java.lang.String, java.lang.Exception)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.type(javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.EntityParamDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$ObjectOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.FormDispatchProvider$TypeOutInvoker._dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.SecurityContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.UriBuilder</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getAbsolutePathBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationContext.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePathBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.fragment(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.fromUri(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePathBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getBaseUriBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getRequestUriBuilder()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.path(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.httpserver.HttpHandlerContainer.handle(com.sun.net.httpserver.HttpExchange)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.uri.rules.RightHandPathRule.redirect(com.sun.jersey.spi.uri.rules.UriRuleContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.replacePath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.replaceQuery(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseImpl.getMetadataOptimal(com.sun.jersey.api.core.HttpRequestContext, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.servlet.ServletContainer.service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.UriInfo</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.WebApplicationImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.ui</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider$UriInfoInjectable.getValue(com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.parameter.HttpContextInjectableProvider.HttpContextInjectableProvider()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.ui</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory$WadlOptionsMethodDispatcher.dispatch(java.lang.Object, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.access$000(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriInfo.getAbsolutePath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriInfo.getBaseUri()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlMethodFactory.generateApplication(javax.ws.rs.core.UriInfo, com.sun.jersey.api.model.AbstractResource, java.lang.String, com.sun.jersey.impl.wadl.WadlGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriInfo.getMatchedResources()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.servlet.JSPTemplateProcessor.writeTo(java.lang.String, java.lang.Object, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter.writeTo(com.sun.jersey.api.view.Viewable, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Variant</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$DimensionChecker.getDimension(javax.ws.rs.core.Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariant(com.sun.jersey.api.core.HttpRequestContext, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector.selectVariants(com.sun.jersey.impl.VariantSelector$ListEntry, java.util.List, com.sun.jersey.impl.VariantSelector$DimensionChecker)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.selectVariant(java.util.List)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Variant.getEncoding()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$4.getDimension(javax.ws.rs.core.Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Variant.getLanguage()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$2.getDimension(javax.ws.rs.core.Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Variant.getMediaType()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variant(javax.ws.rs.core.Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.ResponseBuilderImpl.variants(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$1.getDimension(javax.ws.rs.core.Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.VariantSelector$3.getDimension(javax.ws.rs.core.Variant)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Variant$VariantListBuilder</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createVariantListBuilder()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.ws.rs.ext</name>
        <class confirmed="no">
            <name>javax.ws.rs.ext.ContextResolver</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.ExceptionMapper</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.ExceptionMapperFactory$ExceptionMapperType(javax.ws.rs.ext.ExceptionMapper, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory$ExceptionMapperType.em</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.ExceptionMapperFactory(com.sun.jersey.impl.application.ComponentProviderCache)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.find(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.ExceptionMapperFactory.getType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getExceptionMapper(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.ExceptionMapper.toResponse(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.mapException(java.lang.Throwable, com.sun.jersey.api.core.HttpResponseContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.MessageBodyReader</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.MessageBodyReader.readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsForm(com.sun.jersey.api.representation.Form, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.model.method.dispatch.MultipartFormDispatchProvider$MultipartFormParamInjectable.getAsMultipartFormData(java.util.Map, com.sun.jersey.api.core.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerRequest.getEntity(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.MessageBodyWriter</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.template.ViewableMessageBodyWriter</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.MessageBodyWriter.getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.MessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.write()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.Provider</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.ClasspathResourceConfig.init(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.core.PackagesResourceConfig.init(java.lang.String[])</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.Providers</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl$6</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.application.WebApplicationImpl.initiate(com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.spi.service.ComponentProvider)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.RuntimeDelegate</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.rd</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.RuntimeDelegate.RuntimeDelegate()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.RuntimeDelegate.createHeaderDelegate(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.RuntimeDelegate.getInstance()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl._createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.provider.RuntimeDelegateImpl.createHeaderDelegate(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate.toString(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.spi.container.ContainerResponse.getHeaderValue(java.lang.Object)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.bind</name>
        <class confirmed="no">
            <name>javax.xml.bind.JAXBContext</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBContext.createMarshaller()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBContext.createUnmarshaller()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBContext.newInstance(java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBContext.newInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBContext.newInstance(java.lang.String, java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.JAXBElement</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.val(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.representationOrFault</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Class, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBElement.JAXBElement(javax.xml.namespace.QName, java.lang.Class, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.Elements(javax.xml.namespace.QName, java.lang.Class, com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.JAXBException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.Marshaller</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.Marshaller.marshal(java.lang.Object, java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.Marshaller.setProperty(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlResource.getWadl(javax.ws.rs.core.UriInfo)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.Unmarshaller</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.Unmarshaller.unmarshal(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorApplicationDoc.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.WadlGeneratorGrammarsSupport.loadFile(java.io.File, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.loadFile(java.io.File, java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.bind.annotation</name>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlAccessType</name>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlAccessType.FIELD</name>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</inbound>
                <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Doc</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Include</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Option</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ResourceType</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</inbound>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlAccessorType</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Doc</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Include</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Option</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ResourceType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlAnyAttribute</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.otherAttributes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.otherAttributes</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlAnyElement</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.content</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Grammars.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Request.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.any</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.any</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlAttribute</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.element</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.mediaType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.status</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.style</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.type</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.lang</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.title</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rel</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.resourceType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rev</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Option.value</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param._default</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.fixed</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.path</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.repeating</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.required</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.style</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.type</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.element</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.mediaType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.profile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.status</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.path</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.queryType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.type</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.base</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElement</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs.docs</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.methodOrResource</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.method</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.resource</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElementDecl</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElementRef</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.representationOrFault</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElementRefs</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Application.resourceTypeOrMethodOrRepresentation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Response.representationOrFault</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElementWrapper</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType.attribute</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType.methodDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType.paramDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType.annotationDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType.classDoc</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.representation</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType.wadlParam</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElements</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.methodOrResource</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlEnum</name>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlEnumValue</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.HEADER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.MATRIX</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.PLAIN</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.QUERY</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ParamStyle.TEMPLATE</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlID</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlMixed</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.content</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlNsForm</name>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlNsForm.QUALIFIED</name>
                <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.package-info</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlRegistry</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ObjectFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ObjectFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.ObjectFactory</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlRootElement</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Doc</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Include</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Option</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ResourceType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlSchema</name>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.package-info</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlSchemaType</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.lang</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Include.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rel</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.resourceType</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rev</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.href</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resources.base</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlType</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.ApplicationDocs</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.AnnotationDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ClassDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.MethodDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.NamedValueType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ParamDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RequestDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResourceDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.ResponseDocType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType</inbound>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Application</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Doc</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Grammars</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.HTTPMethods</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Include</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Link</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Method</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Option</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Param</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ParamStyle</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.RepresentationType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Request</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resource</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.ResourceType</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Resources</inbound>
            <inbound type="class" confirmed="yes">com.sun.research.ws.wadl.Response</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlValue</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlValueType.value</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.bind.annotation.adapters</name>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.adapters.CollapsedStringAdapter</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.lang</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rel</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rev</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter</name>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Doc.lang</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rel</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Link.rev</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Method.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.name</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Resource.id</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ResourceType.id</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.namespace</name>
        <class confirmed="no">
            <name>javax.xml.namespace.QName</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createRequestRepresentation(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.element</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.getElement()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.RepresentationDocType.setElement(javax.xml.namespace.QName)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.getType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.setType(javax.xml.namespace.QName)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.model.WadlParamType.type</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.Elements(javax.xml.namespace.QName, java.lang.Class, com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.XhtmlElementType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory._Fault_QNAME</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory._Representation_QNAME</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createFault(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.createRepresentation(com.sun.research.ws.wadl.RepresentationType)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getType()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.setType(javax.xml.namespace.QName)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.type</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.element</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.getElement()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.RepresentationType.setElement(javax.xml.namespace.QName)</inbound>
            <feature confirmed="no">
                <name>javax.xml.namespace.QName.QName(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport.createResponse(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.generators.resourcedoc.xhtml.Elements.createElement(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.ObjectFactory.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.namespace.QName.QName(java.lang.String, java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlBuilder.addVersion(com.sun.research.ws.wadl.Application)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.wadl.WadlGeneratorImpl.createParam(com.sun.jersey.api.model.AbstractResource, com.sun.jersey.api.model.AbstractMethod, com.sun.jersey.api.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.research.ws.wadl.Param.getType()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.tools.ant</name>
        <class confirmed="no">
            <name>org.apache.tools.ant.BuildException</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <feature confirmed="no">
                <name>org.apache.tools.ant.BuildException.BuildException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.tools.ant.BuildException.BuildException(java.lang.String, org.apache.tools.ant.Location)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.tools.ant.BuildException.BuildException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.tools.ant.Location</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.tools.ant.Project</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.tools.ant.Task</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask</inbound>
            <feature confirmed="no">
                <name>org.apache.tools.ant.Task.Task()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.WadlGeneratorTask()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.tools.ant.types</name>
        <class confirmed="no">
            <name>org.apache.tools.ant.types.Path</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.classpath</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.getClasspath()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspath(org.apache.tools.ant.types.Path)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspathRef(org.apache.tools.ant.types.Reference)</inbound>
            <feature confirmed="no">
                <name>org.apache.tools.ant.types.Path.Path(org.apache.tools.ant.Project)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.tools.ant.types.Path.append(org.apache.tools.ant.types.Path)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspath(org.apache.tools.ant.types.Path)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.tools.ant.types.Path.createPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createClasspath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.tools.ant.types.Path.list()</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.createApplication(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.execute()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.tools.ant.types.Path.setRefid(org.apache.tools.ant.types.Reference)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspathRef(org.apache.tools.ant.types.Reference)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.tools.ant.types.Reference</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.api.wadl.WadlGeneratorTask.setClasspathRef(org.apache.tools.ant.types.Reference)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.objectweb.asm</name>
        <class confirmed="no">
            <name>org.objectweb.asm.AnnotationVisitor</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.Attribute</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitAttribute(org.objectweb.asm.Attribute)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.ClassReader</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            <feature confirmed="no">
                <name>org.objectweb.asm.ClassReader.ClassReader(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.getClassReader(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.objectweb.asm.ClassReader.accept(org.objectweb.asm.ClassVisitor, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.ClassVisitor</name>
            <inbound type="class" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner.analyzeClassFile(java.util.jar.JarFile, java.util.jar.JarEntry)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.FieldVisitor</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.MethodVisitor</name>
            <inbound type="feature" confirmed="yes">com.sun.jersey.impl.container.config.AnnotatedClassScanner$AnnotatedClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
        </class>
    </package>
</dependencies>
