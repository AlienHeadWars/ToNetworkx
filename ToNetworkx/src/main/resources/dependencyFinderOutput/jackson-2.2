<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name></name>
        <class confirmed="no">
            <name>B[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexBytes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            <feature confirmed="no">
                <name>B[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexBytes()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>C[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexChars()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            <feature confirmed="no">
                <name>C[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexChars()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.Base64Variant</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MIME</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.PEM</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_INVALID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._asciiToBase64</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiB</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._maxLineLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._usesPadding</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._usesPadding</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._asciiToBase64</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiB</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._maxLineLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._usesPadding</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.fill(int[], int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.INT_SPACE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.PADDING_CHAR_NONE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._asciiToBase64</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte(byte)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._base64ToAsciiB</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._maxLineLength</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.readResolve()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._paddingChar</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isDefined(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isISOControl(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant._usesPadding</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPadding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPadding()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte(byte)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._asciiToBase64</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._asciiToBase64</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._asciiToBase64</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encode(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiB</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, byte[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiB</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, char[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, byte[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiB</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._usesPadding</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, char[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._usesPadding</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._base64ToAsciiC</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._usesPadding</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.equals(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._maxLineLength</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.getName()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.getPaddingByte()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.hashCode()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.readResolve()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.usesPadding()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._usesPadding</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._paddingChar</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.Base64Variants</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.Base64Variants()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.MIME</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.PEM</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.STD_BASE64_ALPHABET</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MIME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.PEM</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.setCharAt(int, char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MIME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.PEM</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.readResolve()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.FormatSchema</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getSchema()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getSchema()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getSchema()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.FormatSchema.getSchemaType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonEncoding</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._encoding</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getEncoding()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.setEncoding(com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(java.lang.String, int, java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding._javaName</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.UTF16_BE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.UTF16_LE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.UTF32_BE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.UTF32_LE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.UTF8</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding._bigEndian</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(java.lang.String, int, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.isBigEndian()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding._javaName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(java.lang.String, int, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.getJavaName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.getJavaName()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding._javaName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.isBigEndian()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding._bigEndian</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonEncoding.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(java.lang.String, int, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF16_BE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF16_LE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF32_BE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF32_LE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonEncoding.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonEncoding[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonEncoding[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonEncoding[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonEncoding[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonFactory</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Versioned</outbound>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.getFactory()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._detectors</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._match</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatch()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchedFormatName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.hasMatch()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.DEFAULT_FACTORY_FEATURE_FLAGS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.DEFAULT_GENERATOR_FEATURE_FLAGS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.DEFAULT_PARSER_FEATURE_FLAGS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.FORMAT_NAME_JSON</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.JsonFactory()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_FACTORY_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_GENERATOR_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_PARSER_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._factoryFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._generatorFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._outputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootByteSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootCharSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.copy()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.readResolve()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_FACTORY_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_GENERATOR_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_PARSER_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._factoryFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._generatorFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootByteSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootCharSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._characterEscapes</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getCharacterEscapes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.version()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.copy()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._generatorFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createJsonGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createJsonParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.CANONICALIZE_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.INTERN_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootByteSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootCharSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.CANONICALIZE_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.INTERN_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootByteSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootCharSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.CANONICALIZE_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.INTERN_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootCharSymbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._generatorFeatures</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8JsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createUTF8JsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.getJavaName()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._factoryFeatures</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._generatorFeatures</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._recyclerRef</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.SoftReference</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.SoftReference.SoftReference(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.SoftReference.get()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._inputDecorator</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getInputDecorator()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._objectCodec</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.readResolve()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</name>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getHost()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getProtocol()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.openStream()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._outputDecorator</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getOutputDecorator()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._parserFeatures</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._recyclerRef</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._rootByteSymbols</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._rootCharSymbols</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.FormatSchema.getSchemaType()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getFormatName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonFactory$Feature, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonFactory$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonFactory$Feature)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.copy()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._outputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.setEncoding(com.fasterxml.jackson.core.JsonEncoding)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Writer)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._outputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.setEncoding(com.fasterxml.jackson.core.JsonEncoding)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Writer)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._outputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Writer)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Reader)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Reader)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.io.StringReader.StringReader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonFactory$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._factoryFeatures</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonFactory$Feature, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._generatorFeatures</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonFactory$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._factoryFeatures</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonFactory$Feature, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._generatorFeatures</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.getCharacterEscapes()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._characterEscapes</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.getCodec()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.getFormatName()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchedFormatName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.getInputDecorator()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.getOutputDecorator()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._outputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._factoryFeatures</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._generatorFeatures</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._parserFeatures</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.readResolve()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.requiresCustomCodec()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._characterEscapes</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._outputDecorator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.collectDefaults()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_FACTORY_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_GENERATOR_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_PARSER_FEATURE_FLAGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._recyclerRef</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.collectDefaults()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.collectDefaults()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.ThreadLocal()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.VERSION</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonFactory$Feature</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonFactory$Feature, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.CANONICALIZE_FIELD_NAMES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.INTERN_FIELD_NAMES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.JsonFactory$Feature(java.lang.String, int, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature._defaultState</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature._defaultState</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.JsonFactory$Feature(java.lang.String, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.enabledByDefault()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.collectDefaults()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.enabledByDefault()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.values()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.enabledByDefault()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature._defaultState</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.collectDefaults()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.enabledIn(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.getMask()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.getMask()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonFactory$Feature.ordinal()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.collectDefaults()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.enabledIn(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.getMask()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.CANONICALIZE_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.INTERN_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.JsonFactory$Feature(java.lang.String, int, boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonFactory$Feature[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonFactory$Feature[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.collectDefaults()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonFactory$Feature[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonFactory$Feature[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.values()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonFactory[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</inbound>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonGenerationException</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeStringField(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segments(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportError(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String, java.lang.Throwable)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.Throwable)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerationException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonGenerator</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Versioned</outbound>
            <outbound type="class" confirmed="no">java.io.Closeable</outbound>
            <outbound type="class" confirmed="no">java.io.Flushable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8JsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.JsonGeneratorDelegate(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCharacterEscapes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getHighestEscapedChar()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputTarget()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getSchema()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isClosed()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setHighestNonEscapedChar(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.useDefaultPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.JsonGenerator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.JsonGeneratorDelegate(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator._cfgPrettyPrinter</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.flush()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.flush()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCharacterEscapes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.getCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCodec()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getHighestEscapedChar()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.getOutputContext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputTarget()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getPrettyPrinter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.getSchema()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getSchema()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.isClosed()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isClosed()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setHighestNonEscapedChar(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.FormatSchema.getSchemaType()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.useDefaultPrettyPrinter()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.useDefaultPrettyPrinter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.version()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String, byte[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBoolean(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeEndArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeEndObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNull()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNull()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNull()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.UnsupportedOperationException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigDecimal)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigInteger)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, float)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, java.math.BigDecimal)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartObject()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRawValue(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeStartArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeStartObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeString(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeUTF8String(byte[], int, int)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonGenerator$Feature</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_TARGET</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.ESCAPE_NON_ASCII</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.JsonGenerator$Feature(java.lang.String, int, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature._defaultState</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature._mask</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonGenerator$Feature.ordinal()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature._defaultState</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.JsonGenerator$Feature(java.lang.String, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.enabledByDefault()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature._mask</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.JsonGenerator$Feature(java.lang.String, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.collectDefaults()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.enabledByDefault()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.values()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.enabledByDefault()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature._defaultState</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.collectDefaults()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature._mask</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.collectDefaults()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.JsonGenerator$Feature(java.lang.String, int, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_TARGET</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.ESCAPE_NON_ASCII</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.JsonGenerator$Feature(java.lang.String, int, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonGenerator$Feature[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonGenerator$Feature[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.collectDefaults()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonGenerator$Feature[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonGenerator$Feature[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonLocation</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTokenLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException._location</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._columnNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._lineNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._sourceRef</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._totalBytes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._totalChars</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.NA</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation._columnNr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.getColumnNr()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation._lineNr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.getLineNr()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation._sourceRef</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.getSourceRef()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation._totalBytes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.getByteOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.hashCode()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation._totalChars</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.getCharOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.hashCode()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._columnNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._lineNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._sourceRef</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._totalChars</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.getByteOffset()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.getByteOffset()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._totalBytes</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.getCharOffset()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._totalChars</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.getColumnNr()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._columnNr</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.getLineNr()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._lineNr</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.getSourceRef()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._sourceRef</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.hashCode()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._columnNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._lineNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._sourceRef</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._totalBytes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._totalChars</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.NA</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonLocation.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._columnNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._lineNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._sourceRef</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonParseException</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDoubleValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getFloatValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getIntValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getLongValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getFloatValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getIntValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getLongValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportBase64EOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParseException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonParser</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Versioned</outbound>
            <outbound type="class" confirmed="no">java.io.Closeable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.traverse()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.traverse(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.JsonParserDelegate(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._parsers</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.JsonParser()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.JsonParserDelegate(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.JsonParser(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._features</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.MAX_BYTE_I</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.MAX_SHORT_I</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.MIN_BYTE_I</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.MIN_SHORT_I</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentLocation()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser._features</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.JsonParser(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.clearCurrentToken()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._features</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._features</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getBinaryValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getBooleanValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentLocation()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getByteValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getCurrentLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getCurrentName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getCurrentToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getDecimalValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getDoubleValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getFloatValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getInputSource()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getIntValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getLastClearedToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getLongValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getNumberType()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getNumberValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getParsingContext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getSchema()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getShortValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getText()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getText()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getTextCharacters()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getTextLength()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getTextOffset()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getTokenLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsDouble()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsInt()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsLong()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.hasCurrentToken()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.hasTextCharacters()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.isClosed()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._features</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.FALSE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TRUE</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.nextIntValue(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.nextLongValue(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getLongValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.nextTextValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.nextToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.nextValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.overrideCurrentName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.readValueAsTree()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.FormatSchema.getSchemaType()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.skipChildren()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.version()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonParser$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$1.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonParser$Feature</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_COMMENTS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_SINGLE_QUOTES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_UNQUOTED_CONTROL_CHARS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.AUTO_CLOSE_SOURCE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.JsonParser$Feature(java.lang.String, int, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature._defaultState</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature._defaultState</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.JsonParser$Feature(java.lang.String, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.enabledByDefault()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.collectDefaults()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.enabledByDefault()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.values()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.enabledByDefault()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature._defaultState</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.collectDefaults()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.getMask()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser$Feature.ordinal()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.collectDefaults()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.getMask()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_COMMENTS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_SINGLE_QUOTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_UNQUOTED_CONTROL_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.AUTO_CLOSE_SOURCE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.JsonParser$Feature(java.lang.String, int, boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$Feature.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser$Feature[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser$Feature[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.collectDefaults()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonParser$Feature[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonParser$Feature[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonParser$NumberType</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.numberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.BIG_DECIMAL</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.BIG_INTEGER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.DOUBLE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.FLOAT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.INT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.JsonParser$NumberType(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.LONG</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.BIG_DECIMAL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.BIG_INTEGER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.DOUBLE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.JsonParser$NumberType(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.LONG</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser$NumberType[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser$NumberType[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonParser$NumberType[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonParser$NumberType[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.values()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonParser[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonProcessingException</name>
            <outbound type="class" confirmed="no">java.io.IOException</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.treeToValue(com.fasterxml.jackson.core.TreeNode, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException._location</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonProcessingException.initCause(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, java.lang.Throwable)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException._location</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.getLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException._location</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.getMessage()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getLocation()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()</name>
                <outbound type="feature" confirmed="no">java.io.IOException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonProcessingException.initCause(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonProcessingException.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonStreamContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getOutputContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getParsingContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getParsingContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getParent()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getParent()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.TYPE_ARRAY</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.TYPE_OBJECT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.TYPE_ROOT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext._index</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.getEntryCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext._type</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.inArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.inObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.inRoot()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext._index</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.getCurrentName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.getEntryCount()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext._index</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.getParent()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext._type</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.inArray()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext._type</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.inObject()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext._type</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonStreamContext.inRoot()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext._type</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.JsonToken</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getLastClearedToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.asToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._nextToken</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reset(boolean, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.END_ARRAY</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.END_OBJECT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.FIELD_NAME</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken._serialized</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken._serializedBytes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken._serializedChars</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.START_ARRAY</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.START_OBJECT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.isScalarValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.VALUE_NULL</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.isNumeric()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.isNumeric()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.VALUE_STRING</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken._serialized</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken._serializedBytes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken._serializedChars</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asCharArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.asByteArray()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken._serializedBytes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.asCharArray()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken._serializedChars</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.asString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken._serialized</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.isNumeric()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.isScalarValue()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonToken.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.isScalarValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.JsonToken.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonToken[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonToken[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonToken[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.ObjectCodec</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._objectCodec</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.copy()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.readResolve()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.traverse(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._objectCodec</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._objectCodec</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.ObjectCodec()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.createArrayNode()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.createObjectNode()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.getFactory()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.getFactory()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.treeToValue(com.fasterxml.jackson.core.TreeNode, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.PrettyPrinter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator._cfgPrettyPrinter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.PrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.SerializableString</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootValueSeparator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._rootValueSeparator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.appendQuoted(char[], int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.appendQuotedUTF8(byte[], int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.appendUnquoted(char[], int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.appendUnquotedUTF8(byte[], int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.asQuotedChars()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.asQuotedUTF8()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.asUnquotedUTF8()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.charLength()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.getValue()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.putQuotedUTF8(java.nio.ByteBuffer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.nio.ByteBuffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.putUnquotedUTF8(java.nio.ByteBuffer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.nio.ByteBuffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.writeQuotedUTF8(java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.SerializableString.writeUnquotedUTF8(java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.TreeNode</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.createArrayNode()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.createObjectNode()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.treeToValue(com.fasterxml.jackson.core.TreeNode, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.asToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.fieldNames()</name>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.get(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.get(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.isArray()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.isContainerNode()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.isMissingNode()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.isObject()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.isValueNode()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.numberType()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.path(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.path(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.size()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.traverse()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.TreeNode.traverse(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.Version</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Comparable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Versioned.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.VERSION</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil._version</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.UNKNOWN_VERSION</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.isUknownVersion()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.unknownVersion()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._artifactId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._groupId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._majorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._minorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._patchLevel</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._snapshotInfo</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version._artifactId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.getArtifactId()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version._groupId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.getGroupId()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version._majorVersion</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.getMajorVersion()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version._minorVersion</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.getMinorVersion()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version._patchLevel</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.getPatchLevel()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version._snapshotInfo</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.isSnapshot()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._artifactId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._groupId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._majorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._minorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._patchLevel</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.compareTo(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.compareTo(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.equals(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._artifactId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._groupId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._majorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._minorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._patchLevel</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.getArtifactId()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._artifactId</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.getGroupId()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._groupId</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.getMajorVersion()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._majorVersion</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.getMinorVersion()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._minorVersion</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.getPatchLevel()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._patchLevel</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.hashCode()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._artifactId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._groupId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._majorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._minorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._patchLevel</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.isSnapshot()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._snapshotInfo</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.isUknownVersion()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.UNKNOWN_VERSION</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.UNKNOWN_VERSION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.toFullString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._artifactId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._groupId</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._majorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._minorVersion</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._patchLevel</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._snapshotInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.isSnapshot()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Version.unknownVersion()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.UNKNOWN_VERSION</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.Versioned</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.Versioned.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core.base</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.base.GeneratorBase</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.JsonGenerator()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._features</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createRootContext()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._cfgNumbersAsStrings</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._closed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.isClosed()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._features</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._objectCodec</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.getCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._reportError(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._throwInternal()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.throwInternal()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._writeContext</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</name>
                <outbound type="class" confirmed="no">B[]</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(byte[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeBoolean(boolean)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNull()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(double)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(float)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(java.math.BigDecimal)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(java.math.BigInteger)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(long)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(short)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.booleanValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.byteValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.doubleValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.floatValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.intValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.longValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.shortValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicBoolean</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicBoolean.get()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.close()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._closed</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser$NumberType.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentToken()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDecimalValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDoubleValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getFloatValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getLongValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberType()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextCharacters()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextLength()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextOffset()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.hasTextCharacters()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._throwInternal()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeBoolean(boolean)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeEndArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeEndObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNull()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(double)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(float)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(java.math.BigDecimal)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(java.math.BigInteger)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(long)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeStartArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeString(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentToken()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeEndArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeEndObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeStartArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.ESCAPE_NON_ASCII</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._features</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.setHighestNonEscapedChar(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.ESCAPE_NON_ASCII</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._features</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.setHighestNonEscapedChar(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.flush()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.getCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._objectCodec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.getPrettyPrinter()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.isClosed()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._closed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.getMask()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._features</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._objectCodec</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.setHighestNonEscapedChar(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.getPrettyPrinter()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(byte[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeBoolean(boolean)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeEndArray()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeEndObject()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNull()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(float)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(java.math.BigDecimal)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(java.math.BigInteger)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeNumber(short)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNull()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeRaw(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeRaw(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeRaw(java.lang.String, int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeRaw(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeRaw(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeStartArray()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeString(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._objectCodec</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.GeneratorBase.writeNull()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.base.GeneratorBase$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.BIG_DECIMAL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.BIG_INTEGER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.INT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser$NumberType.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.values()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.base.ParserBase</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BD_MAX_INT</name>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BD_MAX_LONG</name>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BD_MIN_INT</name>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BD_MIN_LONG</name>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BI_MAX_INT</name>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BI_MAX_LONG</name>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BI_MIN_INT</name>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.BI_MIN_LONG</name>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.CHAR_NULL</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_0</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_1</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_2</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_3</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_4</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_5</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_6</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_7</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_8</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_9</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_DECIMAL_POINT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_E</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_MINUS</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_PLUS</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.INT_e</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.MAX_INT_D</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.MAX_INT_L</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.MAX_LONG_D</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.MIN_INT_D</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.MIN_INT_L</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.MIN_LONG_D</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.NR_BIGDECIMAL</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.NR_BIGINT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.NR_DOUBLE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.NR_INT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.NR_LONG</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.NR_UNKNOWN</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._byteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._currInputProcessed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._currInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._currInputRowStart</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._features</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._inputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._nameCopied</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._nameCopyBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parsingContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._tokenInputCol</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._tokenInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._tokenInputTotal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.constructTextBuffer()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createRootContext()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._binaryValue</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._byteArrayBuilder</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._closeInput()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._closed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.isClosed()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._currInputProcessed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._currInputRow</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._currInputRowStart</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._currToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._expLength</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._features</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._finishString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._fractLength</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._byteArrayBuilder</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._getCharDesc(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._handleEOF()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.inRoot()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._inputEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._inputPtr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._intLength</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._ioContext</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._nameCopied</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._nameCopyBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._nextToken</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._numTypesValid</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getIntValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getLongValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</name>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._numberBigInt</name>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._numberDouble</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._numberInt</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getIntValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._numberLong</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getLongValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._numberNegative</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._intLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberNegative</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseInt(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseLong(char[], int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextOffset()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getIntValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getLongValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._wrapError(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDouble()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberNegative</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._wrapError(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[], int, int, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.BigInteger(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._parsingContext</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getParsingContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._nameCopyBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._textBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._reportInvalidEOF()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._reportInvalidEOF(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._textBuffer</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._throwInternal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._tokenInputCol</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._tokenInputRow</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase._tokenInputTotal</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase._wrapError(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.close()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._closeInput()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._closed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._throwInternal()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getText()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.BigDecimal(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.BigDecimal(java.math.BigInteger)</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._throwInternal()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.toBigInteger()</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.valueOf(double)</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.valueOf(long)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._throwInternal()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.doubleValue()</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.doubleValue()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MAX_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MIN_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MAX_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MIN_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._throwInternal()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.compareTo(java.math.BigDecimal)</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.intValue()</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.compareTo(java.math.BigInteger)</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.intValue()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getIntValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MAX_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MIN_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MAX_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MIN_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._throwInternal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.compareTo(java.math.BigDecimal)</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.longValue()</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.compareTo(java.math.BigInteger)</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.longValue()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getLongValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._currInputProcessed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._currInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._currInputRowStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._ioContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parsingContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getParent()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getFloatValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getEmbeddedObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getFloatValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getIntValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getLongValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getNumberType()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.BIG_DECIMAL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.BIG_INTEGER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.DOUBLE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.LONG</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberInt</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberLong</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._throwInternal()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.valueOf(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getParsingContext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parsingContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase.getText()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._tokenInputTotal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._tokenInputCol</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._tokenInputRow</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserBase.getValueAsString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._nameCopied</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.isClosed()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._closed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.loadMore()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportInvalidEOF()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parsingContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getParent()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isDefined(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isISOControl(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getText()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getText()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._getCharDesc(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.reset(boolean, int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberDouble</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._textBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean, int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._expLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._fractLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._intLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberNegative</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reset(boolean, int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._expLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._fractLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._intLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberNegative</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reset(boolean, int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MAX_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MAX_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MIN_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MIN_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MAX_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MAX_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MIN_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MIN_LONG</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.BigDecimal(java.math.BigInteger)</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.valueOf(long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserBase.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.VERSION</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.base.ParserMinimalBase</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_APOSTROPHE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_ASTERISK</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_BACKSLASH</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COLON</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COMMA</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_CR</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LBRACKET</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LCURLY</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LF</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_QUOTE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RBRACKET</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RCURLY</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SLASH</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SPACE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_TAB</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_b</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_f</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_n</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_r</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_t</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.INT_u</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.JsonParser()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.JsonParser(int)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportBase64EOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentLocation()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</name>
                <outbound type="feature" confirmed="no">java.lang.Character.isISOControl(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_SINGLE_QUOTES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._reportBase64EOF()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isDefined(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isISOControl(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.throwInternal()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_UNQUOTED_CONTROL_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String, java.lang.Throwable)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentLocation()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getDoubleValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getEmbeddedObject()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getIntValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getLongValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getEmbeddedObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.booleanValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getDoubleValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getEmbeddedObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(java.lang.String, double)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.doubleValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getEmbeddedObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getEmbeddedObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserMinimalBase.getLongValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.longValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.isScalarValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed()</name>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.base.ParserMinimalBase$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core.format</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.format.DataFormatDetector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.DEFAULT_MAX_INPUT_LOOKAHEAD</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.WEAK_MATCH</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._detectors</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._maxInputLookahead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._minimalMatch</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._optimalMatch</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonFactory[]</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.toArray(java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector._detectors</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._detectors</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._minimalMatch</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._optimalMatch</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.reset()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.format.MatchStrength.ordinal()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector._maxInputLookahead</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector._minimalMatch</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector._optimalMatch</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._maxInputLookahead</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.toString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getFormatName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._detectors</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._detectors</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._maxInputLookahead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._minimalMatch</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._optimalMatch</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._detectors</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._maxInputLookahead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._minimalMatch</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._optimalMatch</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._detectors</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._maxInputLookahead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._minimalMatch</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._optimalMatch</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.format.DataFormatMatcher</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedData</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._match</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._matchStrength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._originalStream</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedData</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedLength</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedStart</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher._match</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatch()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchedFormatName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.hasMatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher._matchStrength</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchStrength()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher._originalStream</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedData</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._match</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._originalStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedData</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._originalStream</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher.getMatch()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._match</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchStrength()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._matchStrength</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchedFormatName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getFormatName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._match</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.DataFormatMatcher.hasMatch()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._match</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.format.InputAccessor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor.hasMoreBytes()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor.nextByte()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor.reset()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.format.InputAccessor$Std</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._in</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._ptr</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._ptr</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std._buffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedStart</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std._in</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std._ptr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._in</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._ptr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._ptr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</outbound>
                <outbound type="feature" confirmed="no">java.io.EOFException.EOFException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.InputAccessor$Std.reset()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._bufferedStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._ptr</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.format.MatchStrength</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._minimalMatch</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._optimalMatch</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._matchStrength</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchStrength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchStrength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.MatchStrength(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.WEAK_MATCH</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.format.MatchStrength.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.MatchStrength(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.WEAK_MATCH</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.format.MatchStrength.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.format.MatchStrength[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.format.MatchStrength[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.format.MatchStrength[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.format.MatchStrength[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.values()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core.io</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.BaseReader</name>
            <outbound type="class" confirmed="no">java.io.Reader</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._length</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._ptr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._tmpBuf</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.Reader.Reader()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.LAST_VALID_UNICODE_CHAR</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.NULL_BYTE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.NULL_CHAR</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader._buffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.freeBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader._context</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.freeBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader._in</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader._length</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader._ptr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader._tmpBuf</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.read()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.close()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.freeBuffers()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.freeBuffers()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._context</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.read()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._tmpBuf</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.BaseReader.read(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.BaseReader.read(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.read()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ArrayIndexOutOfBoundsException.ArrayIndexOutOfBoundsException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.BaseReader.reportStrangeStream()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.CharTypes</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.CharTypes()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.HEX_BYTES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexBytes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.HEX_CHARS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexChars()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sOutputEscapes128</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.charToHex(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sHexValues</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.copyHexBytes()</name>
                <outbound type="class" confirmed="no">B[]</outbound>
                <outbound type="feature" confirmed="no">B[].clone()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.HEX_BYTES</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.copyHexChars()</name>
                <outbound type="class" confirmed="no">C[]</outbound>
                <outbound type="feature" confirmed="no">C[].clone()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.HEX_CHARS</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sOutputEscapes128</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.getInputCodeComment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesComment</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodes</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1JsNames()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesJsNames</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.getInputCodeUtf8()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesUtf8</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.getInputCodeUtf8JsNames()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesUtf8JsNames</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.sHexValues</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.charToHex(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.sInputCodes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.sInputCodesComment</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.sInputCodesJsNames</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1JsNames()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.sInputCodesUtf8</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeUtf8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.sInputCodesUtf8JsNames</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeUtf8JsNames()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.sOutputEscapes128</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharTypes.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.HEX_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sHexValues</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesComment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesJsNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesUtf8</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sInputCodesUtf8JsNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.sOutputEscapes128</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierPart(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.fill(int[], int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.fill(int[], int, int, int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.CharacterEscapes</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._characterEscapes</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getCharacterEscapes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._characterEscapes</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCharacterEscapes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_CUSTOM</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_NONE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_STANDARD</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.IOContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8JsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._ioContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._context</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.freeBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._context</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._context</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._context</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._ioContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._base64Buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._concatCBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._managedResource</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._nameCopyBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._readIOBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._sourceRef</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._tokenCBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._writeEncodingBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._base64Buffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._bufferRecycler</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.constructTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._concatCBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._encoding</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getEncoding()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.setEncoding(com.fasterxml.jackson.core.JsonEncoding)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._managedResource</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.isResourceManaged()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._nameCopyBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._readIOBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._sourceRef</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._tokenCBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext._writeEncodingBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._base64Buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BASE64_CODEC_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._concatCBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.CONCAT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._nameCopyBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.NAME_COPY_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._readIOBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.READ_IO_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._tokenCBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TOKEN_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._writeEncodingBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_ENCODING_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.constructTextBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.getEncoding()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._encoding</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.getSourceReference()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._sourceRef</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.isResourceManaged()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._managedResource</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._base64Buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BASE64_CODEC_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._concatCBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.CONCAT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._nameCopyBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.NAME_COPY_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._readIOBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.READ_IO_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.freeBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._tokenCBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TOKEN_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._writeEncodingBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_ENCODING_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.IOContext.setEncoding(com.fasterxml.jackson.core.JsonEncoding)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._encoding</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.InputDecorator</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._inputDecorator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getInputDecorator()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.InputDecorator.InputDecorator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Reader)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.InputDecorator.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.JsonStringEncoder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedChars()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.HEX_BYTES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendByteEscape(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.HEX_CHARS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendNumericEscape(int, char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.INT_0</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.INT_BACKSLASH</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.INT_U</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._quoteBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.SURR1_FIRST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.SURR1_LAST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.SURR2_FIRST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.SURR2_LAST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._appendByteEscape(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.HEX_BYTES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegmentLength()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.setCurrentSegmentLength(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._appendNamedEscape(int, char[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._appendNumericEscape(int, char[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.HEX_CHARS</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._byteBuilder</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._illegalSurrogate(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._quoteBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._textBuffer</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder._threadEncoder</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._byteBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._illegalSurrogate(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.completeAndCoalesce(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.resetAndGetFirstSegment()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._threadEncoder</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.SoftReference</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.SoftReference.SoftReference(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.SoftReference.get()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedChars()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendNamedEscape(int, char[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendNumericEscape(int, char[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._quoteBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._textBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsArray()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedChars()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendByteEscape(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._byteBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._illegalSurrogate(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.completeAndCoalesce(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.resetAndGetFirstSegment()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexBytes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexChars()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.HEX_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._threadEncoder</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.ThreadLocal()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.MergedStream</name>
            <outbound type="class" confirmed="no">java.io.InputStream</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._end</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._ptr</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.InputStream()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream._buffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.available()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.mark(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.markSupported()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream._context</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream._end</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.available()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream._in</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.available()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.mark(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.markSupported()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream._ptr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.available()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.available()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._end</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._ptr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.available()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.close()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._context</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.mark(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.mark(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.markSupported()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.markSupported()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.read()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._end</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._ptr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.read(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._end</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._ptr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.reset()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.reset()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.MergedStream.skip(long)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._end</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._ptr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.freeMergedBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.skip(long)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.NumberInput</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.L_BILLION</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.MAX_LONG_STR</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.MIN_LONG_STR_NO_SIGN</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.NASTY_SMALL_DOUBLE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.NumberInput()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[], int, int, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MAX_LONG_STR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MIN_LONG_STR_NO_SIGN</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.inLongRange(java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MAX_LONG_STR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MIN_LONG_STR_NO_SIGN</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(java.lang.String, double)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Double.parseDouble(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(java.lang.String, double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDouble()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseInt(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseLong(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseInt(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseLong(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseLong(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseInt(char[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.parseLong(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseInt(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberInput.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MAX_LONG_STR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MIN_LONG_STR_NO_SIGN</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(long)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.NumberOutput</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.BILLION</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.FULL_TRIPLETS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.FULL_TRIPLETS_B</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.LEADING_TRIPLETS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.MAX_INT_AS_LONG</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.MILLION</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.MIN_INT_AS_LONG</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.NULL_CHAR</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.NumberOutput()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.SMALLEST_LONG</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.TEN_BILLION_L</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.calcLongStrLength(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.THOUSAND_L</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.calcLongStrLength(long)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.TEN_BILLION_L</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, byte[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.FULL_TRIPLETS_B</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, char[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.FULL_TRIPLETS</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.BILLION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MILLION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.BILLION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MILLION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, byte[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.LEADING_TRIPLETS</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, char[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.LEADING_TRIPLETS</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MAX_INT_AS_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MIN_INT_AS_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.SMALLEST_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.THOUSAND_L</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.calcLongStrLength(long)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, byte[], int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MAX_INT_AS_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MIN_INT_AS_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.SMALLEST_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.THOUSAND_L</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.calcLongStrLength(long)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputFullTriplet(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLeadingTriplet(int, char[], int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs2</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.BILLION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.FULL_TRIPLETS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.FULL_TRIPLETS_B</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.LEADING_TRIPLETS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MAX_INT_AS_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MILLION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.MIN_INT_AS_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.SMALLEST_LONG</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.TEN_BILLION_L</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.THOUSAND_L</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs2</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.toString(double)</name>
                <outbound type="feature" confirmed="no">java.lang.Double.toString(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.toString(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs2</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.NumberOutput.toString(long)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.toString(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.OutputDecorator</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._outputDecorator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getOutputDecorator()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Writer)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.OutputDecorator.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.SegmentedStringWriter</name>
            <outbound type="class" confirmed="no">java.io.Writer</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.SegmentedStringWriter(com.fasterxml.jackson.core.util.BufferRecycler)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.Writer()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.SegmentedStringWriter(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.getAndClear()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.append(char)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Appendable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Appendable</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Appendable</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.subSequence(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.CharSequence.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.close()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.flush()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.getAndClear()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.write(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.SerializedString</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.static {}</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readResolve()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString._jdkSerializeValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readObject(java.io.ObjectInputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readResolve()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString._quotedChars</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedChars()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString._quotedUTF8Ref</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString._unquotedUTF8Ref</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString._value</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedChars()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.charLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.getValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeObject(java.io.ObjectOutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._quotedChars</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._quotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.appendUnquoted(char[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._unquotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.asQuotedChars()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._quotedChars</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._quotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._unquotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.charLength()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.equals(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.getValue()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.hashCode()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._quotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.nio.ByteBuffer</outbound>
                <outbound type="feature" confirmed="no">java.nio.ByteBuffer.put(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.nio.ByteBuffer.remaining()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._unquotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.nio.ByteBuffer</outbound>
                <outbound type="feature" confirmed="no">java.nio.ByteBuffer.put(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.nio.ByteBuffer.remaining()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.readObject(java.io.ObjectInputStream)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._jdkSerializeValue</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.ObjectInputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.readUTF()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.readResolve()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._jdkSerializeValue</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.writeObject(java.io.ObjectOutputStream)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.ObjectOutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.writeUTF(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._quotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._unquotedUTF8Ref</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.UTF32Reader</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._byteCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._charCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._managedBuffers</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._surrogate</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._bigEndian</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._buffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._byteCount</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._charCount</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._in</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._length</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._managedBuffers</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._ptr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader._surrogate</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.close()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.freeBuffers()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._byteCount</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._in</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._length</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._managedBuffers</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._ptr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader.freeBuffers()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader.reportStrangeStream()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[])</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.read()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.read()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._bigEndian</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._buffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._charCount</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._length</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._ptr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._surrogate</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader.reportBounds(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.reportBounds(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._byteCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._charCount</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.io.UTF32Reader._ptr</outbound>
                <outbound type="feature" confirmed="no">java.io.CharConversionException.CharConversionException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.reportStrangeStream()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._byteCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader._charCount</outbound>
                <outbound type="feature" confirmed="no">java.io.CharConversionException.CharConversionException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.io.UTF8Writer</name>
            <outbound type="class" confirmed="no">java.io.Writer</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.SURR1_FIRST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.SURR1_LAST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.SURR2_FIRST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.SURR2_LAST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._out</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBufferEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._surrogate</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.Writer()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer._context</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer._out</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer._outBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer._outBufferEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer._outPtr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer._surrogate</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.append(char)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Appendable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.close()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._out</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._surrogate</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._surrogate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.flush()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._out</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outPtr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.flush()</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._illegalSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.write(char[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._out</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBufferEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._surrogate</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.write(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._out</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBufferEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._surrogate</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._out</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outBufferEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._outPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._surrogate</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core.json</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bytesPerChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputProcessed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bytesPerChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputProcessed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.UTF8_BOM_1</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.UTF8_BOM_2</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.UTF8_BOM_3</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bigEndian</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF16(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bufferRecyclable</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bytesPerChar</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF16(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._context</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._in</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputProcessed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF16(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bytesPerChar</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bytesPerChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.getJavaName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.isBigEndian()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonEncoding.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getEncoding()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.$SwitchMap$com$fasterxml$jackson$core$JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF16_BE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF16_LE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF32_BE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF32_LE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.setEncoding(com.fasterxml.jackson.core.JsonEncoding)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bytesPerChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._context</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF16(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._in</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bigEndian</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._bytesPerChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.hasMoreBytes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.nextByte()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.WEAK_MATCH</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.CharConversionException.CharConversionException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.hasMoreBytes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.nextByte()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.hasMoreBytes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.nextByte()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.hasMoreBytes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.nextByte()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.$SwitchMap$com$fasterxml$jackson$core$JsonEncoding</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF16_BE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF16_LE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF32_BE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF32_LE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.UTF8</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonEncoding.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.values()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.$SwitchMap$com$fasterxml$jackson$core$JsonEncoding</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.ESCAPE_NON_ASCII</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._rootValueSeparator</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonGeneratorImpl.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.sOutputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl._characterEscapes</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl._ioContext</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl._maximumNonEscapedChar</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl._outputEscapes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl._rootValueSeparator</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.close()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._characterEscapes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._maximumNonEscapedChar</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.sOutputEscapes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.sOutputEscapes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._maximumNonEscapedChar</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl._rootValueSeparator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.sOutputEscapes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeFieldName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeStringField(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeStringField(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeStringField(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.JsonReadContext</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parsingContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getParsingContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._child</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._columnNr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext._index</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._lineNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._parent</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext._type</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createRootContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createRootContext(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext._child</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext._columnNr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext._currentName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonReadContext._index</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.expectComma()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext._lineNr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext._parent</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getParent()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonReadContext._type</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.expectComma()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._child</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._child</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.createRootContext()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.createRootContext(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.JsonReadContext(com.fasterxml.jackson.core.json.JsonReadContext, int, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.expectComma()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext._index</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext._type</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.getCurrentIndex()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._currentName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.getParent()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._parent</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._columnNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._lineNr</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.inArray()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.inObject()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.inRoot()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._columnNr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._currentName</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext._index</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._lineNr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext._type</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._currentName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonReadContext.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._currentName</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext._type</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentIndex()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.JsonWriteContext</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._child</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._index</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._parent</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._type</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createRootContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.STATUS_EXPECT_NAME</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.STATUS_EXPECT_VALUE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.STATUS_OK_AFTER_COLON</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.STATUS_OK_AFTER_COMMA</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.STATUS_OK_AFTER_SPACE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.STATUS_OK_AS_IS</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext._child</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext._currentName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.reset(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeValue()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext._index</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.reset(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext._parent</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getParent()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext._type</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.reset(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._currentName</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._type</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getCurrentIndex()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._child</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.reset(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._child</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.reset(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.createRootContext()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.JsonWriteContext(int, com.fasterxml.jackson.core.json.JsonWriteContext)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.getCurrentIndex()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.getCurrentName()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._currentName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.getEntryCount()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.getParent()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._parent</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.getTypeDesc()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.inArray()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.inObject()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.reset(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._currentName</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._index</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._type</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._currentName</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._index</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._type</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.JsonWriteContext.writeValue()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._currentName</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._index</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext._type</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.PackageVersion</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Versioned</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.PackageVersion.PackageVersion()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.PackageVersion.VERSION</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.version()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.PackageVersion.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.VERSION</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.PackageVersion.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.VERSION</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.hashSeed()</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._binaryValue</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.AUTO_CLOSE_SOURCE</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.isResourceManaged()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.io.Reader.close()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._constructError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputProcessed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRow</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRowStart</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPadding()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getByteArrayBuilder()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.charToHex(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnrecognizedCharacterEscape(char)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegmentSize()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getByteArrayBuilder()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getCharDesc(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegmentSize()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleEOF()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOFInValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportUnexpectedNumberChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.resetAsNaN(java.lang.String, double)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_SINGLE_QUOTES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOFInValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.resetAsNaN(java.lang.String, double)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnrecognizedCharacterEscape(char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_SINGLE_QUOTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1JsNames()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierPart(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._ioContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierPart(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopied</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopyBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputRow</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._numTypesValid</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegmentSize()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextOffset()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegmentSize()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextOffset()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierPart(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPadding()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader</name>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._ioContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOFInValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierPart(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportMismatchedEndMarker(int, char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportUnexpectedChar(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwInvalidSpace(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_COMMENTS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwInvalidSpace(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwInvalidSpace(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleEOF()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwInvalidSpace(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwInvalidSpace(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._throwUnquotedSpace(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputCol</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputRow</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputTotal</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportInvalidNumber(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.close()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.close()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.release()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._binaryValue</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getByteArrayBuilder()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getIntValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getLongValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asCharArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._ioContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopyBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asCharArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextOffset()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getValueAsString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getValueAsString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputProcessed</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.io.Reader.read(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMoreGuaranteed()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.FALSE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TRUE</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getLongValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.expectComma()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getParent()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.inArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.inObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._binaryValue</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputProcessed</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportMismatchedEndMarker(int, char)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenInputTotal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.close()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportUnexpectedNumberChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reset(boolean, int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getCharDesc(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportInvalidNumber(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportUnexpectedNumberChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reset(boolean, int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportInvalidNumber(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reportUnexpectedNumberChar(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.reset(boolean, int, int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.resetAsNaN(java.lang.String, double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_0</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_BACKSLASH</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_COLON</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_COMMA</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_LBRACKET</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_LCURLY</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_QUOTE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_RBRACKET</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_RCURLY</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.BYTE_u</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.FALSE_BYTES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.MAX_BYTES_TO_BUFFER</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.NULL_BYTES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.SURR1_FIRST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.SURR1_LAST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.SURR2_FIRST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.SURR2_LAST</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.TRUE_BYTES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.ESCAPE_NON_ASCII</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBufferLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.setHighestNonEscapedChar(int)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBufferLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._bufferRecyclable</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBufferLength</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._characterEscapes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._entityBuffer</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._ioContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._maximumNonEscapedChar</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEscapes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segments(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.getOutputTarget()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._rootValueSeparator</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._throwInternal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._throwInternal()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asUnquotedUTF8()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._rootValueSeparator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asUnquotedUTF8()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.appendQuotedUTF8(byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asQuotedUTF8()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBufferLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.NULL_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asQuotedUTF8()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBufferLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segments(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segments(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_TARGET</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.inArray()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.inObject()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.isResourceManaged()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonGeneratorImpl.close()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.getOutputContext()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.flush()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.flush()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.getOutputContext()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.getOutputTarget()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.setHighestNonEscapedChar(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexBytes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.FALSE_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.NULL_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.TRUE_BYTES</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.FALSE_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.TRUE_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getEntryCount()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getParent()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getEntryCount()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getParent()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNull()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.isInfinite(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.isNaN(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.isInfinite(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.isNaN(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(float)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, byte[], int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asUnquotedUTF8()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.appendQuotedUTF8(byte[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asQuotedUTF8()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._charBufferLength</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMaxContiguous</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segments(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.BYTE_LF</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputStream</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._objectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._binaryValue</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._bufferRecyclable</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.AUTO_CLOSE_SOURCE</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.isResourceManaged()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputStream</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._ioContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._constructError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputProcessed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRow</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPadding()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getByteArrayBuilder()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.charToHex(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnrecognizedCharacterEscape(char)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesUtf8</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesUtf8</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getByteArrayBuilder()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesUtf8</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleEOF()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOFInValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportUnexpectedNumberChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetAsNaN(java.lang.String, double)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_SINGLE_QUOTES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOFInValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetAsNaN(java.lang.String, double)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnrecognizedCharacterEscape(char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_SINGLE_QUOTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeUtf8JsNames()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputStream</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getInputSource()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._ioContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.getName()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputProcessed</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputStream</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierPart(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopied</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopyBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._numTypesValid</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._objectCodec</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesLatin1</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.getEmptyName()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quad1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesLatin1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.getEmptyName()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportUnexpectedNumberChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetFloat(boolean, int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetInt(boolean, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quad1</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getPaddingChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPadding()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._bufferRecyclable</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._ioContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwInvalidSpace(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOFInValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierPart(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportMismatchedEndMarker(int, char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwInvalidSpace(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_COMMENTS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesUtf8</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwInvalidSpace(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleEOF()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwInvalidSpace(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwInvalidSpace(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwUnquotedSpace(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputTotal</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportInvalidNumber(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.String(char[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.close()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._binaryValue</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._constructError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getByteArrayBuilder()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._objectCodec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputProcessed</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._ioContext</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getInputSource()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputStream</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getIntValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getLongValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asCharArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._ioContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopyBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asCharArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextOffset()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenCharacterOffset()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenColumnNr()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLineNr()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._ioContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenCharacterOffset()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenColumnNr()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLineNr()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getValueAsString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.base.ParserBase.getValueAsString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputProcessed</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputStream</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.FALSE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TRUE</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asQuotedUTF8()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.expectComma()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getParent()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.inArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.inObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._binaryValue</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputProcessed</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._numTypesValid</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportMismatchedEndMarker(int, char)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputTotal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getLongValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nameCopied</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.END_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_ARRAY</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.START_OBJECT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NULL</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.expectComma()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getParent()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.inArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonReadContext.inObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._binaryValue</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputProcessed</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currInputRowStart</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._numTypesValid</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsingContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportMismatchedEndMarker(int, char)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportUnexpectedChar(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputCol</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputRow</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenInputTotal</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.getName()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._throwUnquotedSpace(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesLatin1</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesLatin1</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quad1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._textBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMoreGuaranteed()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetInt(boolean, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._currToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._tokenIncomplete</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(java.io.OutputStream)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportInvalidNumber(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.reportUnexpectedNumberChar(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetAsNaN(java.lang.String, double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetFloat(boolean, int, int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.resetInt(boolean, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesLatin1</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesUtf8</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._objectCodec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._quadBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidEOF(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.getEmptyName()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeLatin1()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.getInputCodeUtf8()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesLatin1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.sInputCodesUtf8</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_FALSE</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_STRING</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.VALUE_TRUE</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonToken.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.HEX_CHARS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.SHORT_WRITE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._allocateEntityBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._entityBuffer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._entityBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._allocateEntityBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._ioContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._maximumNonEscapedChar</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._allocateEntityBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._entityBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.HEX_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._allocateEntityBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._entityBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._releaseBuffers()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportUnsupportedOperation()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._rootValueSeparator</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._throwInternal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._throwInternal()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeValue()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._rootValueSeparator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asQuotedChars()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asQuotedChars()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_FIELD_NAMES</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._characterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._currentEscape</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._maximumNonEscapedChar</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</name>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.getOutputTarget()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.AUTO_CLOSE_TARGET</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.inArray()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.inObject()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.isResourceManaged()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonGeneratorImpl.close()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._releaseBuffers()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.getOutputContext()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.flush()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.flush()</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.getOutputContext()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.getOutputTarget()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexChars()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.HEX_CHARS</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._ioContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getEntryCount()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getParent()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inArray()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getEntryCount()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getParent()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.getTypeDesc()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.JsonWriteContext.inObject()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNull()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.isInfinite(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.isNaN(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.isInfinite(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.isNaN(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(float)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="feature" confirmed="no">java.math.BigInteger.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputInt(int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgNumbersAsStrings</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputHead</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportUnsupportedOperation()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._cfgPrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeContext</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.asQuotedChars()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._outputTail</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._reportUnsupportedOperation()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core.sym</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootByteSymbols</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._symbols</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collListShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._intern</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNamesShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._needRehash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._parent</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._tableInfo</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicReference</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._intern</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._parent</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._tableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.initTableInfo(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicReference</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicReference.AtomicReference(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.DEFAULT_TABLE_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.INITIAL_COLLISION_LEN</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.LAST_VALID_BUCKET</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MAX_COLL_CHAIN_FOR_REUSE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MAX_COLL_CHAIN_LENGTH</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MAX_ENTRIES_FOR_REUSE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MAX_TABLE_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MIN_HASH_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MULT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MULT2</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.MULT3</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.length()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collListShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNamesShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._needRehash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.expandCollision()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findBestBucket()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareCollision()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareMain()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareNames()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collCount</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.collisionCount()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findBestBucket()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.expandCollision()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findBestBucket()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareCollision()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collListShared</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareCollision()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.hashSeed()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._intern</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._longestCollisionList</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.maxCollisionLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.bucketCount()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareMain()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashShared</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.maybeDirty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareMain()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareNames()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNamesShared</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareNames()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._needRehash</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._parent</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._tableInfo</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicReference</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._intern</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.InternCache</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.instance</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._intern</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.InternCache</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.instance</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.bucketCount()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcQuads(byte[])</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.collisionCount()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.Name1(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.Name1(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.Name3(java.lang.String, int, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.NameN(java.lang.String, int, int[], int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.expandCollision()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findBestBucket()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.length()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.equals(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.equals(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.equals(int[], int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.getEmptyName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.getEmptyName()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.hashSeed()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.initTableInfo(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._tableInfo</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicReference</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicReference.get()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.maxCollisionLength()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._longestCollisionList</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.maybeDirty()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashShared</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._tableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.initTableInfo(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicReference</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicReference.get()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.fill(int[], int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.fill(java.lang.Object[], java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._next</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.length()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collListShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNamesShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._needRehash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.expandCollision()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findBestBucket()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.hashCode()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collListShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNamesShared</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._parent</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.maybeDirty()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._tableInfo</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicReference</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicReference.get()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareCollision()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collListShared</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareMain()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashShared</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareNames()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNamesShared</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collList</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.expandCollision()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findBestBucket()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.initTableInfo(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareCollision()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._length</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._next</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._length</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.length()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._name</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._next</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._next</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.equals(int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.hashCode()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._next</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.equals(int[], int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.hashCode()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.length()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._length</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findBestBucket()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.initTableInfo(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainNames</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collCount</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collEnd</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.count</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHash</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHashMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainNames</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.initTableInfo(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collCount</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collEnd</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.collList</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.count</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.longestCollisionList</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHash</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainHashMask</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainNames</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._rootCharSymbols</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.close()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._canonicalize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._intern</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._canonicalize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._indexMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._intern</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._parent</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._sizeThreshold</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._thresholdSize(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.DEFAULT_TABLE_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.HASH_MULT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.MAX_COLL_CHAIN_FOR_REUSE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.MAX_COLL_CHAIN_LENGTH</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.MAX_ENTRIES_FOR_REUSE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.MAX_TABLE_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.collisionCount()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._canonicalize</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.maybeDirty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashSeed</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.hashSeed()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashToIndex(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._indexMask</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._indexMask</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashToIndex(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._intern</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.maxCollisionLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._parent</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.size()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._sizeThreshold</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.bucketCount()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._thresholdSize(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.bucketCount()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashSeed</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashSeed</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.collisionCount()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.length()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.sBootstrapSymbolTable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.length()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._canonicalize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashToIndex(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._intern</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._sizeThreshold</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.InternCache</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.instance</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.String(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.hashSeed()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashSeed</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._indexMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._sizeThreshold</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._thresholdSize(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashSeed</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.maxCollisionLength()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.maybeDirty()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._indexMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._sizeThreshold</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.size()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getNext()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getSymbol()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.length()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._hashToIndex(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._indexMask</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._longestCollisionList</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._sizeThreshold</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._thresholdSize(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Error.Error(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.fill(java.lang.Object[], java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.release()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._dirty</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._parent</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.maybeDirty()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.sBootstrapSymbolTable</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.size()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._size</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.sBootstrapSymbolTable</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._buckets</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.collisionCount()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._length</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._next</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._symbol</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._length</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.length()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._next</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._symbol</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getSymbol()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._next</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._symbol</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getNext()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getSymbol()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getNext()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._next</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getSymbol()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._symbol</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.length()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._length</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.collisionCount()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.Name</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket._name</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.mainNames</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._mainNames</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.getEmptyName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.initTableInfo(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareNames()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name1</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name2</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name3</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.NameN</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name._hashCode</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name._name</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.Name1(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.Name3(java.lang.String, int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.NameN(java.lang.String, int, int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name._hashCode</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.hashCode()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name._name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.getName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.equals(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.equals(int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.equals(int[], int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.findName(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.equals(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.getName()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name._name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.hashCode()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name._hashCode</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.find(int, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name._name</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.Name1</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.getEmptyName()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.Name1(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.mQuad</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.equals(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.mQuad</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.equals(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.mQuad</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.equals(int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.mQuad</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.getEmptyName()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.sEmptyName</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.getEmptyName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.mQuad</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.Name1(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.equals(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.equals(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.equals(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.sEmptyName</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.getEmptyName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name1.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.Name1(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.sEmptyName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.Name2</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String, int, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.mQuad1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.mQuad2</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name2.equals(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name2.equals(int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.mQuad1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.mQuad2</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name2.equals(int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.mQuad1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.mQuad2</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name2.mQuad1</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.equals(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.equals(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name2.mQuad2</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.equals(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.equals(int[], int)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.Name3</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name3.Name3(java.lang.String, int, int, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.mQuad1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.mQuad2</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.mQuad3</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name3.equals(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name3.equals(int, int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name3.equals(int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.mQuad1</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.mQuad2</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.mQuad3</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name3.mQuad1</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.Name3(java.lang.String, int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.equals(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name3.mQuad2</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.Name3(java.lang.String, int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.equals(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.Name3.mQuad3</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.Name3(java.lang.String, int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.equals(int[], int)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.sym.NameN</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.NameN.NameN(java.lang.String, int, int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.mQuadLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.mQuads</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.NameN.equals(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.NameN.equals(int, int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.NameN.equals(int[], int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.mQuadLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.mQuads</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.NameN.mQuadLen</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.NameN(java.lang.String, int, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.equals(int[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.sym.NameN.mQuads</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.NameN(java.lang.String, int, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.equals(int[], int)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core.type</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.type.ResolvedType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.ResolvedType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.containedType(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.getContentType()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.getKeyType()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.getRawClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isAbstract()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isArrayType()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isConcrete()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isContainerType()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isEnumType()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isFinal()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isInterface()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.isThrowable()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.ResolvedType.toCanonical()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.type.TypeReference</name>
            <outbound type="class" confirmed="no">java.lang.Comparable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.TypeReference.TypeReference()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference._type</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getGenericSuperclass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getActualTypeArguments()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.TypeReference._type</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.getType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.TypeReference.compareTo(com.fasterxml.jackson.core.type.TypeReference)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.compareTo(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.TypeReference.compareTo(java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.compareTo(com.fasterxml.jackson.core.type.TypeReference)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.type.TypeReference.getType()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference._type</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.fasterxml.jackson.core.util</name>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.BufferRecycler</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._bufferRecycler</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.constructTextBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.SegmentedStringWriter(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._bufferRecycler</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._allocator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</name>
                <outbound type="class" confirmed="no">B[]</outbound>
                <outbound type="class" confirmed="no">C[]</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.values()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.values()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler._byteBuffers</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler._charBuffers</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.DEFAULT_WRITE_CONCAT_BUFFER_LEN</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler._byteBuffers</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler._charBuffers</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler._byteBuffers</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.balloc(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.size</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler._charBuffers</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.calloc(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.balloc(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.calloc(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler._byteBuffers</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler._charBuffers</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BASE64_CODEC_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BufferRecycler$ByteBufferType(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.size</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.READ_IO_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_CONCAT_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_ENCODING_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.size</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BufferRecycler$ByteBufferType(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BASE64_CODEC_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BufferRecycler$ByteBufferType(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.READ_IO_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_CONCAT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_ENCODING_BUFFER</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.BufferRecycler$CharBufferType(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.size</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.CONCAT_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.NAME_COPY_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TEXT_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TOKEN_BUFFER</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.size</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.BufferRecycler$CharBufferType(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.BufferRecycler$CharBufferType(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.CONCAT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.NAME_COPY_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TEXT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TOKEN_BUFFER</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.values()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[]</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[]</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.values()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[].clone()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.ByteArrayBuilder</name>
            <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._byteArrayBuilder</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendByteEscape(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._byteBuilder</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_CONCAT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastBlocks</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.OutputStream()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.DEFAULT_BLOCK_ARRAY_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.INITIAL_BLOCK_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.MAX_BLOCK_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.NO_BYTES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastBlocks</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastLen</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.finishCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder._bufferRecycler</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.finishCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.resetAndGetFirstSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.completeAndCoalesce(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegmentLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.setCurrentSegmentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder._pastBlocks</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder._pastLen</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendByteEscape(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.close()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.completeAndCoalesce(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.finishCurrentSegment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.flush()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegmentLength()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendByteEscape(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.WRITE_CONCAT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._bufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastBlocks</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastLen</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.release()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.resetAndGetFirstSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.resetAndGetFirstSegment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.setCurrentSegmentLength(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._appendByteEscape(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.NO_BYTES</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</name>
                <outbound type="class" confirmed="no">B[]</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.NO_BYTES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastBlocks</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.iterator()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.completeAndCoalesce(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[])</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlock</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._currBlockPtr</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.ByteArrayBuilder.write(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.Instantiatable</outbound>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.instance</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.instance</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.instance</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.instance</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.spacesInObjectEntries(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.instance</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.instance</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.spacesInObjectEntries(boolean)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.static {}</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.isInline()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.isInline()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.isInline()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.isInline()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.DefaultPrettyPrinter$FixedSpaceIndenter()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.DefaultPrettyPrinter$NopIndenter()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.instance</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.isInline()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.DefaultPrettyPrinter$FixedSpaceIndenter()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.instance</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.isInline()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.DefaultPrettyPrinter$Lf2SpacesIndenter()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.DefaultPrettyPrinter$NopIndenter()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SPACES</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SPACE_COUNT</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SYS_LF</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.instance</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.isInline()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.DefaultPrettyPrinter$Lf2SpacesIndenter()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SPACES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SYS_LF</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.instance</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.fill(char[], char)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SPACES</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SYS_LF</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</outbound>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.DefaultPrettyPrinter$NopIndenter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.DefaultPrettyPrinter$FixedSpaceIndenter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.DefaultPrettyPrinter$Lf2SpacesIndenter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.instance</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.isInline()</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.DefaultPrettyPrinter$NopIndenter()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.instance</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.Instantiatable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.Instantiatable.createInstance()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.InternCache</name>
            <outbound type="class" confirmed="no">java.util.LinkedHashMap</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.InternCache.InternCache()</name>
                <outbound type="feature" confirmed="no">java.util.LinkedHashMap.LinkedHashMap(int, float, boolean)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.InternCache.MAX_ENTRIES</name>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.InternCache.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.InternCache.instance</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.InternCache.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.InternCache.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.intern()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.InternCache.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.InternCache.removeEldestEntry(java.util.Map$Entry)</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.InternCache.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.InternCache.size()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.removeEldestEntry(java.util.Map$Entry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.InternCache.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.InternCache()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.instance</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.JsonGeneratorDelegate(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.JsonGenerator()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.close()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.close()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.JsonGeneratorDelegate(com.fasterxml.jackson.core.JsonGenerator)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCharacterEscapes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getHighestEscapedChar()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputTarget()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getPrettyPrinter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getSchema()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isClosed()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setHighestNonEscapedChar(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.useDefaultPrettyPrinter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(short)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawUTF8String(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeUTF8String(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.disable(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.enable(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.flush()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.flush()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCharacterEscapes()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getCodec()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getHighestEscapedChar()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputContext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getOutputContext()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputTarget()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getPrettyPrinter()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getSchema()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getSchema()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isClosed()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.isClosed()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setCodec(com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setHighestNonEscapedChar(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.useDefaultPrettyPrinter()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.useDefaultPrettyPrinter()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.version()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBoolean(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeEndArray()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeEndObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNull()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNull()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(float)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.UnsupportedOperationException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigDecimal)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigInteger)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(short)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartArray()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartArray()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(char[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(com.fasterxml.jackson.core.SerializableString)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(com.fasterxml.jackson.core.TreeNode)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeUTF8String(byte[], int, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.JsonParserDelegate</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.JsonParserDelegate(com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.JsonParser()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.clearCurrentToken()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.close()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.close()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.JsonParserDelegate(com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.version()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentLocation()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentName()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDecimalValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDoubleValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getFloatValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getInputSource()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getIntValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getLastClearedToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getLongValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberType()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getParsingContext()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getSchema()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getText()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextCharacters()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextLength()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextOffset()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTokenLocation()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.hasCurrentToken()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.hasTextCharacters()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isClosed()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextValue()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.overrideCurrentName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.skipChildren()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserDelegate.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.version()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.delegate</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.JsonParserSequence</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.JsonParserDelegate(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._nextParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._parsers</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence._nextParser</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence._parsers</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._nextParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._parsers</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.close()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.close()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.JsonParserSequence.delegate</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._parsers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser[]</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.toArray(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.delegate</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParseException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.JsonParserSequence.delegate</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._nextParser</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence._parsers</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.JsonParserSequence.delegate</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter</name>
            <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</outbound>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.TextBuffer</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.ParserBase(com.fasterxml.jackson.core.io.IOContext, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._textBuffer</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.constructTextBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._textBuffer</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.SegmentedStringWriter(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.getAndClear()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.MAX_SEGMENT_LEN</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.MIN_SEGMENT_LEN</name>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.NO_CHARS</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._allocator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.constructTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.SegmentedStringWriter(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._allocator</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._charArray(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._currentSegment</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._currentSize</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegmentSize()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._hasSegments</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._inputLen</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._inputStart</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.ensureNotShared()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.hasTextAsCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._resultArray</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.hasTextAsCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._resultString</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.hasTextAsCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._segmentSize</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer._segments</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.append(char)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</name>
                <outbound type="class" confirmed="no">C[]</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.NO_CHARS</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._charArray(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.size()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segments</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.clear()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.contentsAsArray()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.BigDecimal(char[])</outbound>
                <outbound type="feature" confirmed="no">java.math.BigDecimal.BigDecimal(char[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.contentsAsDouble()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</name>
                <outbound type="class" confirmed="no">C[]</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segments</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.String(char[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.String(char[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.size()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.getAndClear()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDouble()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.ensureNotShared()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.expand(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._charArray(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segments</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._charArray(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TEXT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._allocator</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._charArray(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segments</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegmentSize()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.getTextOffset()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.hasTextAsCharacters()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.TEXT_BUFFER</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._allocator</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.getAndClear()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._hasSegments</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.setCurrentLength(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.size()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultArray</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.NO_CHARS</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.toString()</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSegment</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._currentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputBuffer</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputLen</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._inputStart</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segmentSize</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.ensureNotShared()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.fasterxml.jackson.core.util.VersionUtil</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.PACKAGE_VERSION_CLASS_NAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.VERSION_FILE</name>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.VERSION_SEPARATOR</name>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.unknownVersion()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil._version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil._version</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.version()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.BufferedReader(java.io.Reader)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.readLine()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.unknownVersion()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getResourceAsStream(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replaceAll(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.load(java.io.InputStream)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Versioned</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Versioned.version()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getPackage()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.getMessage()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Package</outbound>
                <outbound type="feature" confirmed="no">java.lang.Package.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VERSION_SEPARATOR</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.split(java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.static {}</name>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VERSION_SEPARATOR</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.throwInternal()</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._throwInternal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.version()</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil._version</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</name>
                <outbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.unknownVersion()</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</outbound>
                <outbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStreamReader.close()</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.io.UnsupportedEncodingException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getResourceAsStream(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.BufferedReader</name>
            <feature confirmed="no">
                <name>java.io.BufferedReader.BufferedReader(java.io.Reader)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedReader.close()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedReader.readLine()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayInputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayInputStream.ByteArrayInputStream(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.CharConversionException</name>
            <feature confirmed="no">
                <name>java.io.CharConversionException.CharConversionException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Closeable</name>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.EOFException</name>
            <feature confirmed="no">
                <name>java.io.EOFException.EOFException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Flushable</name>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8JsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDoubleValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getFloatValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getIntValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getLongValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.skipChildren()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getFloatValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getIntValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getLongValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.hasMoreBytes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor.nextByte()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.read()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportStrangeStream()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.available()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.reset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readObject(java.io.ObjectInputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeObject(java.io.ObjectOutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.append(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeStringField(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCppComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segments(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parserNumber2(char[], int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCppComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseFieldName(int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumFieldName(int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.io.IOException.IOException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportStrangeStream()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.IOException.getMessage()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher._originalStream</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std._in</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader._in</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream._in</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.available()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.mark(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.markSupported()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.reset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper._in</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, byte[], int, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._inputStream</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getInputSource()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.InputStream()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.MergedStream(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.available()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.available()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.mark(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.mark(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.markSupported()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.markSupported()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read(byte[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.hasMoreBytes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.reset()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.skip(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.skip(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.InputStreamReader</name>
            <feature confirmed="no">
                <name>java.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStreamReader.close()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectInputStream</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readObject(java.io.ObjectInputStream)</inbound>
            <feature confirmed="no">
                <name>java.io.ObjectInputStream.readUTF()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readObject(java.io.ObjectInputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectOutputStream</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeObject(java.io.ObjectOutputStream)</inbound>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.writeUTF(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeObject(java.io.ObjectOutputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8JsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer._out</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputStream</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.getOutputTarget()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            <feature confirmed="no">
                <name>java.io.OutputStream.OutputStream()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.close()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.flush()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.write(byte[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.flush()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(java.io.OutputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStreamWriter</name>
            <feature confirmed="no">
                <name>java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Reader</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.io.Reader.Reader()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.BaseReader(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Reader.close()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Reader.read(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Serializable</name>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.StringReader</name>
            <feature confirmed="no">
                <name>java.io.StringReader.StringReader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.UnsupportedEncodingException</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.Writer</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext, java.io.Writer)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.append(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.WriterBasedJsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writer</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.getOutputTarget()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <feature confirmed="no">
                <name>java.io.Writer.Writer()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.SegmentedStringWriter(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.UTF8Writer(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.close()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.flush()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.write(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegment(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.write(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.Appendable</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.append(char)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.ArrayIndexOutOfBoundsException</name>
            <feature confirmed="no">
                <name>java.lang.ArrayIndexOutOfBoundsException.ArrayIndexOutOfBoundsException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Boolean</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            <feature confirmed="no">
                <name>java.lang.Boolean.FALSE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.TRUE</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.booleanValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Byte</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.CharSequence.subSequence(int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.CharSequence.toString()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <feature confirmed="no">
                <name>java.lang.Character.isDefined(char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.isDefined(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.isISOControl(char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.isISOControl(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.isJavaIdentifierPart(char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.copy()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getFormatName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.treeToValue(com.fasterxml.jackson.core.TreeNode, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType.getRawClass()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getClassLoader()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getGenericSuperclass()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getPackage()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getResourceAsStream(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.newInstance()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getResourceAsStream(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Comparable</name>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Deprecated</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createJsonParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createUTF8JsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportBase64EOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VERSION_FILE</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Double</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <feature confirmed="no">
                <name>java.lang.Double.isInfinite(double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.isNaN(double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.parseDouble(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.toString(double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.valueOf(double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonToken</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(java.lang.String, int, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.JsonFactory$Feature(java.lang.String, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.JsonGenerator$Feature(java.lang.String, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.JsonParser$Feature(java.lang.String, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.JsonParser$NumberType(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.MatchStrength(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BufferRecycler$ByteBufferType(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.BufferRecycler$CharBufferType(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.valueOf(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Error</name>
            <feature confirmed="no">
                <name>java.lang.Error.Error(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.getMessage()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Float</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.Float.isInfinite(float)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Float.isNaN(float)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.calcHash(int[], int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._illegalSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.NameN(java.lang.String, int, int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.getMessage()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalStateException</name>
            <feature confirmed="no">
                <name>java.lang.IllegalStateException.IllegalStateException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.parseInt(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseInt(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toHexString(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toString(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <feature confirmed="no">
                <name>java.lang.Long.parseLong(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseLong(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.toString(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Math</name>
            <feature confirmed="no">
                <name>java.lang.Math.max(int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._addSymbol(int, com.fasterxml.jackson.core.sym.Name)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.findBuffer(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.min(int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segments(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._readMore(java.io.InputStream, byte[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeSegmentCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchFieldError</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Number</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()</inbound>
            <feature confirmed="no">
                <name>java.lang.Number.byteValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Number.doubleValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Number.floatValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Number.intValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Number.longValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Number.shortValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NumberFormatException</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDouble()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variant</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.readResolve()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.Base64Variants</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.FormatSchema</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.values()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonFactory</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.values()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.readResolve()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.values()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonLocation</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation._sourceRef</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.getSourceRef()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.hashCode()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonParser$1</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.values()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.values()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getInputSource()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.values()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.treeToValue(com.fasterxml.jackson.core.TreeNode, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.PrettyPrinter</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.SerializableString</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.TreeNode</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.Version</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.Versioned</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase$1</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase$1</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.values()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexBytes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.copyHexChars()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.IOContext</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._sourceRef</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocBase64Buffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocConcatBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocNameCopyBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocReadIOBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocTokenBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.allocWriteEncodingBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.getSourceReference()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[])</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readResolve()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.getOutputTarget()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getCurrentLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getInputSource()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTokenLocation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.getOutputTarget()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.expandCollision()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareCollision()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareMain()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareNames()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.sym.Name</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.equals(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.compareTo(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.values()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.values()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.Instantiatable</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.Instantiatable.createInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.getOutputTarget()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.Base64Variants()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.JsonGenerator()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.JsonLocation(java.lang.Object, long, long, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.JsonParser()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.JsonParser(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.ObjectCodec()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.DataFormatMatcher(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.InputAccessor$Std(java.io.InputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.CharTypes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext.IOContext(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.InputDecorator.InputDecorator()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.NumberInput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.NumberOutput()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ByteSourceJsonBootstrapper(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.PackageVersion()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket.BytesToNameCanonicalizer$Bucket(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo.BytesToNameCanonicalizer$TableInfo(int, int, int[], com.fasterxml.jackson.core.sym.Name[], com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType.ResolvedType()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter.DefaultPrettyPrinter$NopIndenter()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getFormatName()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.hashCode()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.hashCode()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Package</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Package.getName()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.throwInternal()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Short</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._name</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.getName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.hashCode()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.readResolve()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.STD_BASE64_ALPHABET</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.FormatSchema.getSchemaType()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(java.lang.String, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding._javaName</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.getJavaName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonEncoding.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.JsonFactory$Feature(java.lang.String, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.FORMAT_NAME_JSON</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getFormatName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.JsonGenerator$Feature(java.lang.String, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.JsonParser$Feature(java.lang.String, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$Feature.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.JsonParser$NumberType(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser$NumberType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.overrideCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValueAsTree()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken._serialized</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.asString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.getValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.get(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.path(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.Version(int, int, int, java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._artifactId</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._groupId</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version._snapshotInfo</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.getArtifactId()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.getGroupId()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.hashCode()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.isSnapshot()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder, com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportBase64EOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchedFormatName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.MatchStrength(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.MatchStrength.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportStrangeStream()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyAlloc(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.IOContext._verifyRelease(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._illegalSurrogate(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MAX_LONG_STR</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.MIN_LONG_STR_NO_SIGN</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.NASTY_SMALL_DOUBLE</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[], int, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(java.lang.String, double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseInt(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseLong(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.SMALLEST_LONG</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs2</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.toString(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.getAndClear()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.SerializedString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._jdkSerializeValue</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString._value</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquoted(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedChars()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.charLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.getValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.hashCode()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readObject(java.io.ObjectInputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.readResolve()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeObject(java.io.ObjectOutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogate(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonGeneratorImpl.writeStringField(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext._currentName</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.reset(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext._currentName</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.reset(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.writeValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.PackageVersion.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnusualFieldName2(int, int, int[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeLongString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(char[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleApostropheValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnusualFieldName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseApostropheFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatText(char[], int, int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._verifyNoLeadingZeroes()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedFieldName(int[], int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseFieldName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyPrettyValueWrite(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNull()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.addName(java.lang.String, int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.constructName(int, java.lang.String, int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.CharsToNameCanonicalizer$Bucket(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket._symbol</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.getSymbol()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.CharsToNameCanonicalizer(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._symbols</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.bucketCount()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.initTables(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.makeOrphan(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.Name(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name._name</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.getName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.Name1(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.Name3.Name3(java.lang.String, int, int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.NameN.NameN(java.lang.String, int, int[], int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.ResolvedType.toCanonical()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.BufferRecycler$ByteBufferType(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.BufferRecycler$CharBufferType(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.SYS_LF</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeFieldName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRaw(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getText()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._resultString</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.hasTextAsCharacters()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.resetWithString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.PACKAGE_VERSION_CLASS_NAME</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VERSION_FILE</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.throwInternal()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.String.String(char[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.String(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(int[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseInt(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.compareTo(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.compareTo(com.fasterxml.jackson.core.Version)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseDouble(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int, com.fasterxml.jackson.core.SerializableString)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.getChars(int, int, char[], int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.hashCode()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.hashCode()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.intern()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.intern(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.isSnapshot()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[], int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.inLongRange(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(java.lang.String, double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseInt(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseLong(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.outputLong(long, char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.append(java.lang.CharSequence, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SegmentedStringWriter.write(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.charLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.write(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeFieldName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[], int, int, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeLongString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket.find(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.size()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replaceAll(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchToken(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toCharArray()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toString()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(java.lang.String, double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsInt(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.parseAsLong(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.doReadVersion(java.io.Reader)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(float)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberInput.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.NumberOutput.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuffer</name>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.StringBuffer(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.setCharAt(int, char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.toString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.appendQuoted(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.appendDesc(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.encode(byte[], boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonLocation.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBooleanValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getByteValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getShortValue()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toFullString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Version.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._handleEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int, char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportInvalidNumber(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportOverflowLong()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.reportUnexpectedNumberChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(char)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant, char, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.InputAccessor$Std.nextByte()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.BaseReader.reportBounds(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._convertSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.read(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(int, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF32Reader.reportUnexpectedEOF(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.UTF8Writer.illegalSurrogateDesc(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.reportWeirdUCS4(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonReadContext.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.JsonWriteContext.toString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFieldName2(int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.ReaderBasedJsonParser.parseNumberText2(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._decodeSurrogate(int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleInvalidNumberStart(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidInitial(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidOther(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.loadMore()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.reportTooManyCollisions(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.MergedStream.read(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[], int, int, byte[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[])</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[], int, com.fasterxml.jackson.core.SerializableString, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadToHaveAtLeast(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8StreamJsonParser.growArrayBy(int[], int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringASCII(char[], int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeStringCustom(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.expandCollision()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareCollision()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareMain()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.unshareNames()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.copyArrays()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.append(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.unshare(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.currentTimeMillis()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.err</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ThreadLocal</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._recyclerRef</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder._threadEncoder</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.ThreadLocal()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.get()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.set(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerationException.JsonGenerationException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParseException.JsonParseException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.UnsupportedOperationException</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.UnsupportedOperationException.UnsupportedOperationException()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._reportUnsupportedOperation()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.ref</name>
        <class confirmed="no">
            <name>java.lang.ref.SoftReference</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            <feature confirmed="no">
                <name>java.lang.ref.SoftReference.SoftReference(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ref.SoftReference.get()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.ParameterizedType</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.ParameterizedType.getActualTypeArguments()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Type</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.TypeReference()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference._type</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.type.TypeReference.getType()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.math</name>
        <class confirmed="no">
            <name>java.math.BigDecimal</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String, java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MAX_INT</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MAX_LONG</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MIN_INT</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BD_MIN_LONG</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowFloatValue(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigDecimal)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
            <feature confirmed="no">
                <name>java.math.BigDecimal.BigDecimal(char[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.BigDecimal(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.BigDecimal(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.BigDecimal(java.math.BigInteger)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.compareTo(java.math.BigDecimal)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.doubleValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.intValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.longValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.toBigInteger()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.toString()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigDecimal)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.valueOf(double)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigDecimal.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.math.BigInteger</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MAX_INT</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MAX_LONG</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MIN_INT</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.BI_MIN_LONG</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._numberBigInt</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.getNumberValue()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeNumber(java.math.BigInteger)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()</inbound>
            <feature confirmed="no">
                <name>java.math.BigInteger.BigInteger(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase._parseSlowIntValue(int, char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigInteger.compareTo(java.math.BigInteger)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigInteger.doubleValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigInteger.intValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigInteger.longValue()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigInteger.toString()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(java.math.BigInteger)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(java.math.BigInteger)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.math.BigInteger.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.ParserBase.static {}</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.getHost()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getPath()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getProtocol()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.openStream()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(java.net.URL)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.nio</name>
        <class confirmed="no">
            <name>java.nio.ByteBuffer</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.SerializableString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
            <feature confirmed="no">
                <name>java.nio.ByteBuffer.put(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.ByteBuffer.remaining()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(java.nio.ByteBuffer)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(java.nio.ByteBuffer)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer._segments</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.expand(int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.clear()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.clearSegments()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.get(int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.size()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.buildResultArray()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.TextBuffer.contentsAsString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.fill(char[], char)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Arrays.fill(int[], int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String, java.lang.String, boolean, char, int)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Arrays.fill(int[], int, int, int)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.io.CharTypes.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Arrays.fill(java.lang.Object[], java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.nukeSymbols()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.size()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collection.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.format.DataFormatDetector.DataFormatDetector(java.util.Collection)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.JsonParser.readValuesAs(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.ObjectCodec.readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.TreeNode.fieldNames()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.LinkedHashMap</name>
            <inbound type="class" confirmed="yes">com.fasterxml.jackson.core.util.InternCache</inbound>
            <feature confirmed="no">
                <name>java.util.LinkedHashMap.LinkedHashMap(int, float, boolean)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.InternCache()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.LinkedList</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._pastBlocks</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            <feature confirmed="no">
                <name>java.util.LinkedList.LinkedList()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.clear()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.isEmpty()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.iterator()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map$Entry</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.InternCache.removeEldestEntry(java.util.Map$Entry)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.Properties</name>
            <feature confirmed="no">
                <name>java.util.Properties.Properties()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.load(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent.atomic</name>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicBoolean</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicBoolean.get()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicInteger</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicInteger.get()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicLong</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.get()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.base.GeneratorBase._writeSimpleObject(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicReference</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean, int, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer._tableInfo</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicReference.AtomicReference(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.BytesToNameCanonicalizer(int, boolean, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicReference.get()</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.makeChild(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo)</inbound>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.size()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.regex</name>
        <class confirmed="no">
            <name>java.util.regex.Pattern</name>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.VERSION_SEPARATOR</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.compile(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.split(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
</dependencies>
